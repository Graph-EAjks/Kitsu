{"version":3,"file":"AssetTypes-C3N5eSx_.js","sources":["../../src/components/lists/AssetTypeList.vue","../../src/components/pages/AssetTypes.vue"],"sourcesContent":["<template>\n  <div class=\"data-list\">\n    <div class=\"datatable-wrapper\">\n      <table class=\"datatable\">\n        <thead class=\"datatable-head\">\n          <tr>\n            <th scope=\"col\" class=\"name\">\n              {{ $t('asset_types.fields.name') }}\n            </th>\n            <th scope=\"col\" class=\"short-name\">\n              {{ $t('asset_types.fields.short_name') }}\n            </th>\n            <th scope=\"col\" class=\"task-types\">\n              {{ $t('asset_types.fields.task_types') }}\n            </th>\n            <th scope=\"col\" class=\"actions\"></th>\n          </tr>\n        </thead>\n        <tbody class=\"datatable-body\" v-if=\"entries.length > 0\">\n          <tr class=\"datatable-row\" v-for=\"entry in entries\" :key=\"entry.id\">\n            <td class=\"name\">\n              {{ entry.name }}\n              <span :title=\"entry.description\" v-if=\"entry.description\">\n                <help-circle-icon class=\"icon is-small\" />\n              </span>\n            </td>\n            <td class=\"short-name\">\n              {{ entry.short_name }}\n            </td>\n            <td class=\"task-types\" v-if=\"(entry.task_types || []).length > 0\">\n              <span\n                :key=\"taskType.id\"\n                class=\"task-type-name flexrow-item\"\n                v-for=\"taskType in sortTaskTypes(entry.task_types)\"\n              >\n                <task-type-name :task-type=\"taskType\" v-if=\"taskType.id\" />\n              </span>\n            </td>\n            <td class=\"task-types\" v-else>\n              {{ $t('asset_types.include_all') }}\n            </td>\n            <row-actions-cell\n              :entry-id=\"entry.id\"\n              @edit-clicked=\"$emit('edit-clicked', entry)\"\n              @delete-clicked=\"$emit('delete-clicked', entry)\"\n            />\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <table-info :is-loading=\"isLoading\" :is-error=\"isError\"> </table-info>\n\n    <p class=\"has-text-centered nb-asset-types\">\n      {{ entries.length }} {{ $tc('asset_types.number', entries.length) }}\n    </p>\n  </div>\n</template>\n\n<script>\nimport { HelpCircleIcon } from 'lucide-vue-next'\nimport { mapGetters } from 'vuex'\n\nimport { sortTaskTypes } from '@/lib/sorting'\n\nimport RowActionsCell from '@/components/cells/RowActionsCell.vue'\nimport TableInfo from '@/components/widgets/TableInfo.vue'\nimport TaskTypeName from '@/components/widgets/TaskTypeName.vue'\n\nexport default {\n  name: 'asset-type-list',\n\n  components: {\n    HelpCircleIcon,\n    RowActionsCell,\n    TableInfo,\n    TaskTypeName\n  },\n\n  props: {\n    entries: {\n      type: Array,\n      default: () => []\n    },\n    isError: {\n      type: Boolean,\n      default: false\n    },\n    isLoading: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  emits: ['delete-clicked', 'edit-clicked'],\n\n  computed: {\n    ...mapGetters(['taskTypeMap'])\n  },\n\n  methods: {\n    sortTaskTypes(taskTypeIds = []) {\n      const taskTypes = taskTypeIds.map(taskTypeId =>\n        this.taskTypeMap.get(taskTypeId)\n      )\n      return sortTaskTypes(taskTypes)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.datatable-body tr:first-child th,\n.datatable-body tr:first-child td {\n  border-top: 0;\n}\n\n.name {\n  width: 300px;\n  padding: 1em;\n}\n</style>\n","<template>\n  <div class=\"asset-types page fixed-page\">\n    <list-page-header\n      :title=\"$t('asset_types.library_title')\"\n      :new-entry-label=\"$t('asset_types.new_asset_type')\"\n      :is-exportable=\"isActiveTab\"\n      @export-clicked=\"onExportClicked\"\n      @new-clicked=\"onNewClicked\"\n    />\n\n    <route-tabs class=\"mt2\" :active-tab=\"activeTab\" :tabs=\"tabs\" />\n\n    <asset-type-list\n      class=\"asset-type-list\"\n      :entries=\"assetTypesList\"\n      :is-loading=\"loading.list\"\n      :is-error=\"errors.list\"\n      @edit-clicked=\"onEditClicked\"\n      @delete-clicked=\"onDeleteClicked\"\n    />\n\n    <edit-asset-type-modal\n      :active=\"modals.edit\"\n      :is-loading=\"loading.edit\"\n      :is-error=\"errors.edit\"\n      :asset-type-to-edit=\"assetTypeToEdit\"\n      @cancel=\"modals.edit = false\"\n      @confirm=\"confirmEditAssetType\"\n    />\n\n    <delete-modal\n      :active=\"modals.del\"\n      :is-loading=\"loading.del\"\n      :is-error=\"errors.del\"\n      :text=\"deleteText\"\n      :error-text=\"$t('asset_types.delete_error')\"\n      @cancel=\"modals.del = false\"\n      @confirm=\"confirmDeleteAssetType\"\n    />\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\n\nimport csv from '@/lib/csv'\nimport stringHelpers from '@/lib/string'\n\nimport AssetTypeList from '@/components/lists/AssetTypeList.vue'\nimport DeleteModal from '@/components/modals/DeleteModal.vue'\nimport EditAssetTypeModal from '@/components/modals/EditAssetTypeModal.vue'\nimport ListPageHeader from '@/components/widgets/ListPageHeader.vue'\nimport RouteTabs from '@/components/widgets/RouteTabs.vue'\n\nexport default {\n  name: 'asset-types',\n\n  components: {\n    AssetTypeList,\n    DeleteModal,\n    EditAssetTypeModal,\n    ListPageHeader,\n    RouteTabs\n  },\n\n  data() {\n    return {\n      activeTab: 'active',\n      assetTypeToDelete: null,\n      assetTypeToEdit: {},\n      choices: [],\n      errors: {\n        del: false,\n        edit: false,\n        list: false\n      },\n      modals: {\n        del: false,\n        edit: false\n      },\n      loading: {\n        del: false,\n        edit: false,\n        list: false\n      },\n      tabs: [\n        {\n          name: 'active',\n          label: this.$t('main.active')\n        },\n        {\n          name: 'archived',\n          label: this.$t('main.archived')\n        }\n      ]\n    }\n  },\n\n  mounted() {\n    this.activeTab = this.$route.query.tab || 'active'\n  },\n\n  computed: {\n    ...mapGetters([\n      'assetTypes',\n      'archivedAssetTypes',\n      'getAssetType',\n      'taskTypeMap'\n    ]),\n\n    isActiveTab() {\n      return this.activeTab === 'active'\n    },\n\n    assetTypesList() {\n      return this.isActiveTab ? this.assetTypes : this.archivedAssetTypes\n    },\n\n    deleteText() {\n      const assetType = this.assetTypeToDelete\n      if (assetType) {\n        return this.$t('asset_types.delete_text', { name: assetType.name })\n      } else {\n        return ''\n      }\n    }\n  },\n\n  methods: {\n    ...mapActions([\n      'deleteAssetType',\n      'editAssetType',\n      'newAssetType',\n      'loadAssetTypes'\n    ]),\n\n    confirmEditAssetType(form) {\n      let action = 'newAssetType'\n      if (this.assetTypeToEdit && this.assetTypeToEdit.id) {\n        action = 'editAssetType'\n        form.id = this.assetTypeToEdit.id\n      }\n\n      this.loading.edit = true\n      this.errors.edit = false\n      this[action](form)\n        .then(() => {\n          this.loading.edit = false\n          this.modals.edit = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.loading.edit = false\n          this.errors.edit = true\n        })\n    },\n\n    confirmDeleteAssetType() {\n      this.loading.del = true\n      this.errors.del = false\n      this.deleteAssetType(this.assetTypeToDelete)\n        .then(() => {\n          this.loading.del = false\n          this.modals.del = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.errors.del = true\n          this.loading.del = false\n        })\n    },\n\n    onExportClicked() {\n      const name = stringHelpers.slugify(this.$t('asset_types.title'))\n      const headers = [\n        this.$t('main.type'),\n        this.$t('asset_types.fields.name'),\n        this.$t('asset_types.fields.short_name'),\n        this.$t('asset_types.fields.description'),\n        this.$t('asset_types.fields.task_types')\n      ]\n      const entries = [headers].concat(\n        this.assetTypes.map(assetType => [\n          assetType.type,\n          assetType.name,\n          assetType.short_name,\n          assetType.description,\n          assetType.task_types.length\n            ? assetType.task_types\n                .map(taskTypeId => this.taskTypeMap.get(taskTypeId)?.name)\n                .join(', ')\n            : this.$t('asset_types.include_all')\n        ])\n      )\n      csv.buildCsvFile(name, entries)\n    },\n\n    onNewClicked() {\n      this.assetTypeToEdit = {}\n      this.errors.edit = false\n      this.modals.edit = true\n    },\n\n    onEditClicked(assetType) {\n      this.assetTypeToEdit = assetType\n      this.errors.edit = false\n      this.modals.edit = true\n    },\n\n    onDeleteClicked(assetType) {\n      this.assetTypeToDelete = assetType\n      this.errors.del = false\n      this.modals.del = true\n    }\n  },\n\n  watch: {\n    $route() {\n      this.activeTab = this.$route.query.tab || 'active'\n    }\n  },\n\n  head() {\n    return {\n      title: `${this.$t('asset_types.title')} - Kitsu`\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.asset-type-list {\n  margin-top: 0;\n}\n</style>\n"],"names":["_sfc_main","HelpCircleIcon","RowActionsCell","TableInfo","TaskTypeName","mapGetters","taskTypeIds","taskTypes","taskTypeId","sortTaskTypes","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_14","_openBlock","_createElementBlock","_createElementVNode","_hoisted_5","_toDisplayString","_ctx","_hoisted_6","_hoisted_7","$props","_hoisted_8","_Fragment","_renderList","entry","_createTextVNode","_createVNode","_component_help_circle_icon","_createCommentVNode","_hoisted_12","$options","taskType","_createBlock","_component_task_type_name","_hoisted_13","_component_row_actions_cell","$event","_component_table_info","AssetTypeList","DeleteModal","EditAssetTypeModal","ListPageHeader","RouteTabs","assetType","mapActions","form","action","err","name","stringHelpers","entries","csv","_component_list_page_header","_component_route_tabs","$data","_component_asset_type_list","_component_edit_asset_type_modal","_cache","_component_delete_modal"],"mappings":"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"}