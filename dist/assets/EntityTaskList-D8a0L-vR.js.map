{"version":3,"file":"EntityTaskList-D8a0L-vR.js","sources":["../../src/components/mixins/entity.js","../../src/components/pages/entities/EntityNews.vue","../../src/components/pages/entities/EntityPreviewFileCard.vue","../../src/components/pages/entities/EntityPreviewFiles.vue","../../src/components/pages/entities/EntityTimeLogs.vue","../../src/components/lists/EntityTaskList.vue"],"sourcesContent":["import moment from 'moment'\nimport { mapGetters, mapActions } from 'vuex'\n\nimport { getEntityPath } from '@/lib/path'\nimport stringHelpers from '@/lib/string'\nimport {\n  daysToMinutes,\n  getBusinessDays,\n  getFirstStartDate,\n  getLastEndDate,\n  parseDate,\n  parseSimpleDate\n} from '@/lib/time'\n\nimport assetsStore from '@/store/modules/assets'\nimport editsStore from '@/store/modules/edits'\nimport episodesStore from '@/store/modules/episodes'\nimport sequencesStore from '@/store/modules/sequences'\nimport shotsStore from '@/store/modules/shots'\n\n/*\n * Common functions for asset, edit, episode, sequence and shot pages.\n */\nexport const entityMixin = {\n  data() {\n    return {\n      currentSection: 'infos',\n      zoomLevel: 1,\n      entityNavOptions: [\n        { label: this.$t('main.label.info'), value: 'infos' },\n        { label: this.$t('main.label.chat'), value: 'chat' },\n        { label: this.$t('main.label.casting'), value: 'casting' },\n        { label: this.$t('main.label.schedule'), value: 'schedule' },\n        { label: this.$t('main.label.preview_files'), value: 'preview-files' },\n        { label: this.$t('main.label.timelog'), value: 'time-logs' }\n      ],\n      scheduleItems: [],\n      zoomOptions: [\n        { label: '1', value: 1 },\n        { label: '2', value: 2 },\n        { label: '3', value: 3 }\n      ]\n    }\n  },\n\n  computed: {\n    ...mapGetters(['organisation']),\n\n    assetList() {\n      return assetsStore.cache.assets\n    },\n\n    editList() {\n      return editsStore.cache.edits\n    },\n\n    episodeList() {\n      return episodesStore.cache.episodes\n    },\n\n    sequenceList() {\n      return sequencesStore.cache.sequences\n    },\n\n    shotList() {\n      return shotsStore.cache.shots\n    },\n\n    entityTabs() {\n      return this.entityNavOptions.map(option => {\n        return {\n          label: option.label,\n          name: option.value\n        }\n      })\n    },\n\n    currentEntity() {\n      return this[`current${stringHelpers.capitalize(this.type)}`]\n    },\n\n    entityList() {\n      return this[`${this.type}List`] || []\n    },\n\n    previousEntity() {\n      if (!this.currentEntity) return null\n      const entityIndex = this.getEntityIndex(this.currentEntity.id)\n      if (entityIndex === -1) return null\n      return entityIndex > 0\n        ? this.entityList[entityIndex - 1]\n        : this.entityList[this.entityList.length - 1]\n    },\n\n    nextEntity() {\n      if (!this.currentEntity) return null\n      const entityIndex = this.getEntityIndex(this.currentEntity.id)\n      if (entityIndex === -1) return null\n      return entityIndex < this.entityList.length - 1\n        ? this.entityList[entityIndex + 1]\n        : this.entityList[0]\n    },\n\n    previousEntityPath() {\n      const entity = this.previousEntity\n      if (!entity) return null\n      return getEntityPath(\n        entity.id,\n        this.currentProduction.id,\n        this.type,\n        this.currentEpisode?.id\n      )\n    },\n\n    nextEntityPath() {\n      const entity = this.nextEntity\n      if (!entity) return null\n      return getEntityPath(\n        entity.id,\n        this.currentProduction.id,\n        this.type,\n        this.currentEpisode?.id\n      )\n    },\n\n    thumbnailPath() {\n      const previewId = this.currentEntity.preview_file_id\n      return `/api/pictures/originals/preview-files/${previewId}.png`\n    },\n\n    isPreview() {\n      return (\n        this.currentEntity &&\n        this.currentEntity.preview_file_id &&\n        this.currentEntity.preview_file_id.length > 0\n      )\n    },\n\n    currentTasks() {\n      const entity = this[`current${stringHelpers.capitalize(this.type)}`]\n      if (!entity || !entity.tasks) return []\n      return entity\n        ? entity.tasks\n            .map(taskId => this.taskMap.get(taskId))\n            .filter(task => task)\n            .sort((a, b) => {\n              const taskTypeAPriority = this.getTaskTypePriority(a.task_type_id)\n              const taskTypeBPriority = this.getTaskTypePriority(b.task_type_id)\n              return taskTypeAPriority - taskTypeBPriority\n            })\n        : []\n    },\n\n    tasksStartDate() {\n      if (\n        this.scheduleItems.length > 0 &&\n        this.scheduleItems[0].children.length > 0\n      ) {\n        return getFirstStartDate(this.scheduleItems[0].children)\n          .clone()\n          .add(-60, 'days')\n      } else {\n        return parseDate(this.currentProduction.start_date)\n      }\n    },\n\n    tasksEndDate() {\n      if (\n        this.scheduleItems.length > 0 &&\n        this.scheduleItems[0].children.length > 0\n      ) {\n        return getLastEndDate(this.scheduleItems[0].children)\n          .clone()\n          .add(60, 'days')\n      } else {\n        return parseDate(this.currentProduction.end_date)\n      }\n    }\n  },\n\n  methods: {\n    ...mapActions(['addSelectedTask', 'clearSelectedTasks', 'updateTask']),\n\n    getEntityIndex(entityId) {\n      return this.entityList.findIndex(entity => entity.id === entityId)\n    },\n\n    changeTab(tab) {\n      this.selectedTab = tab\n    },\n\n    onEditClicked() {\n      this.modals.edit = true\n    },\n\n    onTaskSelected(task) {\n      this.clearSelectedTasks()\n      if (!this.currentTask || this.currentTask.id !== task.id) {\n        this.addSelectedTask(task)\n        this.currentTask = task\n      } else {\n        this.currentTask = null\n      }\n    },\n\n    initScheduleItems() {\n      let manDays = 0\n      const rootElement = {\n        avatar: false,\n        id: 'root',\n        name: 'Tasks',\n        color: '#888',\n        priority: 1,\n        expanded: true,\n        loading: false,\n        children: [],\n        editable: true\n      }\n      const limitStartDate = moment()\n      const children = this.currentTasks\n        .map(task => {\n          const estimation = task.estimation\n          let startDate = limitStartDate.clone()\n          let endDate\n\n          if (\n            !task.start_date &&\n            !task.real_start_date &&\n            !task.due_date &&\n            !task.end_date\n          )\n            return null\n\n          if (task.start_date) {\n            startDate = parseSimpleDate(task.start_date)\n          } else if (task.real_start_date) {\n            startDate = parseSimpleDate(task.real_start_date)\n          }\n\n          if (task.due_date) {\n            endDate = parseSimpleDate(task.due_date)\n          } else if (task.end_date) {\n            endDate = parseSimpleDate(task.end_date)\n          } else if (task.estimation) {\n            endDate = startDate.clone().add(estimation, 'days')\n          }\n\n          if (!endDate || endDate.isBefore(startDate)) {\n            endDate = startDate.clone().add(1, 'days')\n          }\n          if (estimation) manDays += task.estimation\n          const taskType = this.taskTypeMap.get(task.task_type_id)\n\n          return {\n            ...task,\n            name: taskType.name,\n            startDate: startDate,\n            endDate: endDate,\n            expanded: false,\n            loading: false,\n            man_days: estimation,\n            editable: true,\n            unresizable: false,\n            parentElement: rootElement,\n            color: taskType.color,\n            children: []\n          }\n        })\n        .filter(c => c !== null)\n      let rootStartDate = moment()\n      let rootEndDate = moment().add(1, 'days')\n      if (children.length > 0) {\n        rootStartDate = getFirstStartDate(children)\n        rootEndDate = getLastEndDate(children)\n      }\n      Object.assign(rootElement, {\n        children: children,\n        startDate: rootStartDate,\n        endDate: rootEndDate,\n        man_days: manDays\n      })\n      this.scheduleItems = [rootElement]\n    },\n\n    saveTaskScheduleItem(item) {\n      const daysLength = getBusinessDays(item.startDate, item.endDate)\n      const estimation = daysToMinutes(this.organisation, daysLength)\n      item.man_days = estimation\n      if (item.startDate && item.endDate) {\n        this.updateTask({\n          taskId: item.id,\n          data: {\n            estimation,\n            start_date: item.startDate.format('YYYY-MM-DD'),\n            due_date: item.endDate.format('YYYY-MM-DD')\n          }\n        })\n      }\n    }\n  },\n\n  watch: {\n    $route() {\n      const entityId = this.route.params[`${this.type}_id`]\n      const currentEntity =\n        this[`current${stringHelpers.capitalize(this.type)}`]\n      if (currentEntity && currentEntity.id !== entityId) {\n        this.init()\n      }\n      this.currentSection = this.route.query.section || 'infos'\n    },\n\n    currentSection() {\n      if (this.currentSection === 'schedule' && this.scheduleItems.length > 0) {\n        if (this.$refs['schedule-widget']) {\n          this.$refs['schedule-widget'].scrollToDate(\n            this.scheduleItems[0].startDate\n          )\n        }\n      }\n    },\n\n    currentTasks: {\n      immediate: true,\n      handler() {\n        this.initScheduleItems()\n      }\n    },\n\n    zoomLevel() {\n      if (this.$refs['schedule-widget']) {\n        this.$refs['schedule-widget'].scrollToDate(\n          this.scheduleItems[0].startDate\n        )\n      }\n    }\n  }\n}\n","<template>\n  <div class=\"news flexcolumn\">\n    <div class=\"has-text-centered\" v-if=\"isLoading\">\n      <spinner />\n    </div>\n    <div class=\"timeline mt1\" v-else-if=\"newsList.length\">\n      <div\n        class=\"timeline-entry flexrow\"\n        :key=\"`news-${news.id}`\"\n        v-for=\"news in newsList\"\n      >\n        <span\n          :class=\"{\n            dot: true,\n            red: hasRetakeValue(news),\n            green: hasDoneValue(news)\n          }\"\n        ></span>\n        <span class=\"date flexrow-item\">\n          {{ formatFullDate(news.created_at).substring(10, 0) }}\n        </span>\n\n        <people-avatar\n          class=\"flexrow-item\"\n          :font-size=\"14\"\n          :is-link=\"false\"\n          :person=\"personMap.get(news.author_id)\"\n          :size=\"30\"\n          v-if=\"personMap.get(news.author_id)\"\n        />\n\n        <div class=\"flexrow-item task-type-wrapper ml1\">\n          <task-type-name\n            class=\"task-type-name\"\n            :is-static=\"true\"\n            :production-id=\"currentProduction.id\"\n            :task-type=\"buildTaskTypeFromNews(news)\"\n          />\n        </div>\n\n        <div class=\"flexrow-item validation-wrapper\">\n          <validation-tag\n            :is-priority=\"false\"\n            :is-static=\"true\"\n            :task=\"buildTaskFromNews(news)\"\n            :thin=\"!news.change\"\n          />\n        </div>\n      </div>\n    </div>\n    <div v-else>\n      {{ $t('news.no_news') }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\n\nimport { formatListMixin } from '@/components/mixins/format'\n\nimport Spinner from '@/components/widgets/Spinner.vue'\nimport PeopleAvatar from '@/components/widgets/PeopleAvatar.vue'\nimport TaskTypeName from '@/components/widgets/TaskTypeName.vue'\nimport ValidationTag from '@/components/widgets/ValidationTag.vue'\n\nexport default {\n  name: 'entity-news',\n\n  mixins: [formatListMixin],\n\n  components: {\n    PeopleAvatar,\n    Spinner,\n    TaskTypeName,\n    ValidationTag\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      newsList: []\n    }\n  },\n\n  props: {\n    entity: {\n      type: Object,\n      default: () => {}\n    }\n  },\n\n  mounted() {\n    this.reset()\n  },\n\n  computed: {\n    ...mapGetters([\n      'currentProduction',\n      'personMap',\n      'taskTypeMap',\n      'taskStatusMap'\n    ])\n  },\n\n  methods: {\n    ...mapActions(['getEntityNews']),\n\n    buildTaskFromNews(news) {\n      return {\n        task_status_id: news.task_status_id\n      }\n    },\n\n    buildTaskTypeFromNews(news) {\n      return {\n        ...this.taskTypeMap.get(news.task_type_id),\n        episode_id: news.episode_id\n      }\n    },\n\n    hasRetakeValue(news) {\n      const taskStatus = this.taskStatusMap.get(news.task_status_id)\n      return taskStatus ? news.change && taskStatus.is_retake : false\n    },\n\n    hasDoneValue(news) {\n      const taskStatus = this.taskStatusMap.get(news.task_status_id)\n      return taskStatus ? news.change && taskStatus.is_done : false\n    },\n\n    reset() {\n      if (!this.entity) {\n        return\n      }\n      this.isLoading = true\n      this.getEntityNews(this.entity.id)\n        .then(data => {\n          this.newsList = data.data\n        })\n        .catch(err => {\n          console.error(err)\n          this.newsList = []\n        })\n        .finally(() => {\n          this.isLoading = false\n        })\n    }\n  },\n\n  watch: {\n    entity() {\n      this.reset()\n    }\n  },\n\n  socket: {\n    events: {\n      'news:new'(eventData) {\n        if (\n          eventData.project_id === this.currentProduction.id &&\n          (!this.taskTypeId || this.taskTypeId === eventData.task_type_id) &&\n          (!this.taskStatusId || this.taskStatusId === eventData.task_status_id)\n        ) {\n          this.reset()\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.news {\n  overflow: auto;\n}\n\n.timeline {\n  border-left: 4px solid $blue-light;\n  margin-left: 8px;\n  padding-bottom: 1em;\n  margin-bottom: 1em;\n\n  .timeline-entry {\n    padding: 0.5em;\n    position: relative;\n\n    .dot {\n      position: absolute;\n      display: block;\n      left: -9px;\n      background: $blue-light;\n      width: 14px;\n      height: 14px;\n      border-radius: 16px;\n      z-index: 10;\n\n      &.red {\n        background: $red;\n      }\n\n      &.green {\n        background: $light-green;\n      }\n    }\n  }\n\n  .date {\n    min-width: 30px;\n    margin-left: 0.5em;\n    margin-right: 3em;\n    font-size: 0.8em;\n    color: $grey;\n    white-space: nowrap;\n  }\n\n  .task-type-wrapper {\n    min-width: 100px;\n  }\n\n  .validation-wrapper {\n    min-width: 60px;\n  }\n}\n</style>\n","<template>\n  <div class=\"preview-card flexcolumn\" :key=\"previewFile.id\">\n    <entity-preview\n      :entity=\"{\n        preview_file_id: previewFile.id,\n        preview_file_extension: previewFile.extension\n      }\"\n      :empty-height=\"200\"\n      :empty-width=\"300\"\n      :height=\"200\"\n      :width=\"300\"\n      is-rounded-top-border\n      show-movie\n    />\n    <div class=\"preview-card-data\">\n      <div class=\"flexrow\">\n        <span class=\"card-revision tag strong flexrow-item\">\n          v{{ previewFile.revision }}\n        </span>\n        <span\n          class=\"card-file-name flexrow-item\"\n          :title=\"previewFile.original_name\"\n        >\n          {{ previewFile.original_name }}\n        </span>\n        <span class=\"filler\"></span>\n        <span class=\"card-extension flexrow-item mr0\">\n          {{ previewFile.extension }}\n        </span>\n      </div>\n      <div class=\"flexrow mt1\">\n        <span\n          class=\"preview-status mr05\"\n          :title=\"previewFile.validation_status\"\n          :data-status=\"previewFile.validation_status\"\n        ></span>\n        <people-avatar\n          class=\"person\"\n          :person=\"personMap.get(previewFile.person_id)\"\n          :font-size=\"10\"\n          :size=\"20\"\n        />\n        <span class=\"filler\"></span>\n        <span\n          class=\"card-file-size flexrow-item mr05\"\n          v-if=\"previewFile.file_size\"\n        >\n          {{ renderFileSize(previewFile.file_size) }}B\n        </span>\n        <a\n          class=\"download-button\"\n          :href=\"getDownloadPath(previewFile.id)\"\n          :title=\"$t('playlists.actions.download_file')\"\n          v-if=\"!isCurrentUserArtist\"\n        >\n          <download-icon class=\"icon is-small\" />\n        </a>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport { DownloadIcon } from 'lucide-vue-next'\n\nimport { renderFileSize } from '@/lib/render'\n\nimport EntityPreview from '@/components/widgets/EntityPreview.vue'\nimport PeopleAvatar from '@/components/widgets/PeopleAvatar.vue'\n\nexport default {\n  name: 'entity-preview-file-card',\n\n  components: {\n    DownloadIcon,\n    EntityPreview,\n    PeopleAvatar\n  },\n\n  props: {\n    previewFile: {\n      type: Object,\n      required: true,\n      default: () => {}\n    }\n  },\n\n  mounted() {},\n\n  computed: {\n    ...mapGetters([\n      'isCurrentUserArtist',\n      'personMap',\n      'taskMap',\n      'taskTypeMap'\n    ])\n  },\n\n  methods: {\n    getTaskType(previewFile) {\n      const task = this.taskMap.get(previewFile.task_id)\n      return this.taskTypeMap.get(task.task_type_id)\n    },\n\n    getDownloadPath(previewFileId) {\n      const type = this.previewFile.extension === 'mp4' ? 'movies' : 'pictures'\n      return `/api/${type}/originals/preview-files/${previewFileId}/download`\n    },\n\n    renderFileSize\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.preview-card {\n  background: var(--background);\n  border-radius: 10px;\n  box-shadow: 4px 4px 5px 0 rgba(0, 0, 0, 0.1);\n  margin-right: 1rem;\n  margin-bottom: 1rem;\n  max-width: 300px;\n  overflow: hidden;\n\n  .card-revision {\n    margin-right: 0.5rem;\n  }\n\n  .preview-card-data {\n    padding: 0.5rem;\n  }\n\n  .card-file-name {\n    display: inline-block;\n    font-size: 0.9rem;\n    overflow: hidden;\n    max-width: 240px;\n    text-overflow: ellipsis;\n    text-transform: uppercase;\n    white-space: nowrap;\n    word-break: none;\n  }\n\n  .card-extension {\n    background: var(--background-alt);\n    border-radius: 4px;\n    font-size: 0.8rem;\n    padding: 0.2rem 0.5rem;\n    margin-right: 0rem;\n    text-transform: uppercase;\n  }\n\n  .preview-status {\n    background: #aaa;\n    border: 2px solid $grey;\n    border-radius: 50%;\n    height: 20px;\n    min-width: 20px;\n    width: 20px;\n\n    &[data-status='validated'] {\n      background: $light-green;\n    }\n    &[data-status='rejected'] {\n      background: $red;\n    }\n  }\n\n  .card-file-size {\n    color: var(--text-light);\n    font-weight: 600;\n    font-size: 0.9rem;\n  }\n\n  .download-button {\n    padding-top: 0.5rem;\n    padding-right: 0.1rem;\n  }\n}\n</style>\n","<template>\n  <div class=\"mt1 flexcolumn wrapper preview-files\">\n    <div class=\"buttons flexrow mb1\">\n      <button-simple\n        class=\"flexrow-item\"\n        icon=\"grid\"\n        :is-on=\"contactSheetMode\"\n        :title=\"$t('tasks.show_contact_sheet')\"\n        @click=\"contactSheetMode = !contactSheetMode\"\n      />\n    </div>\n    <div class=\"has-text-centered\" v-if=\"isLoading\">\n      <spinner />\n    </div>\n    <div v-else-if=\"previewFiles.length > 0 && !isLoading\">\n      <div class=\"contact-sheet flexcolumn\" v-if=\"contactSheetMode\">\n        <div\n          :key=\"`task-type-group-${index}`\"\n          v-for=\"(taskTypePreviewFiles, index) in taskTypePreviewFileGroups\"\n        >\n          <div class=\"flexrow-item mb1\">\n            <task-type-name :task-type=\"getTaskType(taskTypePreviewFiles[0])\" />\n          </div>\n\n          <div class=\"flexrow task-types-preview mb2\">\n            <entity-preview-file-card\n              :key=\"previewFile.id\"\n              :preview-file=\"previewFile\"\n              v-for=\"previewFile in taskTypePreviewFiles\"\n            />\n          </div>\n        </div>\n      </div>\n      <table class=\"datatable\" v-else>\n        <thead class=\"datatable-head\">\n          <tr class=\"datatable-row-header\">\n            <th class=\"thumbnail\"></th>\n            <th class=\"type\">\n              {{ $t('entities.preview_files.task_type') }}\n            </th>\n            <th class=\"original-name\">\n              {{ $t('entities.preview_files.original_file_name') }}\n            </th>\n            <th class=\"revision\">\n              {{ $t('entities.preview_files.revision') }}\n            </th>\n            <th class=\"extension\">\n              {{ $t('entities.preview_files.extension') }}\n            </th>\n            <th class=\"size\">\n              {{ $t('entities.preview_files.size') }}\n            </th>\n            <th class=\"status\">\n              {{ $t('entities.preview_files.status') }}\n            </th>\n            <th class=\"person\">\n              {{ $t('entities.preview_files.uploader') }}\n            </th>\n            <th class=\"date\">\n              {{ $t('entities.preview_files.uploaded_at') }}\n            </th>\n            <th class=\"end-cell\"></th>\n          </tr>\n        </thead>\n        <tbody class=\"datatable-body\">\n          <tr\n            :key=\"previewFile.id\"\n            class=\"datatable-row\"\n            v-for=\"previewFile in taskTypePreviewFileGroups.flat()\"\n          >\n            <td class=\"thumbnail\">\n              <entity-thumbnail\n                class=\"preview-thumbnail\"\n                :preview-file-id=\"previewFile.id\"\n                :empty-width=\"60\"\n                :width=\"60\"\n                :empty-height=\"40\"\n                :height=\"40\"\n              />\n            </td>\n\n            <task-type-cell\n              class=\"type\"\n              :task-type=\"getTaskType(previewFile)\"\n              :production-id=\"currentProduction.id\"\n            />\n            <td class=\"original-name\">\n              {{ previewFile.original_name }}\n            </td>\n            <td class=\"revision\">\n              {{ previewFile.revision }}\n            </td>\n            <td class=\"extension\">\n              {{ previewFile.extension }}\n            </td>\n            <td class=\"size\">\n              {{ renderFileSize(previewFile.file_size) }}\n            </td>\n            <td class=\"status\">\n              {{ previewFile.validation_status }}\n            </td>\n            <people-name-cell\n              class=\"person\"\n              :person=\"personMap.get(previewFile.person_id)\"\n            />\n            <td class=\"date\">\n              {{ formatDate(previewFile.created_at) }}\n            </td>\n\n            <td class=\"download\">\n              <a\n                class=\"button flexrow-item\"\n                :href=\"getDownloadPath(previewFile.id)\"\n                :title=\"$t('playlists.actions.download_file')\"\n                v-if=\"!isCurrentUserArtist\"\n              >\n                <download-icon class=\"icon is-small\" />\n              </a>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <div v-else>\n      {{ $t('entities.preview_files.no_preview_files') }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport { DownloadIcon } from 'lucide-vue-next'\nimport { mapGetters, mapActions } from 'vuex'\n\nimport { renderFileSize } from '@/lib/render'\nimport { formatDate } from '@/lib/time'\nimport preferences from '@/lib/preferences'\nimport { getTaskTypePriorityOfProd } from '@/lib/productions'\n\nimport ButtonSimple from '@/components/widgets/ButtonSimple.vue'\nimport EntityThumbnail from '@/components/widgets/EntityThumbnail.vue'\nimport EntityPreviewFileCard from '@/components/pages/entities/EntityPreviewFileCard.vue'\nimport PeopleNameCell from '@/components/cells/PeopleNameCell.vue'\nimport Spinner from '@/components/widgets/Spinner.vue'\nimport TaskTypeName from '@/components/widgets/TaskTypeName.vue'\nimport TaskTypeCell from '@/components/cells/TaskTypeCell.vue'\n\nexport default {\n  name: 'entity-preview-files',\n\n  components: {\n    ButtonSimple,\n    DownloadIcon,\n    EntityPreviewFileCard,\n    EntityThumbnail,\n    PeopleNameCell,\n    Spinner,\n    TaskTypeCell,\n    TaskTypeName\n  },\n\n  data() {\n    return {\n      contactSheetMode: false,\n      isLoading: false,\n      previewFiles: []\n    }\n  },\n\n  props: {\n    entity: {\n      type: Object,\n      default: () => {}\n    }\n  },\n\n  mounted() {\n    if (!this.entity) return\n    this.reset()\n    this.contactSheetMode = preferences.getBoolPreference(\n      'entity:preview-files-contact-sheet'\n    )\n  },\n\n  computed: {\n    ...mapGetters([\n      'currentProduction',\n      'isCurrentUserArtist',\n      'personMap',\n      'taskMap',\n      'taskTypeMap'\n    ]),\n\n    taskTypePreviewFileGroups() {\n      const taskTypePreviewFiles = new Map()\n      this.previewFiles.forEach(previewFile => {\n        const taskType = this.getTaskType(previewFile)\n        if (!taskTypePreviewFiles.has(taskType.id)) {\n          taskTypePreviewFiles.set(taskType.id, [])\n        }\n        taskTypePreviewFiles.get(taskType.id).push(previewFile)\n      })\n      return Array.from(taskTypePreviewFiles.keys())\n        .sort((a, b) => {\n          const taskTypeA = this.taskTypeMap.get(a)\n          const taskTypeB = this.taskTypeMap.get(b)\n          const priorityA = getTaskTypePriorityOfProd(\n            taskTypeA,\n            this.currentProduction\n          )\n          const priorityB = getTaskTypePriorityOfProd(\n            taskTypeB,\n            this.currentProduction\n          )\n          return priorityB - priorityA\n        })\n        .map(taskTypeId => {\n          return taskTypePreviewFiles.get(taskTypeId)\n        })\n    }\n  },\n\n  methods: {\n    ...mapActions(['getEntityPreviewFiles']),\n\n    getTaskType(previewFile) {\n      const task = this.taskMap.get(previewFile.task_id)\n      return this.taskTypeMap.get(task.task_type_id)\n    },\n\n    getDownloadPath(previewFileId) {\n      const previewFile = this.previewFiles.find(\n        file => file.id === previewFileId\n      )\n      if (!previewFile) return ''\n\n      const type = previewFile.extension === 'mp4' ? 'movies' : 'pictures'\n      return `/api/${type}/originals/preview-files/${previewFileId}/download`\n    },\n\n    renderFileSize,\n\n    formatDate,\n\n    reset() {\n      this.isLoading = true\n      this.getEntityPreviewFiles(this.entity.id)\n        .then(previewFiles => {\n          this.previewFiles = previewFiles\n          this.isLoading = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.previewFiles = []\n          this.isLoading = false\n        })\n    }\n  },\n\n  watch: {\n    entity() {\n      if (this.entity) this.reset()\n    },\n\n    contactSheetMode() {\n      preferences.setPreference(\n        'entity:preview-files-contact-sheet',\n        this.contactSheetMode\n      )\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.datatable-body {\n  overflow-y: auto;\n}\n\ntable.datatable {\n  table-layout: fixed;\n}\n\nth.thumbnail {\n  padding-top: 10px;\n  width: 80px;\n}\n\ntd.thumbnail {\n  width: 80px;\n}\n\ntd.type {\n  width: 100px;\n}\n.revision {\n  width: 80px;\n}\n.extension {\n  width: 80px;\n}\n.size {\n  width: 50px;\n}\n.status {\n  width: 80px;\n}\n.download {\n  width: 40px;\n}\n.date {\n  width: 80px;\n  white-space: nowrap;\n}\n\n.original-name {\n  width: 250px;\n}\n.person {\n  width: 250px;\n}\n\n.preview-files {\n  overflow-y: auto;\n}\n.dark .preview-files.wrapper {\n  background: transparent;\n}\n\n.preview-thumbnail {\n  cursor: pointer;\n  border-radius: 4px;\n}\n\n.datatable-row-header::after {\n  display: none;\n}\n\n.preview-files {\n  margin-top: 0;\n  flex: 1;\n}\n\n.contact-sheet {\n  flex-wrap: wrap;\n}\n\n.task-types-preview {\n  flex-wrap: wrap;\n}\n</style>\n","<template>\n  <div class=\"mt1 wrapper time-logs\">\n    <div class=\"has-text-centered\" v-if=\"isLoading\">\n      <spinner />\n    </div>\n    <div v-else-if=\"logs.length > 0\">\n      <table class=\"datatable\">\n        <thead class=\"datatable-head\">\n          <tr class=\"datatable-row-header\">\n            <th class=\"date\">\n              {{ $t('main.date') }}\n            </th>\n            <th class=\"person\">\n              {{ $t('main.person') }}\n            </th>\n            <th class=\"type\">\n              {{ $t('entities.preview_files.task_type') }}\n            </th>\n            <th class=\"duration\">\n              {{ $t('tasks.fields.duration') }}\n            </th>\n            <th class=\"end-cell\"></th>\n          </tr>\n        </thead>\n      </table>\n      <table class=\"datatable\">\n        <tbody class=\"datatable-body\">\n          <tr :key=\"log.id\" class=\"datatable-row\" v-for=\"log in logs\">\n            <td class=\"date\">\n              {{ formatSimpleDate(log.date) }}\n            </td>\n            <people-name-cell\n              class=\"person\"\n              :person=\"personMap.get(log.person_id)\"\n            />\n            <task-type-cell\n              class=\"type\"\n              :task-type=\"getTaskType(log)\"\n              :production-id=\"currentProduction.id\"\n            />\n            <td class=\"duration\">\n              {{ formatDuration(log.duration) }}\n            </td>\n            <td class=\"end-cell\"></td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <div v-else>\n      {{ $t('entities.logs.no_logs') }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\n\nimport { formatListMixin } from '@/components/mixins/format'\n\nimport PeopleNameCell from '@/components/cells/PeopleNameCell.vue'\nimport Spinner from '@/components/widgets/Spinner.vue'\nimport TaskTypeCell from '@/components/cells/TaskTypeCell.vue'\n\nexport default {\n  name: 'entity-time-logs',\n\n  mixins: [formatListMixin],\n\n  components: {\n    PeopleNameCell,\n    Spinner,\n    TaskTypeCell\n  },\n\n  props: {\n    entity: {\n      type: Object,\n      default: () => {}\n    }\n  },\n\n  data() {\n    return {\n      logs: [],\n      isLoading: false\n    }\n  },\n\n  mounted() {\n    if (!this.entity) return\n    this.reset()\n  },\n\n  computed: {\n    ...mapGetters(['currentProduction', 'personMap', 'taskMap', 'taskTypeMap'])\n  },\n\n  methods: {\n    ...mapActions(['getEntityTimeLogs']),\n\n    getTaskType(log) {\n      const task = this.taskMap.get(log.task_id)\n      return this.taskTypeMap.get(task.task_type_id)\n    },\n\n    reset() {\n      this.isLoading = true\n      this.getEntityTimeLogs(this.entity.id)\n        .then(logs => {\n          this.logs = logs\n          this.isLoading = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.logs = []\n          this.isLoading = false\n        })\n    }\n  },\n\n  watch: {\n    entity() {\n      if (this.entity) this.reset()\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.date {\n  width: 100px;\n  white-space: nowrap;\n}\n.person {\n  width: 200px;\n}\n.type {\n  width: 150px;\n}\n.duration {\n  width: 50px;\n}\n\n.time-logs {\n  overflow-y: auto;\n}\n\n.dark .wrapper.time-logs {\n  background: transparent;\n}\n\n.datatable-row-header::after {\n  display: none;\n}\n</style>\n","<template>\n  <div class=\"data-list\">\n    <div>\n      <table class=\"datatable\" ref=\"headerWrapper\">\n        <thead class=\"datatable-head\">\n          <tr class=\"datatable-row-header\">\n            <th class=\"type\">\n              {{ $t('tasks.fields.task_type') }}\n            </th>\n            <th class=\"status\">\n              {{ $t('tasks.fields.task_status') }}\n            </th>\n            <th class=\"estimation\">\n              {{ $t('tasks.fields.estimation').substring(0, 3) }}.\n            </th>\n            <th class=\"estimation\">\n              {{ $t('tasks.fields.duration').substring(0, 3) }}.\n            </th>\n            <th class=\"startdate\">\n              {{ $t('tasks.fields.start_date_short') }}\n            </th>\n            <th class=\"duedate\">\n              {{ $t('tasks.fields.due_date') }}\n            </th>\n            <th class=\"assignees\">\n              {{ $t('tasks.fields.assignees') }}\n            </th>\n            <th class=\"end-cell\"></th>\n          </tr>\n        </thead>\n      </table>\n    </div>\n\n    <table-info :is-loading=\"isLoading\" :is-error=\"isError\" />\n\n    <div\n      class=\"task-list-body\"\n      @scroll.passive=\"onBodyScroll\"\n      v-if=\"entries.length > 0\"\n    >\n      <table class=\"datatable\">\n        <tbody class=\"datatable-body\">\n          <tr\n            :key=\"task.id\"\n            :class=\"{\n              selected: currentTask && currentTask.id === task.id,\n              'datatable-row': true,\n              'datatable-row--selectable': true\n            }\"\n            @click=\"selectTask(task)\"\n            v-for=\"task in sortedEntries\"\n          >\n            <task-type-cell\n              class=\"type\"\n              :task-type=\"getTaskType(task.id)\"\n              :production-id=\"currentProduction.id\"\n              :task-id=\"task.id\"\n              v-if=\"getTaskType(task.id)\"\n            />\n            <td class=\"status\">\n              <validation-tag\n                :task=\"getTask(task.id)\"\n                :is-static=\"true\"\n                v-if=\"getTask(task.id)\"\n              />\n            </td>\n            <td class=\"estimation\">\n              {{ getTaskEstimation(task) }}\n            </td>\n            <td class=\"duration\">\n              {{ getTaskDuration(task) }}\n            </td>\n            <td class=\"startdate\">\n              {{ getTaskStartDate(task) }}\n            </td>\n            <td class=\"duedate\">\n              {{ getTaskDueDate(task) }}\n            </td>\n            <td class=\"assignees\">\n              <div\n                class=\"flexrow\"\n                v-if=\"!isCurrentUserClient && !isCurrentUserVendor\"\n              >\n                <div\n                  class=\"avatar-wrapper\"\n                  :key=\"personId\"\n                  v-for=\"personId in getAssignees(task)\"\n                >\n                  <people-avatar\n                    class=\"person-avatar flexrow-item\"\n                    :key=\"task.id + '-' + personId\"\n                    :person=\"personMap.get(personId)\"\n                    :size=\"30\"\n                    :font-size=\"15\"\n                  />\n                </div>\n              </div>\n            </td>\n            <td class=\"end-cell\"></td>\n          </tr>\n          <tr class=\"datatable-row total-row\">\n            <td>{{ $t('main.total') }}</td>\n            <td>{{ entityProgress }}</td>\n            <td class=\"estimation\">{{ formatDuration(entityEstimation) }}</td>\n            <td class=\"duration\">{{ formatDuration(entityDuration) }}</td>\n            <td class=\"startdate\">{{ entityStartDate }}</td>\n            <td class=\"duedate\">{{ entityDueDate }}</td>\n            <td class=\"assignees\">\n              {{ entityAssignees.length }}\n              {{ $tc('people.persons', entityAssignees.length) }}\n            </td>\n            <td class=\"end-cell\"></td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\n\nimport { formatListMixin } from '@/components/mixins/format'\n\nimport PeopleAvatar from '@/components/widgets/PeopleAvatar.vue'\nimport TableInfo from '@/components/widgets/TableInfo.vue'\nimport TaskTypeCell from '@/components/cells/TaskTypeCell.vue'\nimport ValidationTag from '@/components/widgets/ValidationTag.vue'\n\nexport default {\n  name: 'entity-task-list',\n\n  mixins: [formatListMixin],\n\n  components: {\n    PeopleAvatar,\n    TableInfo,\n    TaskTypeCell,\n    ValidationTag\n  },\n\n  props: {\n    entries: {\n      type: Array,\n      default: () => []\n    },\n    isLoading: {\n      type: Boolean,\n      default: false\n    },\n    isError: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  emits: ['task-selected'],\n\n  data() {\n    return {\n      currentTask: null\n    }\n  },\n\n  computed: {\n    ...mapGetters([\n      'currentProduction',\n      'getTaskTypePriority',\n      'isCurrentUserClient',\n      'isCurrentUserVendor',\n      'personMap',\n      'taskMap',\n      'taskStatusMap',\n      'taskTypeMap'\n    ]),\n\n    sortedEntries() {\n      return [...this.entries].sort((taskA, taskB) => {\n        if (!taskA) return false\n        const taskTypeA = this.taskTypeMap.get(taskA.task_type_id)\n        const taskTypeB = this.taskTypeMap.get(taskB.task_type_id)\n        const taskTypeAPriority = this.getTaskTypePriority(taskA.task_type_id)\n        const taskTypeBPriority = this.getTaskTypePriority(taskB.task_type_id)\n        if (taskTypeAPriority === taskTypeBPriority) {\n          return taskTypeA.name.localeCompare(taskTypeB.name, undefined, {\n            numeric: true\n          })\n        } else {\n          return taskTypeAPriority - taskTypeBPriority\n        }\n      })\n    },\n\n    entityProgress() {\n      const doneTasks = this.entries.filter(task => {\n        const fullTask = this.getTask(task.id)\n        const taskStatus = this.taskStatusMap.get(fullTask.task_status_id)\n        return taskStatus.is_done\n      })\n      return `${doneTasks.length} / ${this.entries.length}`\n    },\n\n    entityEstimation() {\n      return this.entries.reduce((acc, task) => acc + task.estimation, 0)\n    },\n\n    entityDuration() {\n      return this.entries.reduce((acc, task) => acc + task.duration, 0)\n    },\n\n    entityStartDate() {\n      if (this.entries.length === 0) return ''\n      let startDate = this.entries[0].start_date\n      this.entries.forEach(task => {\n        if (task.start_date < startDate) {\n          startDate = task.start_date\n        }\n      })\n      return startDate ? startDate.substring(0, 10) : ''\n    },\n\n    entityDueDate() {\n      if (this.entries.length === 0) return ''\n      let dueDate = this.entries[0].due_date\n      this.entries.forEach(task => {\n        if (task.due_date > dueDate) {\n          dueDate = task.due_date\n        }\n      })\n      return dueDate ? dueDate.substring(0, 10) : ''\n    },\n\n    entityAssignees() {\n      return [...new Set(this.entries.flatMap(task => task.assignees))]\n    }\n  },\n\n  methods: {\n    onBodyScroll(event) {\n      const position = event.target\n      this.$refs.headerWrapper.style.left = `-${position.scrollLeft}px`\n    },\n\n    getTask(task) {\n      if (typeof task === 'string') {\n        return this.taskMap.get(task)\n      } else {\n        return task\n      }\n    },\n\n    getTaskStartDate(task) {\n      return task && task.start_date ? task.start_date.substring(0, 10) : ''\n    },\n\n    getTaskDueDate(task) {\n      return task && task.due_date ? task.due_date.substring(0, 10) : ''\n    },\n\n    getTaskEstimation(task) {\n      return task && task.estimation ? this.formatDuration(task.estimation) : ''\n    },\n\n    getTaskDuration(task) {\n      return task && task.duration ? this.formatDuration(task.duration) : ''\n    },\n\n    getTaskType(entry) {\n      const task = this.getTask(entry)\n      return task ? this.taskTypeMap.get(task.task_type_id) : null\n    },\n\n    getAssignees(entry) {\n      const task = this.getTask(entry)\n      return task ? task.assignees : []\n    },\n\n    selectTask(task) {\n      if (task.id === this.currentTask?.id) {\n        this.currentTask = null\n      } else {\n        this.currentTask = task\n      }\n      this.$emit('task-selected', task)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.data-list {\n  max-width: 500px;\n  margin-top: 0;\n\n  .dark & {\n    border: 0;\n  }\n}\n\n.type {\n  max-width: 250px;\n  min-width: 250px;\n}\n\n.estimation,\n.duration {\n  max-width: 50px;\n  min-width: 50px;\n  text-align: right;\n}\n\n.startdate,\n.duedate {\n  max-width: 100px;\n  min-width: 100px;\n  white-space: nowrap;\n}\n\n.status {\n  max-width: 130px;\n  min-width: 130px;\n}\n\n.assignees {\n  max-width: 150px;\n  min-width: 150px;\n}\n\n.end-cell {\n  width: 100%;\n}\n\n.flexrow-item {\n  margin-right: 0.3em;\n}\n\n.avatar-wrapper {\n  margin-right: 0.5em;\n}\n\n.task-list-body {\n  overflow-y: auto;\n}\n\n.datatable-row-header::after {\n  display: none;\n}\n\n.total-row {\n  border-bottom-left-radius: 10px;\n  border-bottom-right-radius: 10px;\n}\n</style>\n"],"names":["entityMixin","mapGetters","assetsStore","editsStore","episodesStore","sequencesStore","shotsStore","option","stringHelpers","entityIndex","entity","getEntityPath","taskId","task","a","b","taskTypeAPriority","taskTypeBPriority","getFirstStartDate","parseDate","getLastEndDate","mapActions","entityId","tab","manDays","rootElement","limitStartDate","moment","children","estimation","startDate","endDate","parseSimpleDate","taskType","c","rootStartDate","rootEndDate","item","daysLength","getBusinessDays","daysToMinutes","currentEntity","_sfc_main","formatListMixin","PeopleAvatar","Spinner","TaskTypeName","ValidationTag","news","taskStatus","data","err","eventData","_hoisted_1","_hoisted_4","_hoisted_5","_hoisted_6","_openBlock","_createElementBlock","$data","_hoisted_2","_createVNode","_component_spinner","_hoisted_3","_Fragment","_renderList","_createElementVNode","_normalizeClass","$options","_toDisplayString","_ctx","_createBlock","_component_people_avatar","_createCommentVNode","_component_task_type_name","_component_validation_tag","_hoisted_7","DownloadIcon","EntityPreview","previewFile","previewFileId","renderFileSize","_hoisted_9","$props","_component_entity_preview","_hoisted_8","_component_download_icon","ButtonSimple","EntityPreviewFileCard","EntityThumbnail","PeopleNameCell","TaskTypeCell","preferences","taskTypePreviewFiles","taskTypeA","taskTypeB","priorityA","getTaskTypePriorityOfProd","taskTypeId","file","formatDate","previewFiles","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_component_button_simple","_cache","$event","index","_component_entity_preview_file_card","_component_entity_thumbnail","_component_task_type_cell","_component_people_name_cell","_hoisted_29","log","logs","TableInfo","taskA","taskB","fullTask","acc","dueDate","event","position","entry","_component_table_info","args","personId"],"mappings":"0ZAuBY,MAACA,GAAc,CACzB,MAAO,CACL,MAAO,CACL,eAAgB,QAChB,UAAW,EACX,iBAAkB,CAChB,CAAE,MAAO,KAAK,GAAG,iBAAiB,EAAG,MAAO,OAAS,EACrD,CAAE,MAAO,KAAK,GAAG,iBAAiB,EAAG,MAAO,MAAQ,EACpD,CAAE,MAAO,KAAK,GAAG,oBAAoB,EAAG,MAAO,SAAW,EAC1D,CAAE,MAAO,KAAK,GAAG,qBAAqB,EAAG,MAAO,UAAY,EAC5D,CAAE,MAAO,KAAK,GAAG,0BAA0B,EAAG,MAAO,eAAiB,EACtE,CAAE,MAAO,KAAK,GAAG,oBAAoB,EAAG,MAAO,WAAW,CAC3D,EACD,cAAe,CAAE,EACjB,YAAa,CACX,CAAE,MAAO,IAAK,MAAO,CAAG,EACxB,CAAE,MAAO,IAAK,MAAO,CAAG,EACxB,CAAE,MAAO,IAAK,MAAO,CAAC,CAC9B,CACA,CACG,EAED,SAAU,CACR,GAAGC,EAAW,CAAC,cAAc,CAAC,EAE9B,WAAY,CACV,OAAOC,GAAY,MAAM,MAC1B,EAED,UAAW,CACT,OAAOC,GAAW,MAAM,KACzB,EAED,aAAc,CACZ,OAAOC,EAAc,MAAM,QAC5B,EAED,cAAe,CACb,OAAOC,EAAe,MAAM,SAC7B,EAED,UAAW,CACT,OAAOC,EAAW,MAAM,KACzB,EAED,YAAa,CACX,OAAO,KAAK,iBAAiB,IAAIC,IACxB,CACL,MAAOA,EAAO,MACd,KAAMA,EAAO,KACvB,EACO,CACF,EAED,eAAgB,CACd,OAAO,KAAK,UAAUC,EAAc,WAAW,KAAK,IAAI,CAAC,EAAE,CAC5D,EAED,YAAa,CACX,OAAO,KAAK,GAAG,KAAK,IAAI,MAAM,GAAK,CAAA,CACpC,EAED,gBAAiB,CACf,GAAI,CAAC,KAAK,cAAe,OAAO,KAChC,MAAMC,EAAc,KAAK,eAAe,KAAK,cAAc,EAAE,EAC7D,OAAIA,IAAgB,GAAW,KACxBA,EAAc,EACjB,KAAK,WAAWA,EAAc,CAAC,EAC/B,KAAK,WAAW,KAAK,WAAW,OAAS,CAAC,CAC/C,EAED,YAAa,CACX,GAAI,CAAC,KAAK,cAAe,OAAO,KAChC,MAAMA,EAAc,KAAK,eAAe,KAAK,cAAc,EAAE,EAC7D,OAAIA,IAAgB,GAAW,KACxBA,EAAc,KAAK,WAAW,OAAS,EAC1C,KAAK,WAAWA,EAAc,CAAC,EAC/B,KAAK,WAAW,CAAC,CACtB,EAED,oBAAqB,CACnB,MAAMC,EAAS,KAAK,eACpB,OAAKA,EACEC,EACLD,EAAO,GACP,KAAK,kBAAkB,GACvB,KAAK,KACL,KAAK,gBAAgB,EAC7B,EAN0B,IAOrB,EAED,gBAAiB,CACf,MAAMA,EAAS,KAAK,WACpB,OAAKA,EACEC,EACLD,EAAO,GACP,KAAK,kBAAkB,GACvB,KAAK,KACL,KAAK,gBAAgB,EAC7B,EAN0B,IAOrB,EAED,eAAgB,CAEd,MAAO,yCADW,KAAK,cAAc,eACoB,MAC1D,EAED,WAAY,CACV,OACE,KAAK,eACL,KAAK,cAAc,iBACnB,KAAK,cAAc,gBAAgB,OAAS,CAE/C,EAED,cAAe,CACb,MAAMA,EAAS,KAAK,UAAUF,EAAc,WAAW,KAAK,IAAI,CAAC,EAAE,EACnE,MAAI,CAACE,GAAU,CAACA,EAAO,MAAc,CAAA,EAC9BA,EACHA,EAAO,MACJ,IAAIE,GAAU,KAAK,QAAQ,IAAIA,CAAM,CAAC,EACtC,OAAOC,GAAQA,CAAI,EACnB,KAAK,CAACC,EAAGC,IAAM,CACd,MAAMC,EAAoB,KAAK,oBAAoBF,EAAE,YAAY,EAC3DG,EAAoB,KAAK,oBAAoBF,EAAE,YAAY,EACjE,OAAOC,EAAoBC,CAC5B,CAAA,EACH,CAAA,CACL,EAED,gBAAiB,CACf,OACE,KAAK,cAAc,OAAS,GAC5B,KAAK,cAAc,CAAC,EAAE,SAAS,OAAS,EAEjCC,EAAkB,KAAK,cAAc,CAAC,EAAE,QAAQ,EACpD,MAAK,EACL,IAAI,IAAK,MAAM,EAEXC,EAAU,KAAK,kBAAkB,UAAU,CAErD,EAED,cAAe,CACb,OACE,KAAK,cAAc,OAAS,GAC5B,KAAK,cAAc,CAAC,EAAE,SAAS,OAAS,EAEjCC,EAAe,KAAK,cAAc,CAAC,EAAE,QAAQ,EACjD,MAAK,EACL,IAAI,GAAI,MAAM,EAEVD,EAAU,KAAK,kBAAkB,QAAQ,CAExD,CACG,EAED,QAAS,CACP,GAAGE,EAAW,CAAC,kBAAmB,qBAAsB,YAAY,CAAC,EAErE,eAAeC,EAAU,CACvB,OAAO,KAAK,WAAW,UAAUZ,GAAUA,EAAO,KAAOY,CAAQ,CAClE,EAED,UAAUC,EAAK,CACb,KAAK,YAAcA,CACpB,EAED,eAAgB,CACd,KAAK,OAAO,KAAO,EACpB,EAED,eAAeV,EAAM,CACnB,KAAK,mBAAkB,EACnB,CAAC,KAAK,aAAe,KAAK,YAAY,KAAOA,EAAK,IACpD,KAAK,gBAAgBA,CAAI,EACzB,KAAK,YAAcA,GAEnB,KAAK,YAAc,IAEtB,EAED,mBAAoB,CAClB,IAAIW,EAAU,EACd,MAAMC,EAAc,CAClB,OAAQ,GACR,GAAI,OACJ,KAAM,QACN,MAAO,OACP,SAAU,EACV,SAAU,GACV,QAAS,GACT,SAAU,CAAE,EACZ,SAAU,EAClB,EACYC,EAAiBC,EAAM,EACvBC,EAAW,KAAK,aACnB,IAAIf,GAAQ,CACX,MAAMgB,EAAahB,EAAK,WACxB,IAAIiB,EAAYJ,EAAe,MAAK,EAChCK,EAEJ,GACE,CAAClB,EAAK,YACN,CAACA,EAAK,iBACN,CAACA,EAAK,UACN,CAACA,EAAK,SAEN,OAAO,KAELA,EAAK,WACPiB,EAAYE,EAAgBnB,EAAK,UAAU,EAClCA,EAAK,kBACdiB,EAAYE,EAAgBnB,EAAK,eAAe,GAG9CA,EAAK,SACPkB,EAAUC,EAAgBnB,EAAK,QAAQ,EAC9BA,EAAK,SACdkB,EAAUC,EAAgBnB,EAAK,QAAQ,EAC9BA,EAAK,aACdkB,EAAUD,EAAU,MAAO,EAAC,IAAID,EAAY,MAAM,IAGhD,CAACE,GAAWA,EAAQ,SAASD,CAAS,KACxCC,EAAUD,EAAU,MAAO,EAAC,IAAI,EAAG,MAAM,GAEvCD,IAAYL,GAAWX,EAAK,YAChC,MAAMoB,EAAW,KAAK,YAAY,IAAIpB,EAAK,YAAY,EAEvD,MAAO,CACL,GAAGA,EACH,KAAMoB,EAAS,KACf,UAAWH,EACX,QAASC,EACT,SAAU,GACV,QAAS,GACT,SAAUF,EACV,SAAU,GACV,YAAa,GACb,cAAeJ,EACf,MAAOQ,EAAS,MAChB,SAAU,CAAA,CACtB,CACS,CAAA,EACA,OAAOC,GAAKA,IAAM,IAAI,EACzB,IAAIC,EAAgBR,EAAM,EACtBS,EAAcT,EAAM,EAAG,IAAI,EAAG,MAAM,EACpCC,EAAS,OAAS,IACpBO,EAAgBjB,EAAkBU,CAAQ,EAC1CQ,EAAchB,EAAeQ,CAAQ,GAEvC,OAAO,OAAOH,EAAa,CACzB,SAAUG,EACV,UAAWO,EACX,QAASC,EACT,SAAUZ,CACX,CAAA,EACD,KAAK,cAAgB,CAACC,CAAW,CAClC,EAED,qBAAqBY,EAAM,CACzB,MAAMC,EAAaC,EAAgBF,EAAK,UAAWA,EAAK,OAAO,EACzDR,EAAaW,EAAc,KAAK,aAAcF,CAAU,EAC9DD,EAAK,SAAWR,EACZQ,EAAK,WAAaA,EAAK,SACzB,KAAK,WAAW,CACd,OAAQA,EAAK,GACb,KAAM,CACJ,WAAAR,EACA,WAAYQ,EAAK,UAAU,OAAO,YAAY,EAC9C,SAAUA,EAAK,QAAQ,OAAO,YAAY,CACtD,CACS,CAAA,CAET,CACG,EAED,MAAO,CACL,QAAS,CACP,MAAMf,EAAW,KAAK,MAAM,OAAO,GAAG,KAAK,IAAI,KAAK,EAC9CmB,EACJ,KAAK,UAAUjC,EAAc,WAAW,KAAK,IAAI,CAAC,EAAE,EAClDiC,GAAiBA,EAAc,KAAOnB,GACxC,KAAK,KAAI,EAEX,KAAK,eAAiB,KAAK,MAAM,MAAM,SAAW,OACnD,EAED,gBAAiB,CACX,KAAK,iBAAmB,YAAc,KAAK,cAAc,OAAS,GAChE,KAAK,MAAM,iBAAiB,GAC9B,KAAK,MAAM,iBAAiB,EAAE,aAC5B,KAAK,cAAc,CAAC,EAAE,SAClC,CAGK,EAED,aAAc,CACZ,UAAW,GACX,SAAU,CACR,KAAK,kBAAiB,CAC9B,CACK,EAED,WAAY,CACN,KAAK,MAAM,iBAAiB,GAC9B,KAAK,MAAM,iBAAiB,EAAE,aAC5B,KAAK,cAAc,CAAC,EAAE,SAChC,CAEA,CACA,CACA,EC/QKoB,GAAU,CACb,KAAM,cAEN,OAAQ,CAACC,CAAe,EAExB,WAAY,CACV,aAAAC,EACA,QAAAC,EACA,aAAAC,EACA,cAAAC,CACD,EAED,MAAO,CACL,MAAO,CACL,UAAW,GACX,SAAU,CAAA,CACZ,CACD,EAED,MAAO,CACL,OAAQ,CACN,KAAM,OACN,QAAS,IAAM,CAAA,CACjB,CACD,EAED,SAAU,CACR,KAAK,MAAK,CACX,EAED,SAAU,CACR,GAAG9C,EAAW,CACZ,oBACA,YACA,cACA,eACD,CAAA,CACF,EAED,QAAS,CACP,GAAGoB,EAAW,CAAC,eAAe,CAAC,EAE/B,kBAAkB2B,EAAM,CACtB,MAAO,CACL,eAAgBA,EAAK,cACvB,CACD,EAED,sBAAsBA,EAAM,CAC1B,MAAO,CACL,GAAG,KAAK,YAAY,IAAIA,EAAK,YAAY,EACzC,WAAYA,EAAK,UACnB,CACD,EAED,eAAeA,EAAM,CACnB,MAAMC,EAAa,KAAK,cAAc,IAAID,EAAK,cAAc,EAC7D,OAAOC,EAAaD,EAAK,QAAUC,EAAW,UAAY,EAC3D,EAED,aAAaD,EAAM,CACjB,MAAMC,EAAa,KAAK,cAAc,IAAID,EAAK,cAAc,EAC7D,OAAOC,EAAaD,EAAK,QAAUC,EAAW,QAAU,EACzD,EAED,OAAQ,CACD,KAAK,SAGV,KAAK,UAAY,GACjB,KAAK,cAAc,KAAK,OAAO,EAAE,EAC9B,KAAKC,GAAQ,CACZ,KAAK,SAAWA,EAAK,IACtB,CAAA,EACA,MAAMC,GAAO,CACZ,QAAQ,MAAMA,CAAG,EACjB,KAAK,SAAW,CAAA,CACjB,CAAA,EACA,QAAQ,IAAM,CACb,KAAK,UAAY,EAClB,CAAA,EACL,CACD,EAED,MAAO,CACL,QAAS,CACP,KAAK,MAAK,CACZ,CACD,EAED,OAAQ,CACN,OAAQ,CACN,WAAWC,EAAW,CAElBA,EAAU,aAAe,KAAK,kBAAkB,KAC/C,CAAC,KAAK,YAAc,KAAK,aAAeA,EAAU,gBAClD,CAAC,KAAK,cAAgB,KAAK,eAAiBA,EAAU,iBAEvD,KAAK,MAAK,CAEd,CACF,CACF,CACF,EAxKOC,GAAA,CAAA,MAAM,iBAAiB,MAD9B,IAAA,EAES,MAAM,yBAFf,IAAA,EAKS,MAAM,gBAaDC,GAAA,CAAA,MAAM,mBAAmB,EAa1BC,GAAA,CAAA,MAAM,oCAAoC,EAS1CC,GAAA,CAAA,MAAM,iCAAiC,MAxCpD,IAAA,CAAA,iHACE,OAAAC,EAAA,EAAAC,EAoDM,MApDNL,GAoDM,CAnDiCM,EAAS,WAA9CF,IAAAC,EAEM,MAFNE,GAEM,CADJC,EAAWC,CAAA,KAEwBH,EAAA,SAAS,QAA9CF,IAAAC,EA4CM,MA5CNK,GA4CM,EA3CJN,EAAA,EAAA,EAAAC,EA0CMM,EAhDZ,KAAAC,EASuBN,EAAQ,SAAhBX,QAHTU,EA0CM,MAAA,CAzCJ,MAAM,yBACL,IAAG,QAAUV,EAAK,EAAE,KAGrBkB,EAMQ,OAAA,CALL,MAZXC,EAAA,QAY4D,IAAAC,EAAA,eAAepB,CAAI,EAAsB,MAAAoB,EAAA,aAAapB,CAAI,aAM9GkB,EAEO,OAFPZ,GACKe,EAAAC,EAAA,eAAetB,EAAK,UAAU,EAAE,UAAS,GAAA,CAAA,CAAA,EAAA,CAAA,EAStCsB,EAAA,UAAU,IAAItB,EAAK,SAAS,OANpCuB,EAOEC,EAAA,CA7BV,IAAA,EAuBU,MAAM,eACL,YAAW,GACX,UAAS,GACT,OAAQF,EAAS,UAAC,IAAItB,EAAK,SAAS,EACpC,KAAM,wBA3BjByB,EAAA,GAAA,EAAA,EA+BQP,EAOM,MAPNX,GAOM,CANJM,EAKEa,EAAA,CAJA,MAAM,iBACL,YAAW,GACX,gBAAeJ,EAAiB,kBAAC,GACjC,YAAWF,EAAqB,sBAACpB,CAAI,2CAI1CkB,EAOM,MAPNV,GAOM,CANJK,EAKEc,EAAA,CAJC,cAAa,GACb,YAAW,GACX,KAAMP,EAAiB,kBAACpB,CAAI,EAC5B,KAAI,CAAGA,EAAK,oDAKrBU,EAEM,MApDVkB,KAmDSN,EAAE,GAAA,cAAA,CAAA,EAAA,CAAA,oECoBN5B,GAAU,CACb,KAAM,2BAEN,WAAY,cACVmC,EACA,cAAAC,GACA,aAAAlC,CACD,EAED,MAAO,CACL,YAAa,CACX,KAAM,OACN,SAAU,GACV,QAAS,IAAM,CAAA,CACjB,CACD,EAED,SAAU,CAAE,EAEZ,SAAU,CACR,GAAG3C,EAAW,CACZ,sBACA,YACA,UACA,aACD,CAAA,CACF,EAED,QAAS,CACP,YAAY8E,EAAa,CACvB,MAAMlE,EAAO,KAAK,QAAQ,IAAIkE,EAAY,OAAO,EACjD,OAAO,KAAK,YAAY,IAAIlE,EAAK,YAAY,CAC9C,EAED,gBAAgBmE,EAAe,CAE7B,MAAO,QADM,KAAK,YAAY,YAAc,MAAQ,SAAW,UAC5C,4BAA4BA,CAAa,WAC7D,EAED,eAAAC,CACF,CACF,EAlGS5B,GAAA,CAAA,MAAM,mBAAmB,EACvBO,GAAA,CAAA,MAAM,SAAS,EACZG,GAAA,CAAA,MAAM,uCAAuC,EAhB3DT,GAAA,CAAA,OAAA,EA0BcC,GAAA,CAAA,MAAM,iCAAiC,EAI1CC,GAAA,CAAA,MAAM,aAAa,EA9B9BoB,GAAA,CAAA,QAAA,aAAA,MAAA,IAAA,EA4CU,MAAM,oCA5ChBM,GAAA,CAAA,OAAA,OAAA,4GACExB,EA0DM,MAAA,CA1DD,MAAM,0BAA2B,IAAKyB,EAAW,YAAC,KACrDtB,EAWEuB,EAAA,CAVC,OAAM,CAA6B,gBAAAD,EAAA,YAAY,GAAoC,uBAAAA,EAAA,YAAY,WAI/F,eAAc,IACd,cAAa,IACb,OAAQ,IACR,MAAO,IACR,wBAAA,GACA,aAAA,uBAEFjB,EA4CM,MA5CNb,GA4CM,CA3CJa,EAcM,MAdNN,GAcM,CAbJM,EAEO,OAFPH,GAAoD,KAC9CM,EAAAc,EAAA,YAAY,QAAQ,EAAA,CAAA,EAE1BjB,EAKO,OAAA,CAJL,MAAM,8BACL,MAAOiB,EAAW,YAAC,iBAEjBA,EAAW,YAAC,aAAa,EAvBtC,EAAA7B,EAAA,cAyBQY,EAA4B,OAAA,CAAtB,MAAM,QAAQ,EAAA,KAAA,EAAA,GACpBA,EAEO,OAFPX,GACKc,EAAAc,EAAA,YAAY,SAAS,EAAA,CAAA,IAG5BjB,EA2BM,MA3BNV,GA2BM,CA1BJU,EAIQ,OAAA,CAHN,MAAM,sBACL,MAAOiB,EAAW,YAAC,kBACnB,cAAaA,EAAW,YAAC,iBAlCpC,EAAA,KAAA,EAAAP,EAAA,EAoCQf,EAKEW,EAAA,CAJA,MAAM,SACL,OAAQF,EAAS,UAAC,IAAIa,EAAA,YAAY,SAAS,EAC3C,YAAW,GACX,KAAM,mCAETjB,EAA4B,OAAA,CAAtB,MAAM,QAAQ,EAAA,KAAA,EAAA,GAGZiB,EAAA,YAAY,eAFpBzB,EAKO,OALP2B,GAIKhB,EAAAD,EAAA,eAAee,EAAW,YAAC,SAAS,CAAA,EAAI,KAC7C,CAAA,GAhDRV,EAAA,GAAA,EAAA,EAqDiBH,EAAmB,oBArDpCG,EAAA,GAAA,EAAA,OAiDQf,EAOI,IAAA,CAxDZ,IAAA,EAkDU,MAAM,kBACL,KAAMU,EAAA,gBAAgBe,EAAA,YAAY,EAAE,EACpC,MAAOb,EAAE,GAAA,iCAAA,IAGVT,EAAuCyB,EAAA,CAAxB,MAAM,eAAe,CAAA,CAvD9C,EAAA,EAAAJ,EAAA,wECkJKxC,GAAU,CACb,KAAM,uBAEN,WAAY,CACV,aAAA6C,gBACAV,EACA,sBAAAW,GACA,gBAAAC,GACA,eAAAC,EACA,QAAA7C,EACA,aAAA8C,EACA,aAAA7C,CACD,EAED,MAAO,CACL,MAAO,CACL,iBAAkB,GAClB,UAAW,GACX,aAAc,CAAA,CAChB,CACD,EAED,MAAO,CACL,OAAQ,CACN,KAAM,OACN,QAAS,IAAM,CAAA,CACjB,CACD,EAED,SAAU,CACH,KAAK,SACV,KAAK,MAAK,EACV,KAAK,iBAAmB8C,EAAY,kBAClC,oCACF,EACD,EAED,SAAU,CACR,GAAG3F,EAAW,CACZ,oBACA,sBACA,YACA,UACA,aACF,CAAC,EAED,2BAA4B,CAC1B,MAAM4F,EAAuB,IAAI,IACjC,YAAK,aAAa,QAAQd,GAAe,CACvC,MAAM9C,EAAW,KAAK,YAAY8C,CAAW,EACxCc,EAAqB,IAAI5D,EAAS,EAAE,GACvC4D,EAAqB,IAAI5D,EAAS,GAAI,CAAE,CAAA,EAE1C4D,EAAqB,IAAI5D,EAAS,EAAE,EAAE,KAAK8C,CAAW,CACvD,CAAA,EACM,MAAM,KAAKc,EAAqB,KAAM,CAAA,EAC1C,KAAK,CAAC/E,EAAGC,IAAM,CACd,MAAM+E,EAAY,KAAK,YAAY,IAAIhF,CAAC,EAClCiF,EAAY,KAAK,YAAY,IAAIhF,CAAC,EAClCiF,EAAYC,EAChBH,EACA,KAAK,iBACP,EAKA,OAJkBG,EAChBF,EACA,KAAK,iBACP,EACmBC,CACpB,CAAA,EACA,IAAIE,GACIL,EAAqB,IAAIK,CAAU,CAC3C,CACL,CACD,EAED,QAAS,CACP,GAAG7E,EAAW,CAAC,uBAAuB,CAAC,EAEvC,YAAY0D,EAAa,CACvB,MAAMlE,EAAO,KAAK,QAAQ,IAAIkE,EAAY,OAAO,EACjD,OAAO,KAAK,YAAY,IAAIlE,EAAK,YAAY,CAC9C,EAED,gBAAgBmE,EAAe,CAC7B,MAAMD,EAAc,KAAK,aAAa,KACpCoB,GAAQA,EAAK,KAAOnB,CACtB,EACA,OAAKD,EAGE,QADMA,EAAY,YAAc,MAAQ,SAAW,UACvC,4BAA4BC,CAAa,YAHnC,EAI1B,EAED,eAAAC,EAEA,WAAAmB,GAEA,OAAQ,CACN,KAAK,UAAY,GACjB,KAAK,sBAAsB,KAAK,OAAO,EAAE,EACtC,KAAKC,GAAgB,CACpB,KAAK,aAAeA,EACpB,KAAK,UAAY,EAClB,CAAA,EACA,MAAMlD,GAAO,CACZ,QAAQ,MAAMA,CAAG,EACjB,KAAK,aAAe,CAAA,EACpB,KAAK,UAAY,EAClB,CAAA,CACL,CACD,EAED,MAAO,CACL,QAAS,CACH,KAAK,QAAQ,KAAK,MAAK,CAC5B,EAED,kBAAmB,CACjByC,EAAY,cACV,qCACA,KAAK,gBACP,CACF,CACF,CACF,EA7QOvC,GAAA,CAAA,MAAM,sCAAsC,EAC1CO,GAAA,CAAA,MAAM,qBAAqB,MAFpC,IAAA,EAWS,MAAM,yBAXf,IAAA,CAAA,MAAA,IAAA,EAeW,MAAM,4BAKFJ,GAAA,CAAA,MAAM,kBAAkB,EAIxBoB,GAAA,CAAA,MAAM,gCAAgC,MAxBrD,IAAA,EAiCa,MAAM,aACJM,GAAA,CAAA,MAAM,gBAAgB,EACvBoB,GAAA,CAAA,MAAM,sBAAsB,EAE1BC,GAAA,CAAA,MAAM,MAAM,EAGZC,GAAA,CAAA,MAAM,eAAe,EAGrBC,GAAA,CAAA,MAAM,UAAU,EAGhBC,GAAA,CAAA,MAAM,WAAW,EAGjBC,GAAA,CAAA,MAAM,MAAM,EAGZC,GAAA,CAAA,MAAM,QAAQ,EAGdC,GAAA,CAAA,MAAM,QAAQ,EAGdC,GAAA,CAAA,MAAM,MAAM,EAMbC,GAAA,CAAA,MAAM,gBAAgB,EAMrBC,GAAA,CAAA,MAAM,WAAW,EAgBjBC,GAAA,CAAA,MAAM,eAAe,EAGrBC,GAAA,CAAA,MAAM,UAAU,EAGhBC,GAAA,CAAA,MAAM,WAAW,EAGjBC,GAAA,CAAA,MAAM,MAAM,EAGZC,GAAA,CAAA,MAAM,QAAQ,EAOdC,GAAA,CAAA,MAAM,MAAM,EAIZC,GAAA,CAAA,MAAM,UAAU,EA7GhCC,GAAA,CAAA,OAAA,OAAA,MAAA,IAAA,CAAA,sNACE,OAAA/D,EAAA,EAAAC,EA6HM,MA7HNL,GA6HM,CA5HJa,EAQM,MARNN,GAQM,CAPJC,EAME4D,EAAA,CALA,MAAM,eACN,KAAK,OACJ,QAAO9D,EAAgB,iBACvB,MAAOW,EAAE,GAAA,0BAAA,EACT,QAAKoD,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,GAAEhE,EAAgB,iBAAA,CAAIA,EAAgB,+CAGXA,EAAS,WAA9CF,IAAAC,EAEM,MAFNK,GAEM,CADJF,EAAWC,CAAA,KAEGH,EAAY,aAAC,OAAM,GAAA,CAASA,EAAS,WAArDF,IAAAC,EA4GM,MA1HVJ,GAAA,CAekDK,EAAgB,kBAA5DF,IAAAC,EAiBM,MAjBNH,GAiBM,EAhBJE,EAAA,EAAA,EAAAC,EAeMM,OA/BdC,EAkBkDG,EAAA,0BAlBlD,CAkBkByB,EAAsB+B,SAFhClE,EAeM,MAAA,CAdH,uBAAwBkE,CAAK,KAG9B1D,EAEM,MAFNV,GAEM,CADJK,EAAoEa,EAAA,CAAnD,YAAWN,EAAW,YAACyB,EAAoB,CAAA,CAAA,2BAG9D3B,EAMM,MANNU,GAMM,EALJnB,EAAA,EAAA,EAAAC,EAIEM,EA7Bd,KAAAC,EA4BoC4B,EAAfd,QAHTR,EAIEsD,EAAA,CAHC,IAAK9C,EAAY,GACjB,eAAcA,oDAMvBtB,IAAAC,EAwFQ,QAxFR2B,GAwFQ,CAvFNnB,EA6BQ,QA7BRgB,GA6BQ,CA5BNhB,EA2BK,KA3BLoC,GA2BK,aA1BHpC,EAA2B,KAAA,CAAvB,MAAM,WAAW,EAAA,KAAA,EAAA,GACrBA,EAEK,KAFLqC,GAEKlC,EADAC,EAAE,GAAA,kCAAA,CAAA,EAAA,CAAA,EAEPJ,EAEK,KAFLsC,GAEKnC,EADAC,EAAE,GAAA,2CAAA,CAAA,EAAA,CAAA,EAEPJ,EAEK,KAFLuC,GAEKpC,EADAC,EAAE,GAAA,iCAAA,CAAA,EAAA,CAAA,EAEPJ,EAEK,KAFLwC,GAEKrC,EADAC,EAAE,GAAA,kCAAA,CAAA,EAAA,CAAA,EAEPJ,EAEK,KAFLyC,GAEKtC,EADAC,EAAE,GAAA,6BAAA,CAAA,EAAA,CAAA,EAEPJ,EAEK,KAFL0C,GAEKvC,EADAC,EAAE,GAAA,+BAAA,CAAA,EAAA,CAAA,EAEPJ,EAEK,KAFL2C,GAEKxC,EADAC,EAAE,GAAA,iCAAA,CAAA,EAAA,CAAA,EAEPJ,EAEK,KAFL4C,GAEKzC,EADAC,EAAE,GAAA,oCAAA,CAAA,EAAA,CAAA,cAEPJ,EAA0B,KAAA,CAAtB,MAAM,YAAU,KAAA,EAAA,OAGxBA,EAwDQ,QAxDR6C,GAwDQ,EAvDNtD,EAAA,EAAA,EAAAC,EAsDKM,OAvHfC,EAoEkCG,EAAA,0BAA0B,KAAI,EAA7CW,QAHTrB,EAsDK,KAAA,CArDF,IAAKqB,EAAY,GAClB,MAAM,kBAGNb,EASK,KATL8C,GASK,CARHnD,EAOEiE,EAAA,CANA,MAAM,oBACL,kBAAiB/C,EAAY,GAC7B,cAAa,GACb,MAAO,GACP,eAAc,GACd,OAAQ,kCAIblB,EAIEkE,EAAA,CAHA,MAAM,OACL,YAAW3D,EAAW,YAACW,CAAW,EAClC,gBAAeT,EAAiB,kBAAC,0CAEpCJ,EAEK,KAFL+C,GACK5C,EAAAU,EAAY,aAAa,EAAA,CAAA,EAE9Bb,EAEK,KAFLgD,GACK7C,EAAAU,EAAY,QAAQ,EAAA,CAAA,EAEzBb,EAEK,KAFLiD,GACK9C,EAAAU,EAAY,SAAS,EAAA,CAAA,EAE1Bb,EAEK,KAFLkD,GAEK/C,EADAD,iBAAeW,EAAY,SAAS,CAAA,EAAA,CAAA,EAEzCb,EAEK,KAFLmD,GACKhD,EAAAU,EAAY,iBAAiB,EAAA,CAAA,EAElClB,EAGEmE,EAAA,CAFA,MAAM,SACL,OAAQ1D,EAAS,UAAC,IAAIS,EAAY,SAAS,sBAE9Cb,EAEK,KAFLoD,GAEKjD,EADAD,aAAWW,EAAY,UAAU,CAAA,EAAA,CAAA,EAGtCb,EASK,KATLqD,GASK,CAJMjD,EAAmB,oBAlH1CG,EAAA,GAAA,EAAA,OA8Gcf,EAOI,IAAA,CArHlB,IAAA,EA+GgB,MAAM,sBACL,KAAMU,EAAA,gBAAgBW,EAAY,EAAE,EACpC,MAAOT,EAAE,GAAA,iCAAA,IAGVT,EAAuCyB,EAAA,CAAxB,MAAM,eAAe,CAAA,CApHpD,EAAA,EAAAkC,EAAA,4BA2HI9D,EAEM,MA7HVuE,KA4HS3D,EAAE,GAAA,yCAAA,CAAA,EAAA,CAAA,oEC7DN5B,GAAU,CACb,KAAM,mBAEN,OAAQ,CAACC,CAAe,EAExB,WAAY,CACV,eAAA+C,EACA,QAAA7C,EACA,aAAA8C,CACD,EAED,MAAO,CACL,OAAQ,CACN,KAAM,OACN,QAAS,IAAM,CAAA,CACjB,CACD,EAED,MAAO,CACL,MAAO,CACL,KAAM,CAAE,EACR,UAAW,EACb,CACD,EAED,SAAU,CACH,KAAK,QACV,KAAK,MAAK,CACX,EAED,SAAU,CACR,GAAG1F,EAAW,CAAC,oBAAqB,YAAa,UAAW,aAAa,CAAC,CAC3E,EAED,QAAS,CACP,GAAGoB,EAAW,CAAC,mBAAmB,CAAC,EAEnC,YAAY6G,EAAK,CACf,MAAMrH,EAAO,KAAK,QAAQ,IAAIqH,EAAI,OAAO,EACzC,OAAO,KAAK,YAAY,IAAIrH,EAAK,YAAY,CAC9C,EAED,OAAQ,CACN,KAAK,UAAY,GACjB,KAAK,kBAAkB,KAAK,OAAO,EAAE,EAClC,KAAKsH,GAAQ,CACZ,KAAK,KAAOA,EACZ,KAAK,UAAY,EAClB,CAAA,EACA,MAAMhF,GAAO,CACZ,QAAQ,MAAMA,CAAG,EACjB,KAAK,KAAO,CAAA,EACZ,KAAK,UAAY,EAClB,CAAA,CACL,CACD,EAED,MAAO,CACL,QAAS,CACH,KAAK,QAAQ,KAAK,MAAK,CAC7B,CACF,CACF,EA5HOE,GAAA,CAAA,MAAM,uBAAuB,MADpC,IAAA,EAES,MAAM,yBAFf,IAAA,CAAA,EAMaC,GAAA,CAAA,MAAM,WAAW,EACfC,GAAA,CAAA,MAAM,gBAAgB,EACvBC,GAAA,CAAA,MAAM,sBAAsB,EAC1BoB,GAAA,CAAA,MAAM,MAAM,EAGZS,GAAA,CAAA,MAAM,QAAQ,EAGdH,GAAA,CAAA,MAAM,MAAM,EAGZoB,GAAA,CAAA,MAAM,UAAU,EAOnBC,GAAA,CAAA,MAAM,WAAW,EACfC,GAAA,CAAA,MAAM,gBAAgB,EAErBC,GAAA,CAAA,MAAM,MAAM,EAYZC,GAAA,CAAA,MAAM,UAAU,MAxChC,IAAA,CAAA,8FACE,OAAAjD,EAAA,EAAAC,EAkDM,MAlDNL,GAkDM,CAjDiCM,EAAS,WAA9CF,IAAAC,EAEM,MAFNE,GAEM,CADJC,EAAWC,CAAA,KAEGH,EAAA,KAAK,OAAM,GAA3BF,IAAAC,EA0CM,MA/CVK,GAAA,CAMMG,EAkBQ,QAlBRZ,GAkBQ,CAjBNY,EAgBQ,QAhBRX,GAgBQ,CAfNW,EAcK,KAdLV,GAcK,CAbHU,EAEK,KAFLU,GAEKP,EADAC,EAAE,GAAA,WAAA,CAAA,EAAA,CAAA,EAEPJ,EAEK,KAFLmB,GAEKhB,EADAC,EAAE,GAAA,aAAA,CAAA,EAAA,CAAA,EAEPJ,EAEK,KAFLgB,GAEKb,EADAC,EAAE,GAAA,kCAAA,CAAA,EAAA,CAAA,EAEPJ,EAEK,KAFLoC,GAEKjC,EADAC,EAAE,GAAA,uBAAA,CAAA,EAAA,CAAA,cAEPJ,EAA0B,KAAA,CAAtB,MAAM,YAAU,KAAA,EAAA,SAI1BA,EAqBQ,QArBRqC,GAqBQ,CApBNrC,EAmBQ,QAnBRsC,GAmBQ,EAlBN/C,EAAA,EAAA,EAAAC,EAiBKM,EA5Cf,KAAAC,EA2BgEN,EAAI,KAAXuE,QAA/CxE,EAiBK,KAAA,CAjBA,IAAKwE,EAAI,GAAI,MAAM,kBACtBhE,EAEK,KAFLuC,GAEKpC,EADAC,mBAAiB4D,EAAI,IAAI,CAAA,EAAA,CAAA,EAE9BrE,EAGEmE,EAAA,CAFA,MAAM,SACL,OAAQ1D,EAAS,UAAC,IAAI4D,EAAI,SAAS,sBAEtCrE,EAIEkE,EAAA,CAHA,MAAM,OACL,YAAW3D,EAAW,YAAC8D,CAAG,EAC1B,gBAAe5D,EAAiB,kBAAC,0CAEpCJ,EAEK,KAFLwC,GAEKrC,EADAC,iBAAe4D,EAAI,QAAQ,CAAA,EAAA,CAAA,cAEhChE,EAA0B,KAAA,CAAtB,MAAM,YAAU,KAAA,EAAA,yBAK5BR,EAEM,MAlDViD,KAiDSrC,EAAE,GAAA,uBAAA,CAAA,EAAA,CAAA,oECgFN5B,GAAU,CACb,KAAM,mBAEN,OAAQ,CAACC,CAAe,EAExB,WAAY,CACV,aAAAC,EACA,UAAAwF,GACA,aAAAzC,EACA,cAAA5C,CACD,EAED,MAAO,CACL,QAAS,CACP,KAAM,MACN,QAAS,IAAM,CAAA,CAChB,EACD,UAAW,CACT,KAAM,QACN,QAAS,EACV,EACD,QAAS,CACP,KAAM,QACN,QAAS,EACX,CACD,EAED,MAAO,CAAC,eAAe,EAEvB,MAAO,CACL,MAAO,CACL,YAAa,IACf,CACD,EAED,SAAU,CACR,GAAG9C,EAAW,CACZ,oBACA,sBACA,sBACA,sBACA,YACA,UACA,gBACA,aACF,CAAC,EAED,eAAgB,CACd,MAAO,CAAC,GAAG,KAAK,OAAO,EAAE,KAAK,CAACoI,EAAOC,IAAU,CAC9C,GAAI,CAACD,EAAO,MAAO,GACnB,MAAMvC,EAAY,KAAK,YAAY,IAAIuC,EAAM,YAAY,EACnDtC,EAAY,KAAK,YAAY,IAAIuC,EAAM,YAAY,EACnDtH,EAAoB,KAAK,oBAAoBqH,EAAM,YAAY,EAC/DpH,EAAoB,KAAK,oBAAoBqH,EAAM,YAAY,EACrE,OAAItH,IAAsBC,EACjB6E,EAAU,KAAK,cAAcC,EAAU,KAAM,OAAW,CAC7D,QAAS,EACV,CAAA,EAEM/E,EAAoBC,CAE9B,CAAA,CACF,EAED,gBAAiB,CAMf,MAAO,GALW,KAAK,QAAQ,OAAOJ,GAAQ,CAC5C,MAAM0H,EAAW,KAAK,QAAQ1H,EAAK,EAAE,EAErC,OADmB,KAAK,cAAc,IAAI0H,EAAS,cAAc,EAC/C,OACnB,CAAA,EACmB,MAAM,MAAM,KAAK,QAAQ,MAAM,EACpD,EAED,kBAAmB,CACjB,OAAO,KAAK,QAAQ,OAAO,CAACC,EAAK3H,IAAS2H,EAAM3H,EAAK,WAAY,CAAC,CACnE,EAED,gBAAiB,CACf,OAAO,KAAK,QAAQ,OAAO,CAAC2H,EAAK3H,IAAS2H,EAAM3H,EAAK,SAAU,CAAC,CACjE,EAED,iBAAkB,CAChB,GAAI,KAAK,QAAQ,SAAW,EAAG,MAAO,GACtC,IAAIiB,EAAY,KAAK,QAAQ,CAAC,EAAE,WAChC,YAAK,QAAQ,QAAQjB,GAAQ,CACvBA,EAAK,WAAaiB,IACpBA,EAAYjB,EAAK,WAEpB,CAAA,EACMiB,EAAYA,EAAU,UAAU,EAAG,EAAE,EAAI,EACjD,EAED,eAAgB,CACd,GAAI,KAAK,QAAQ,SAAW,EAAG,MAAO,GACtC,IAAI2G,EAAU,KAAK,QAAQ,CAAC,EAAE,SAC9B,YAAK,QAAQ,QAAQ5H,GAAQ,CACvBA,EAAK,SAAW4H,IAClBA,EAAU5H,EAAK,SAElB,CAAA,EACM4H,EAAUA,EAAQ,UAAU,EAAG,EAAE,EAAI,EAC7C,EAED,iBAAkB,CAChB,MAAO,CAAC,GAAG,IAAI,IAAI,KAAK,QAAQ,QAAQ5H,GAAQA,EAAK,SAAS,CAAC,CAAC,CAClE,CACD,EAED,QAAS,CACP,aAAa6H,EAAO,CAClB,MAAMC,EAAWD,EAAM,OACvB,KAAK,MAAM,cAAc,MAAM,KAAO,IAAIC,EAAS,UAAU,IAC9D,EAED,QAAQ9H,EAAM,CACZ,OAAI,OAAOA,GAAS,SACX,KAAK,QAAQ,IAAIA,CAAI,EAErBA,CAEV,EAED,iBAAiBA,EAAM,CACrB,OAAOA,GAAQA,EAAK,WAAaA,EAAK,WAAW,UAAU,EAAG,EAAE,EAAI,EACrE,EAED,eAAeA,EAAM,CACnB,OAAOA,GAAQA,EAAK,SAAWA,EAAK,SAAS,UAAU,EAAG,EAAE,EAAI,EACjE,EAED,kBAAkBA,EAAM,CACtB,OAAOA,GAAQA,EAAK,WAAa,KAAK,eAAeA,EAAK,UAAU,EAAI,EACzE,EAED,gBAAgBA,EAAM,CACpB,OAAOA,GAAQA,EAAK,SAAW,KAAK,eAAeA,EAAK,QAAQ,EAAI,EACrE,EAED,YAAY+H,EAAO,CACjB,MAAM/H,EAAO,KAAK,QAAQ+H,CAAK,EAC/B,OAAO/H,EAAO,KAAK,YAAY,IAAIA,EAAK,YAAY,EAAI,IACzD,EAED,aAAa+H,EAAO,CAClB,MAAM/H,EAAO,KAAK,QAAQ+H,CAAK,EAC/B,OAAO/H,EAAOA,EAAK,UAAY,CAAA,CAChC,EAED,WAAWA,EAAM,CACXA,EAAK,KAAO,KAAK,aAAa,GAChC,KAAK,YAAc,KAEnB,KAAK,YAAcA,EAErB,KAAK,MAAM,gBAAiBA,CAAI,CAClC,CACF,CACF,EA7ROwC,GAAA,CAAA,MAAM,WAAW,MAEX,MAAM,YAAY,IAAI,iBACpBU,GAAA,CAAA,MAAM,gBAAgB,EACvBT,GAAA,CAAA,MAAM,sBAAsB,EAC1BC,GAAA,CAAA,MAAM,MAAM,EAGZC,GAAA,CAAA,MAAM,QAAQ,EAGdoB,GAAA,CAAA,MAAM,YAAY,EAGlBS,GAAA,CAAA,MAAM,YAAY,EAGlBH,GAAA,CAAA,MAAM,WAAW,EAGjBoB,GAAA,CAAA,MAAM,SAAS,EAGfC,GAAA,CAAA,MAAM,WAAW,EAgBpBC,GAAA,CAAA,MAAM,WAAW,EACfC,GAAA,CAAA,MAAM,gBAAgB,EAzCrCC,GAAA,CAAA,SAAA,EA2DgBC,GAAA,CAAA,MAAM,QAAQ,EAOdC,GAAA,CAAA,MAAM,YAAY,EAGlBC,GAAA,CAAA,MAAM,UAAU,EAGhBC,GAAA,CAAA,MAAM,WAAW,EAGjBC,GAAA,CAAA,MAAM,SAAS,EAGfC,GAAA,CAAA,MAAM,WAAW,MA9EjC,IAAA,EAgFgB,MAAM,WAoBRE,GAAA,CAAA,MAAM,yBAAyB,EAG7BC,GAAA,CAAA,MAAM,YAAY,EAClBC,GAAA,CAAA,MAAM,UAAU,EAChBC,GAAA,CAAA,MAAM,WAAW,EACjBC,GAAA,CAAA,MAAM,SAAS,EACfC,GAAA,CAAA,MAAM,WAAW,oHA1G/B,OAAA9D,EAAA,EAAAC,EAmHM,MAnHNL,GAmHM,CAlHJa,EA6BM,MAAA,KAAA,CA5BJA,EA2BQ,QA3BRN,GA2BQ,CA1BNM,EAyBQ,QAzBRH,GAyBQ,CAxBNG,EAuBK,KAvBLZ,GAuBK,CAtBHY,EAEK,KAFLX,GAEKc,EADAC,EAAE,GAAA,wBAAA,CAAA,EAAA,CAAA,EAEPJ,EAEK,KAFLV,GAEKa,EADAC,EAAE,GAAA,0BAAA,CAAA,EAAA,CAAA,EAEPJ,EAEK,KAFLU,GAEKP,EADAC,KAA8B,yBAAA,EAAA,gBAAkB,KACrD,CAAA,EACAJ,EAEK,KAFLmB,GAEKhB,EADAC,KAA4B,uBAAA,EAAA,gBAAkB,KACnD,CAAA,EACAJ,EAEK,KAFLgB,GAEKb,EADAC,EAAE,GAAA,+BAAA,CAAA,EAAA,CAAA,EAEPJ,EAEK,KAFLoC,GAEKjC,EADAC,EAAE,GAAA,uBAAA,CAAA,EAAA,CAAA,EAEPJ,EAEK,KAFLqC,GAEKlC,EADAC,EAAE,GAAA,wBAAA,CAAA,EAAA,CAAA,cAEPJ,EAA0B,KAAA,CAAtB,MAAM,YAAU,KAAA,EAAA,eAM5BL,EAA0DgF,EAAA,CAA7C,aAAY1D,EAAS,UAAG,WAAUA,EAAO,2CAK9CA,EAAA,QAAQ,OAAM,OAHtBzB,EAgFM,MAAA,CAnHV,IAAA,EAoCM,MAAM,iBApCZ,gBAAAgE,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,IAAAoB,IAqCuB1E,EAAY,cAAAA,EAAA,aAAA,GAAA0E,CAAA,KAG7B5E,EA0EQ,QA1ERsC,GA0EQ,CAzENtC,EAwEQ,QAxERuC,GAwEQ,EAvENhD,EAAA,EAAA,EAAAC,EAyDKM,EAnGf,KAAAC,EAkD2BG,EAAa,cAArBvD,QART6C,EAyDK,KAAA,CAxDF,IAAK7C,EAAK,GACV,MA5CbsD,EAAA,CA4C8C,SAAAR,EAAA,aAAeA,EAAW,YAAC,KAAO9C,EAAK,uDAKxE,QAAK8G,GAAEvD,EAAU,WAACvD,CAAI,IAQfuD,EAAW,YAACvD,EAAK,EAAE,OAL3B0D,EAMEwD,EAAA,CA1Dd,IAAA,EAqDc,MAAM,OACL,YAAW3D,EAAA,YAAYvD,EAAK,EAAE,EAC9B,gBAAeyD,EAAiB,kBAAC,GACjC,UAASzD,EAAK,qDAxD7B4D,EAAA,GAAA,EAAA,EA2DYP,EAMK,KANLyC,GAMK,CAFKvC,EAAO,QAACvD,EAAK,EAAE,OAHvB0D,EAIEI,EAAA,CAhEhB,IAAA,EA6DiB,KAAMP,EAAA,QAAQvD,EAAK,EAAE,EACrB,YAAW,sBA9D5B4D,EAAA,GAAA,EAAA,IAkEYP,EAEK,KAFL0C,GACKvC,EAAAD,EAAA,kBAAkBvD,CAAI,CAAA,EAAA,CAAA,EAE3BqD,EAEK,KAFL2C,GACKxC,EAAAD,EAAA,gBAAgBvD,CAAI,CAAA,EAAA,CAAA,EAEzBqD,EAEK,KAFL4C,GACKzC,EAAAD,EAAA,iBAAiBvD,CAAI,CAAA,EAAA,CAAA,EAE1BqD,EAEK,KAFL6C,GACK1C,EAAAD,EAAA,eAAevD,CAAI,CAAA,EAAA,CAAA,EAExBqD,EAmBK,KAnBL8C,GAmBK,CAhBM,CAAA1C,EAAA,sBAAwBA,EAAmB,qBAFpDb,IAAAC,EAiBM,MAjBNuD,GAiBM,EAbJxD,EAAA,EAAA,EAAAC,EAYMM,OA/FtBC,EAsFqCG,EAAA,aAAavD,CAAI,EAA7BkI,QAHTrF,EAYM,MAAA,CAXJ,MAAM,iBACL,IAAKqF,SAGNxE,EAMEC,EAAA,CALA,MAAM,6BACL,IAAK3D,EAAK,OAAWkI,EACrB,OAAQzE,EAAA,UAAU,IAAIyE,CAAQ,EAC9B,KAAM,GACN,YAAW,qCA7FhCtE,EAAA,GAAA,EAAA,gBAkGYP,EAA0B,KAAA,CAAtB,MAAM,YAAU,KAAA,EAAA,EAlGhC,EAAA,GAAAwC,EAAA,UAoGUxC,EAYK,KAZLgD,GAYK,CAXHhD,EAA+B,YAAxBI,EAAE,GAAA,YAAA,CAAA,EAAA,CAAA,EACTJ,EAA6B,YAAtBE,EAAc,cAAA,EAAA,CAAA,EACrBF,EAAkE,KAAlEiD,GAA0B9C,EAAAC,EAAA,eAAeF,EAAgB,gBAAA,CAAA,EAAA,CAAA,EACzDF,EAA8D,KAA9DkD,GAAwB/C,EAAAC,EAAA,eAAeF,EAAc,cAAA,CAAA,EAAA,CAAA,EACrDF,EAAgD,KAAhDmD,GAAgDhD,EAAvBD,EAAe,eAAA,EAAA,CAAA,EACxCF,EAA4C,KAA5CoD,GAA4CjD,EAArBD,EAAa,aAAA,EAAA,CAAA,EACpCF,EAGK,KAHLqD,GACKlD,EAAAD,EAAA,gBAAgB,MAAM,EAAG,IACzBC,EAAAC,EAAA,IAAsB,iBAAAF,EAAA,gBAAgB,MAAM,CAAA,EAAA,CAAA,cAEjDF,EAA0B,KAAA,CAAtB,MAAM,YAAU,KAAA,EAAA,eA/GhCO,EAAA,GAAA,EAAA"}