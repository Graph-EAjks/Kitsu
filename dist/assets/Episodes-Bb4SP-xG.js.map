{"version":3,"file":"Episodes-Bb4SP-xG.js","sources":["../../src/components/lists/EpisodeList.vue","../../src/components/pages/Episodes.vue"],"sourcesContent":["<template>\n  <div class=\"data-list\">\n    <div class=\"datatable-wrapper\" ref=\"body\" @scroll.passive=\"onBodyScroll\">\n      <table-header-menu\n        ref=\"headerMenu\"\n        :is-minimized=\"hiddenColumns[lastHeaderMenuDisplayed]\"\n        :is-edit-allowed=\"isCurrentUserManager\"\n        :is-sticked=\"stickedColumns[lastHeaderMenuDisplayed]\"\n        @minimize-clicked=\"onMinimizeColumnToggled()\"\n        @delete-all-clicked=\"onDeleteAllTasksClicked()\"\n        @sort-by-clicked=\"onSortByTaskTypeClicked()\"\n        @select-column=\"onSelectColumn('episode')\"\n        @toggle-stick=\"stickColumnClicked()\"\n      />\n\n      <table-metadata-header-menu\n        ref=\"headerMetadataMenu\"\n        :is-edit-allowed=\"\n          isMetadataColumnEditAllowed(lastMetadaDataHeaderMenuDisplayed)\n        \"\n        :is-sticked=\"stickedColumns[lastMetadaDataHeaderMenuDisplayed]\"\n        @edit-clicked=\"onEditMetadataClicked()\"\n        @delete-clicked=\"onDeleteMetadataClicked()\"\n        @sort-by-clicked=\"onSortByMetadataClicked()\"\n        @toggle-stick=\"metadataStickColumnClicked($event)\"\n      />\n\n      <table class=\"datatable\">\n        <thead\n          class=\"datatable-head\"\n          id=\"datatable-episode\"\n          v-columns-resizable\n        >\n          <tr>\n            <th\n              scope=\"col\"\n              class=\"name episode-name datatable-row-header\"\n              ref=\"th-episode\"\n            >\n              <div class=\"flexrow\">\n                <span class=\"flexrow-item\">\n                  {{ $t('episodes.fields.name') }}\n                </span>\n                <button-simple\n                  class=\"is-small flexrow-item\"\n                  icon=\"plus\"\n                  :text=\"''\"\n                  @click=\"onAddMetadataClicked\"\n                  v-if=\"\n                    (isCurrentUserManager || isCurrentUserSupervisor) &&\n                    !isLoading\n                  \"\n                />\n              </div>\n            </th>\n\n            <template v-if=\"isShowInfos\">\n              <metadata-header\n                :ref=\"`editor-${j}`\"\n                :key=\"descriptor.id\"\n                :descriptor=\"descriptor\"\n                :left=\"\n                  offsets['editor-' + j] ? `${offsets['editor-' + j]}px` : '0'\n                \"\n                is-stick\n                :style=\"{\n                  'z-index': 1001\n                }\"\n                @show-metadata-header-menu=\"\n                  event => showMetadataHeaderMenu(descriptor.id, event)\n                \"\n                v-for=\"(descriptor, j) in stickedVisibleMetadataDescriptors\"\n              />\n            </template>\n            <template v-if=\"!isLoading\">\n              <validation-header\n                :ref=\"`validation-${columnIndexInGrid}`\"\n                :key=\"columnId\"\n                :hidden-columns=\"hiddenColumns\"\n                :column-id=\"columnId\"\n                :validation-style=\"getValidationStyle(columnId)\"\n                :left=\"\n                  offsets['validation-' + columnIndexInGrid]\n                    ? `${offsets['validation-' + columnIndexInGrid]}px`\n                    : '0'\n                \"\n                type=\"editor\"\n                is-stick\n                @show-header-menu=\"\n                  event => showHeaderMenu(columnId, columnIndexInGrid, event)\n                \"\n                v-for=\"(\n                  columnId, columnIndexInGrid\n                ) in stickedDisplayedValidationColumns\"\n              />\n            </template>\n\n            <th\n              scope=\"col\"\n              class=\"description selectable\"\n              v-if=\"!isCurrentUserClient && isShowInfos && isEpisodeDescription\"\n            >\n              {{ $t('episodes.fields.description') }}\n            </th>\n\n            <template v-if=\"isShowInfos\">\n              <metadata-header\n                :key=\"descriptor.id\"\n                :descriptor=\"descriptor\"\n                @show-metadata-header-menu=\"\n                  event => showMetadataHeaderMenu(descriptor.id, event)\n                \"\n                v-for=\"descriptor in nonStickedVisibleMetadataDescriptors\"\n              />\n            </template>\n            <th\n              scope=\"col\"\n              class=\"time-spent\"\n              ref=\"th-spent\"\n              v-if=\"\n                !isCurrentUserClient &&\n                isShowInfos &&\n                isEpisodeTime &&\n                metadataDisplayHeaders.timeSpent\n              \"\n            >\n              {{ $t('episodes.fields.time_spent') }}\n            </th>\n            <th\n              scope=\"col\"\n              class=\"estimation\"\n              :title=\"$t('main.estimation')\"\n              ref=\"th-spent\"\n              v-if=\"\n                !isCurrentUserClient &&\n                isShowInfos &&\n                isEpisodeEstimation &&\n                metadataDisplayHeaders.estimation\n              \"\n            >\n              {{ $t('main.estimation_short') }}\n            </th>\n            <th\n              scope=\"col\"\n              class=\"status\"\n              ref=\"th-status\"\n              v-if=\"isShowInfos && metadataDisplayHeaders.status\"\n            >\n              {{ $t('main.status') }}\n            </th>\n\n            <th\n              scope=\"col\"\n              class=\"resolution selectable\"\n              v-if=\"!isCurrentUserClient && isShowInfos && isEpisodeResolution\"\n            >\n              {{ $t('shots.fields.resolution') }}\n            </th>\n\n            <template v-if=\"!isLoading\">\n              <validation-header\n                :key=\"columnId\"\n                :hidden-columns=\"hiddenColumns\"\n                :column-id=\"columnId\"\n                :validation-style=\"getValidationStyle(columnId)\"\n                type=\"episodes\"\n                @show-header-menu=\"\n                  event => {\n                    showHeaderMenu(columnId, columnIndexInGrid, event)\n                  }\n                \"\n                v-for=\"(\n                  columnId, columnIndexInGrid\n                ) in nonStickedDisplayedValidationColumns\"\n              />\n            </template>\n            <th scope=\"col\" class=\"actions\" ref=\"actionsSection\">\n              <button-simple\n                :class=\"{\n                  'is-small': true,\n                  highlighted: isEmptyTask\n                }\"\n                icon=\"plus\"\n                :text=\"$t('tasks.create_tasks')\"\n                @click=\"$emit('create-tasks')\"\n                v-if=\"\n                  isCurrentUserManager &&\n                  displayedEpisodes.length > 0 &&\n                  !isLoading\n                \"\n              />\n\n              <table-metadata-selector-menu\n                :descriptors=\"episodeMetadataDescriptors\"\n                :exclude=\"{\n                  timeSpent: !isEpisodeTime,\n                  estimation: !isEpisodeEstimation\n                }\"\n                namespace=\"episodes\"\n                v-model=\"metadataDisplayHeaders\"\n                v-show=\"columnSelectorDisplayed\"\n                v-if=\"isShowInfos\"\n              />\n\n              <button-simple\n                class=\"is-small is-pulled-right mr05\"\n                icon=\"down\"\n                @click=\"toggleColumnSelector\"\n                v-if=\"episodeMetadataDescriptors.length > 0 && isShowInfos\"\n              />\n            </th>\n          </tr>\n        </thead>\n        <tbody class=\"datatable-body\">\n          <template v-if=\"!isLoading && isListVisible\">\n            <tr\n              class=\"datatable-row\"\n              scope=\"row\"\n              :key=\"episode.id\"\n              :class=\"{ canceled: episode.canceled }\"\n              v-for=\"(episode, i) in displayedEpisodes\"\n            >\n              <th\n                :class=\"{\n                  'datatable-row-header': true,\n                  'episode-name': true,\n                  name: true,\n                  strong: !episode.canceled\n                }\"\n              >\n                <div class=\"flexrow\">\n                  <entity-thumbnail\n                    :entity=\"episode\"\n                    :width=\"isBigThumbnails ? 150 : 50\"\n                    :height=\"isBigThumbnails ? 100 : 33\"\n                    :empty-width=\"isBigThumbnails ? 150 : 50\"\n                    :empty-height=\"isBigThumbnails ? 100 : 34\"\n                  />\n                  <router-link\n                    tabindex=\"-1\"\n                    :title=\"episode.name\"\n                    :to=\"episodePath(episode.id)\"\n                  >\n                    {{ episode.name }}\n                  </router-link>\n                </div>\n              </th>\n\n              <!-- Metadata stick -->\n              <template v-if=\"isShowInfos\">\n                <td\n                  :ref=\"`editor-${i}-${j}`\"\n                  class=\"metadata-descriptor datatable-row-header\"\n                  :title=\"\n                    episode.data ? episode.data[descriptor.field_name] : ''\n                  \"\n                  :style=\"{\n                    'z-index': 1000 - i, // Need for combo to be above the next cell\n                    left: offsets['editor-' + j]\n                      ? `${offsets['editor-' + j]}px`\n                      : '0'\n                  }\"\n                  :key=\"episode.id + '-' + descriptor.id\"\n                  v-for=\"(descriptor, j) in stickedVisibleMetadataDescriptors\"\n                >\n                  <metadata-input\n                    :entity=\"episode\"\n                    :descriptor=\"descriptor\"\n                    :indexes=\"{ i, j }\"\n                    @metadata-changed=\"$emit('metadata-changed', $event)\"\n                  />\n                </td>\n              </template>\n\n              <template v-if=\"!isLoading\">\n                <validation-cell\n                  :ref=\"`validation-${i}-${j}`\"\n                  :key=\"columnId + '-' + episode.id\"\n                  :class=\"{\n                    'validation-cell': !hiddenColumns[columnId],\n                    'hidden-validation-cell': hiddenColumns[columnId],\n                    'datatable-row-header': true\n                  }\"\n                  :column=\"taskTypeMap.get(columnId)\"\n                  :column-y=\"j\"\n                  :entity=\"episode\"\n                  :is-assignees=\"isShowAssignations\"\n                  :is-static=\"true\"\n                  :left=\"\n                    offsets['validation-' + j]\n                      ? `${offsets['validation-' + j]}px`\n                      : '0'\n                  \"\n                  :minimized=\"hiddenColumns[columnId]\"\n                  :row-x=\"i\"\n                  :selected=\"isSelected(i, j)\"\n                  :sticked=\"true\"\n                  :task-test=\"taskMap.get(episode.validations.get(columnId))\"\n                  @select=\"infos => onTaskSelected(infos, true)\"\n                  @unselect=\"infos => onTaskUnselected(infos, true)\"\n                  v-for=\"(columnId, j) in stickedDisplayedValidationColumns\"\n                />\n              </template>\n\n              <description-cell\n                class=\"description\"\n                :entry=\"episode\"\n                :editable=\"isCurrentUserManager\"\n                @description-changed=\"\n                  value => onDescriptionChanged(episode, value)\n                \"\n                v-if=\"\n                  !isCurrentUserClient && isShowInfos && isEpisodeDescription\n                \"\n              />\n\n              <!-- other Metadata cells -->\n              <template v-if=\"isShowInfos\">\n                <td\n                  class=\"metadata-descriptor\"\n                  :title=\"\n                    episode.data ? episode.data[descriptor.field_name] : ''\n                  \"\n                  :key=\"episode.id + '-' + descriptor.id\"\n                  v-for=\"(\n                    descriptor, j\n                  ) in nonStickedVisibleMetadataDescriptors\"\n                >\n                  <metadata-input\n                    :entity=\"episode\"\n                    :descriptor=\"descriptor\"\n                    :indexes=\"{ i, j }\"\n                    @metadata-changed=\"$emit('metadata-changed', $event)\"\n                  />\n                </td>\n              </template>\n\n              <td\n                class=\"time-spent selectable\"\n                v-if=\"\n                  !isCurrentUserClient &&\n                  isShowInfos &&\n                  isEpisodeTime &&\n                  metadataDisplayHeaders.timeSpent\n                \"\n              >\n                {{ formatDuration(episode.timeSpent) }}\n              </td>\n\n              <td\n                class=\"estimation selectable\"\n                v-if=\"\n                  !isCurrentUserClient &&\n                  isShowInfos &&\n                  isEpisodeEstimation &&\n                  metadataDisplayHeaders.estimation\n                \"\n              >\n                {{ formatDuration(episode.estimation) }}\n              </td>\n\n              <td\n                scope=\"col\"\n                class=\"status metadata-descriptor\"\n                ref=\"th-status\"\n                v-if=\"isShowInfos && metadataDisplayHeaders.status\"\n              >\n                <span class=\"select\">\n                  <select\n                    class=\"select-input\"\n                    @change=\"\n                      event =>\n                        onEpisodeStatusChanged(episode, event.target.value)\n                    \"\n                  >\n                    <option\n                      v-for=\"option in episodeStatusOptions\"\n                      :key=\"`${episode.id}-status-option-${option.value}`\"\n                      :value=\"option.value\"\n                      :selected=\"(episode.status || 'running') === option.value\"\n                    >\n                      {{ $t('episodes.status.' + option.label) }}\n                    </option>\n                  </select>\n                </span>\n              </td>\n\n              <td class=\"resolution\" v-if=\"isEpisodeResolution && isShowInfos\">\n                <input\n                  :class=\"{\n                    'input-editor': true,\n                    error: !isValidResolution(episode)\n                  }\"\n                  :value=\"\n                    getMetadataFieldValue({ field_name: 'resolution' }, episode)\n                  \"\n                  @input=\"\n                    event =>\n                      onMetadataFieldChanged(\n                        episode,\n                        { field_name: 'resolution' },\n                        event\n                      )\n                  \"\n                  @keyup.ctrl=\"\n                    event =>\n                      onInputKeyUp(event, getIndex(i, k), descriptorLength + 3)\n                  \"\n                  v-if=\"isCurrentUserManager\"\n                />\n\n                <span class=\"metadata-value selectable\" v-else>\n                  {{\n                    getMetadataFieldValue({ field_name: 'resolution' }, episode)\n                  }}\n                </span>\n              </td>\n\n              <template v-if=\"!isLoading\">\n                <validation-cell\n                  :ref=\"`validation-${i}-${\n                    j + stickedDisplayedValidationColumns.length\n                  }`\"\n                  :class=\"{\n                    'validation-cell': !hiddenColumns[columnId],\n                    'hidden-validation-cell': hiddenColumns[columnId]\n                  }\"\n                  :key=\"`${columnId}-${episode.id}`\"\n                  :column=\"taskTypeMap.get(columnId)\"\n                  :entity=\"episode\"\n                  :task-test=\"\n                    taskMap.get(\n                      episode.validations\n                        ? episode.validations.get(columnId)\n                        : null\n                    )\n                  \"\n                  :minimized=\"hiddenColumns[columnId]\"\n                  :selected=\"\n                    isSelected(i, j + stickedDisplayedValidationColumns.length)\n                  \"\n                  :row-x=\"i\"\n                  :column-y=\"j\"\n                  :is-assignees=\"isShowAssignations\"\n                  @select=\"onTaskSelected\"\n                  @unselect=\"onTaskUnselected\"\n                  v-for=\"(columnId, j) in nonStickedDisplayedValidationColumns\"\n                />\n              </template>\n              <row-actions-cell\n                :entry=\"episode\"\n                @delete-clicked=\"$emit('delete-clicked', episode)\"\n                @edit-clicked=\"$emit('edit-clicked', episode)\"\n                v-if=\"isCurrentUserManager\"\n              />\n              <td class=\"actions\" v-else></td>\n            </tr>\n          </template>\n        </tbody>\n      </table>\n    </div>\n\n    <table-info :is-loading=\"isLoading\" :is-error=\"isError\" />\n\n    <div\n      class=\"has-text-centered\"\n      v-if=\"isEmptyList && isCurrentUserClient && !isLoading\"\n    >\n      <p class=\"info\">\n        <img src=\"../../assets/illustrations/empty_shot.png\" />\n      </p>\n      <p class=\"info\">{{ $t('episodes.empty_list_client') }}</p>\n    </div>\n\n    <p class=\"has-text-centered nb-episodes\" v-if=\"!isEmptyList && !isLoading\">\n      {{ displayedEpisodesLength }}\n      {{ $tc('episodes.number', displayedEpisodesLength) }}\n      <span\n        v-if=\"displayedEpisodesTimeSpent > 0 && displayedEpisodesEstimation > 0\"\n      >\n        ({{ formatDuration(displayedEpisodesTimeSpent) }}\n        {{ $tc('main.days_spent', displayedEpisodesTimeSpent) }},\n        {{ formatDuration(displayedEpisodesEstimation) }}\n        {{ $tc('main.man_days', displayedEpisodesEstimation) }})\n      </span>\n    </p>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\n\nimport { descriptorMixin } from '@/components/mixins/descriptors'\nimport { domMixin } from '@/components/mixins/dom'\nimport { entityListMixin } from '@/components/mixins/entity_list'\nimport { formatListMixin } from '@/components/mixins/format'\nimport { selectionListMixin } from '@/components/mixins/selection'\n\nimport ButtonSimple from '@/components/widgets/ButtonSimple.vue'\nimport DescriptionCell from '@/components/cells/DescriptionCell.vue'\nimport EntityThumbnail from '@/components/widgets/EntityThumbnail.vue'\nimport MetadataHeader from '@/components/cells/MetadataHeader.vue'\nimport MetadataInput from '@/components/cells/MetadataInput.vue'\nimport RowActionsCell from '@/components/cells/RowActionsCell.vue'\nimport TableMetadataHeaderMenu from '@/components/widgets/TableMetadataHeaderMenu.vue'\nimport TableMetadataSelectorMenu from '@/components/widgets/TableMetadataSelectorMenu.vue'\nimport TableHeaderMenu from '@/components/widgets/TableHeaderMenu.vue'\nimport TableInfo from '@/components/widgets/TableInfo.vue'\nimport ValidationCell from '@/components/cells/ValidationCell.vue'\nimport ValidationHeader from '@/components/cells/ValidationHeader.vue'\n\nexport default {\n  name: 'episode-list',\n\n  mixins: [\n    descriptorMixin,\n    domMixin,\n    formatListMixin,\n    entityListMixin,\n    selectionListMixin\n  ],\n\n  props: {\n    displayedEpisodes: {\n      type: Array,\n      default: () => []\n    },\n    isError: {\n      type: Boolean,\n      default: false\n    },\n    isLoading: {\n      type: Boolean,\n      default: false\n    },\n    validationColumns: {\n      type: Array,\n      default: () => []\n    },\n    departmentFilter: {\n      type: Array,\n      default: () => []\n    }\n  },\n\n  emits: [\n    'create-tasks',\n    'delete-clicked',\n    'edit-clicked',\n    'field-changed',\n    'metadata-changed'\n  ],\n\n  data() {\n    return {\n      type: 'episode',\n      hiddenColumns: {},\n      lastHeaderMenuDisplayed: null,\n      lastMetadaDataHeaderMenuDisplayed: null,\n      lastHeaderMenuDisplayedIndexInGrid: null,\n      lastSelectedEpisode: null,\n      lastSelection: null,\n      metadataDisplayHeaders: {\n        estimation: true,\n        timeSpent: true,\n        status: true\n      },\n      offsets: {},\n      stickedColumns: {},\n      episodeStatusOptions: [\n        { label: 'canceled', value: 'canceled' },\n        { label: 'complete', value: 'complete' },\n        { label: 'running', value: 'running' },\n        { label: 'standby', value: 'standby' }\n      ]\n    }\n  },\n\n  components: {\n    ButtonSimple,\n    DescriptionCell,\n    EntityThumbnail,\n    MetadataHeader,\n    MetadataInput,\n    RowActionsCell,\n    TableHeaderMenu,\n    TableMetadataHeaderMenu,\n    TableMetadataSelectorMenu,\n    TableInfo,\n    ValidationCell,\n    ValidationHeader\n  },\n\n  computed: {\n    ...mapGetters([\n      'currentProduction',\n      'episodeMap',\n      'episodeFilledColumns',\n      'episodeMetadataDescriptors',\n      'episodes',\n      'episodeSearchText',\n      'episodeSelectionGrid',\n      'currentEpisode',\n      'displayedEpisodesEstimation',\n      'displayedEpisodesLength',\n      'displayedEpisodesTimeSpent',\n      'isBigThumbnails',\n      'isCurrentUserAdmin',\n      'isCurrentUserManager',\n      'isCurrentUserSupervisor',\n      'isCurrentUserClient',\n      'isSingleEpisode',\n      'isEpisodeDescription',\n      'isEpisodeEstimation',\n      'isEpisodeResolution',\n      'isEpisodeTime',\n      'isShowAssignations',\n      'isShowInfos',\n      'nbSelectedTasks',\n      'selectedTasks',\n      'taskMap',\n      'taskTypeMap',\n      'user'\n    ]),\n\n    isEmptyList() {\n      return (\n        this.displayedEpisodes.length &&\n        this.displayedEpisodes[0].length === 0 &&\n        !this.isLoading &&\n        !this.isError &&\n        (!this.episodeSearchText || this.episodeSearchText.length === 0)\n      )\n    },\n\n    isListVisible() {\n      return (\n        !this.isLoading && !this.isError && this.displayedEpisodesLength > 0\n      )\n    },\n\n    visibleColumns() {\n      let count = 2\n      count +=\n        !this.isCurrentUserClient &&\n        this.isShowInfos &&\n        this.isEpisodeDescription\n          ? 1\n          : 0\n      count += this.visibleMetadataDescriptors.length\n      count +=\n        !this.isCurrentUserClient &&\n        this.isShowInfos &&\n        this.isEpisodeTime &&\n        this.metadataDisplayHeaders.timeSpent\n          ? 1\n          : 0\n      count +=\n        !this.isCurrentUserClient &&\n        this.isShowInfos &&\n        this.isEpisodeEstimation &&\n        this.metadataDisplayHeaders.estimation\n          ? 1\n          : 0\n      count += this.displayedValidationColumns.length\n      return count\n    },\n\n    displayedValidationColumns() {\n      return this.validationColumns.filter(columnId => {\n        return (\n          this.episodeFilledColumns[columnId] &&\n          (!this.hiddenColumns[columnId] || this.isShowInfos)\n        )\n      })\n    },\n\n    metadataDescriptors() {\n      return this.episodeMetadataDescriptors\n    },\n\n    localStorageStickKey() {\n      return `stick-episodes-${this.currentProduction.id}`\n    }\n  },\n\n  methods: {\n    ...mapActions(['setEpisodeSelection']),\n\n    isSelected(lineIndex, columnIndex) {\n      return (\n        this.episodeSelectionGrid[lineIndex] &&\n        this.episodeSelectionGrid[lineIndex][columnIndex]\n      )\n    },\n\n    episodePath(episodeId) {\n      return this.getPath('episode', episodeId)\n    },\n\n    getPath(section, episodeId) {\n      const route = {\n        name: section,\n        params: {\n          production_id: this.currentProduction.id\n        }\n      }\n      if (episodeId) {\n        route.params.episode_id = episodeId\n      }\n      return route\n    },\n\n    onEpisodeStatusChanged(episode, status) {\n      this.$emit('field-changed', {\n        entry: episode,\n        fieldName: 'status',\n        value: status\n      })\n    }\n  },\n\n  watch: {\n    displayedEpisodes() {\n      this.$options.lineIndex = {}\n    },\n\n    validationColumns() {\n      this.initHiddenColumns(this.validationColumns, this.hiddenColumns)\n    },\n\n    stickedColumns() {\n      this.updateOffsets()\n    },\n\n    isLoading() {\n      this.updateOffsets()\n    },\n\n    isBigThumbnails() {\n      this.updateOffsets()\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dark {\n  th .input-editor,\n  td .select select,\n  td .input-editor {\n    color: $white;\n\n    option {\n      background: $dark-grey-light;\n      color: $white;\n    }\n\n    &:focus,\n    &:active,\n    &:hover {\n      background: $dark-grey-light;\n    }\n  }\n}\n\n.project {\n  min-width: 60px;\n  width: 60px;\n}\n\n.actions {\n  min-width: 160px;\n  position: sticky;\n}\n\nth.actions {\n  padding: 0.4em;\n}\n\n.name {\n  min-width: 100px;\n  width: 100px;\n}\n\n.name a {\n  color: inherit;\n}\n\n.name.episode-name {\n  min-width: 110px;\n  width: 110px;\n}\n\n.description {\n  min-width: 200px;\n  max-width: 200px;\n  width: 200px;\n}\n\n.status {\n  min-width: 120px;\n  max-width: 120px;\n  width: 120px;\n}\n\n.validation-cell {\n  min-width: 150px;\n  max-width: 150px;\n  width: 150px;\n}\n\n.estimation,\n.time-spent {\n  min-width: 70px;\n  max-width: 70px;\n  width: 70px;\n}\n\ntd.name {\n  font-size: 1.2em;\n}\n\nspan.thumbnail-empty {\n  display: block;\n  width: 50px;\n  height: 30px;\n  background: #f3f3f3;\n}\n\n.info {\n  margin-top: 2em;\n}\n\n.info img {\n  max-width: 80vh;\n}\n\n.datatable-row th.name {\n  font-size: 1.1em;\n  padding: 6px;\n}\n\n.datatable-row-header {\n  cursor: pointer;\n}\n\nth .input-editor,\ntd .input-editor {\n  color: $grey-strong;\n  height: 100%;\n  padding: 0.5rem;\n  width: 100%;\n  background: transparent;\n  border: 1px solid transparent;\n  z-index: 100;\n\n  &:active,\n  &:focus,\n  &:hover {\n    background: transparent;\n    background: white;\n  }\n\n  &:active,\n  &:focus {\n    border: 1px solid $green;\n  }\n\n  &:hover {\n    border: 1px solid $light-green;\n  }\n\n  &:invalid {\n    color: $red;\n  }\n}\n\ninput[type='number']::-webkit-outer-spin-button,\ninput[type='number']::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\ninput[type='number'] {\n  -moz-appearance: textfield;\n}\n\n// Metadata cell CSS\n\ntd.metadata-descriptor {\n  height: 3.1rem;\n  max-width: 120px;\n  padding: 0;\n}\n\ntd .select {\n  color: $grey-strong;\n  margin: 0;\n  height: 100%;\n  width: 100%;\n  border: 1px solid transparent;\n\n  &::after {\n    border-color: transparent;\n  }\n\n  &:active,\n  &:focus,\n  &:hover {\n    &::after {\n      border-color: $green;\n    }\n  }\n\n  select {\n    color: $grey-strong;\n    height: 100%;\n    width: 100%;\n    background: transparent;\n    border-radius: 0;\n    border: 1px solid transparent;\n\n    &:focus {\n      border: 1px solid $green;\n      background: white;\n    }\n\n    &:hover {\n      background: transparent;\n      background: white;\n      border: 1px solid $light-green;\n    }\n  }\n}\n\n.metadata-value {\n  padding: 0.8rem;\n}\n\n.resolution {\n  min-width: 110px;\n  max-width: 110px;\n  width: 110px;\n}\n</style>\n","<template>\n  <div class=\"columns fixed-page\">\n    <div class=\"column main-column\">\n      <div class=\"episodes page\">\n        <div class=\"episode-list-header page-header\">\n          <div class=\"flexrow\">\n            <search-field\n              ref=\"episode-search-field\"\n              :can-save=\"true\"\n              @change=\"onSearchChange\"\n              @save=\"saveSearchQuery\"\n              placeholder=\"ex: e01 episode=wip\"\n            />\n            <button-simple\n              class=\"flexrow-item\"\n              :title=\"$t('entities.build_filter.title')\"\n              icon=\"filter\"\n              @click=\"() => (modals.isBuildFilterDisplayed = true)\"\n            />\n            <div class=\"filler\"></div>\n            <div class=\"flexrow flexrow-item\" v-if=\"!isCurrentUserClient\">\n              <combobox-department\n                class=\"combobox-department flexrow-item\"\n                :selectable-departments=\"selectableDepartments('Episode')\"\n                :display-all-and-my-departments=\"true\"\n                rounded\n                v-model=\"selectedDepartment\"\n                v-if=\"departments.length > 0\"\n              />\n              <show-assignations-button class=\"flexrow-item\" />\n              <show-infos-button class=\"flexrow-item\" />\n              <big-thumbnails-button class=\"flexrow-item\" />\n            </div>\n            <div class=\"flexrow\" v-if=\"isCurrentUserManager\">\n              <button-simple\n                class=\"flexrow-item\"\n                :text=\"$t('episodes.new_episode')\"\n                icon=\"plus\"\n                @click=\"showNewModal\"\n              />\n            </div>\n          </div>\n\n          <div class=\"query-list mt1\">\n            <search-query-list\n              :queries=\"episodeSearchQueries\"\n              type=\"episode\"\n              @change-search=\"changeSearch\"\n              @remove-search=\"removeSearchQuery\"\n              v-if=\"!isEpisodesLoading && !initialLoading\"\n            />\n          </div>\n        </div>\n\n        <sorting-info\n          :sorting=\"episodeSorting\"\n          @clear-sorting=\"onChangeSortClicked(null)\"\n          v-if=\"episodeSorting?.length\"\n        />\n        <episode-list\n          ref=\"episode-list\"\n          :displayed-episodes=\"displayedEpisodes\"\n          :is-loading=\"isEpisodesLoading || initialLoading\"\n          :is-error=\"isEpisodesLoadingError\"\n          :validation-columns=\"episodeValidationColumns\"\n          :department-filter=\"departmentFilter\"\n          @add-metadata=\"onAddMetadataClicked\"\n          @change-sort=\"onChangeSortClicked\"\n          @create-tasks=\"showCreateTasksModal\"\n          @delete-all-tasks=\"onDeleteAllTasksClicked\"\n          @delete-clicked=\"onDeleteClicked\"\n          @delete-metadata=\"onDeleteMetadataClicked\"\n          @edit-clicked=\"onEditClicked\"\n          @edit-metadata=\"onEditMetadataClicked\"\n          @field-changed=\"onFieldChanged\"\n          @metadata-changed=\"onMetadataChanged\"\n          @scroll=\"saveScrollPosition\"\n          @keep-task-panel-open=\"onKeepTaskPanelOpenChanged\"\n        />\n      </div>\n    </div>\n\n    <div\n      id=\"side-column\"\n      class=\"column side-column\"\n      v-show=\"isTaskSidePanelOpen\"\n    >\n      <task-info\n        :task=\"selectedTasks.values().next().value\"\n        entity-type=\"Episode\"\n        with-actions\n      />\n    </div>\n\n    <delete-modal\n      ref=\"delete-episode-modal\"\n      :active=\"modals.isDeleteDisplayed\"\n      :is-loading=\"loading.del\"\n      :is-error=\"errors.del\"\n      :text=\"deleteText()\"\n      :error-text=\"$t('episodes.delete_error')\"\n      @cancel=\"modals.isDeleteDisplayed = false\"\n      @confirm=\"confirmDeleteEpisode\"\n    />\n\n    <delete-modal\n      ref=\"delete-metadata-modal\"\n      :active=\"modals.isDeleteMetadataDisplayed\"\n      :is-loading=\"loading.deleteMetadata\"\n      :is-error=\"errors.deleteMetadata\"\n      :text=\"$t('productions.metadata.delete_text')\"\n      :error-text=\"$t('productions.metadata.delete_error')\"\n      @cancel=\"modals.isDeleteMetadataDisplayed = false\"\n      @confirm=\"confirmDeleteMetadata\"\n    />\n\n    <hard-delete-modal\n      ref=\"delete-all-tasks-modal\"\n      :active=\"modals.isDeleteAllTasksDisplayed\"\n      :is-loading=\"loading.deleteAllTasks\"\n      :is-error=\"errors.deleteAllTasks\"\n      :text=\"deleteAllTasksText()\"\n      :error-text=\"$t('tasks.delete_all_error')\"\n      :lock-text=\"deleteAllTasksLockText\"\n      :selection-option=\"true\"\n      @cancel=\"modals.isDeleteAllTasksDisplayed = false\"\n      @confirm=\"confirmDeleteAllTasks\"\n    />\n\n    <create-tasks-modal\n      :active=\"modals.isCreateTasksDisplayed\"\n      :is-loading=\"loading.creatingTasks\"\n      :is-loading-stay=\"loading.creatingTasksStay\"\n      :is-error=\"errors.creatingTasks\"\n      :title=\"$t('tasks.create_tasks_episode')\"\n      :text=\"$t('tasks.create_tasks_episode_explaination')\"\n      :error-text=\"$t('tasks.create_tasks_episode_failed')\"\n      @cancel=\"hideCreateTasksModal\"\n      @confirm=\"confirmCreateTasks\"\n      @confirm-and-stay=\"confirmCreateTasksAndStay\"\n    />\n\n    <add-metadata-modal\n      :active=\"modals.isAddMetadataDisplayed\"\n      :is-loading=\"loading.addMetadata\"\n      :is-error=\"errors.addMetadata\"\n      :descriptor-to-edit=\"descriptorToEdit\"\n      entity-type=\"Episode\"\n      @cancel=\"closeMetadataModal\"\n      @confirm=\"confirmAddMetadata\"\n    />\n\n    <add-thumbnails-modal\n      ref=\"add-thumbnails-modal\"\n      entity-type=\"Episode\"\n      parent=\"episodes\"\n      :active=\"modals.isAddThumbnailsDisplayed\"\n      :is-loading=\"loading.addThumbnails\"\n      :is-error=\"errors.addThumbnails\"\n      @cancel=\"hideAddThumbnailsModal\"\n      @confirm=\"confirmAddThumbnails\"\n      v-if=\"false\"\n    />\n\n    <build-filter-modal\n      ref=\"build-filter-modal\"\n      :active=\"modals.isBuildFilterDisplayed\"\n      entity-type=\"episode\"\n      @cancel=\"modals.isBuildFilterDisplayed = false\"\n      @confirm=\"confirmBuildFilter\"\n    />\n\n    <edit-episode-modal\n      :active=\"modals.isNewDisplayed\"\n      :is-loading=\"loading.edit\"\n      :is-error=\"errors.edit\"\n      :episode-to-edit=\"episodeToEdit\"\n      @cancel=\"modals.isNewDisplayed = false\"\n      @confirm=\"confirmEditEpisode\"\n    />\n\n    <hard-delete-modal\n      :active=\"modals.isDeleteDisplayed\"\n      :is-loading=\"loading.del\"\n      :is-error=\"errors.del\"\n      :text=\"deleteText()\"\n      :error-text=\"$t('episodes.delete_error')\"\n      :lock-text=\"episodeToDelete ? episodeToDelete.name : ''\"\n      @cancel=\"modals.isDeleteDisplayed = false\"\n      @confirm=\"confirmDeleteEpisode\"\n    />\n  </div>\n</template>\n\n<script>\nimport moment from 'moment'\nimport { mapGetters, mapActions } from 'vuex'\n\nimport csv from '@/lib/csv'\nimport { sortByName } from '@/lib/sorting'\nimport stringHelpers from '@/lib/string'\n\nimport { searchMixin } from '@/components/mixins/search'\nimport { entitiesMixin } from '@/components/mixins/entities'\n\nimport AddMetadataModal from '@/components/modals/AddMetadataModal.vue'\nimport AddThumbnailsModal from '@/components/modals/AddThumbnailsModal.vue'\nimport BigThumbnailsButton from '@/components/widgets/BigThumbnailsButton.vue'\nimport BuildFilterModal from '@/components/modals/BuildFilterModal.vue'\nimport ButtonSimple from '@/components/widgets/ButtonSimple.vue'\nimport ComboboxDepartment from '@/components/widgets/ComboboxDepartment.vue'\nimport CreateTasksModal from '@/components/modals/CreateTasksModal.vue'\nimport DeleteModal from '@/components/modals/DeleteModal.vue'\nimport EditEpisodeModal from '@/components/modals/EditEpisodeModal.vue'\nimport EpisodeList from '@/components/lists/EpisodeList.vue'\nimport HardDeleteModal from '@/components/modals/HardDeleteModal.vue'\nimport SearchField from '@/components/widgets/SearchField.vue'\nimport SearchQueryList from '@/components/widgets/SearchQueryList.vue'\nimport SortingInfo from '@/components/widgets/SortingInfo.vue'\nimport ShowAssignationsButton from '@/components/widgets/ShowAssignationsButton.vue'\nimport ShowInfosButton from '@/components/widgets/ShowInfosButton.vue'\nimport TaskInfo from '@/components/sides/TaskInfo.vue'\n\nexport default {\n  name: 'episodes',\n\n  mixins: [searchMixin, entitiesMixin],\n\n  components: {\n    AddMetadataModal,\n    AddThumbnailsModal,\n    BigThumbnailsButton,\n    BuildFilterModal,\n    ButtonSimple,\n    ComboboxDepartment,\n    CreateTasksModal,\n    DeleteModal,\n    EditEpisodeModal,\n    EpisodeList,\n    HardDeleteModal,\n    SearchField,\n    SearchQueryList,\n    SortingInfo,\n    ShowAssignationsButton,\n    ShowInfosButton,\n    TaskInfo\n  },\n\n  data() {\n    return {\n      type: 'episode',\n      deleteAllTasksLockText: null,\n      descriptorToEdit: {},\n      departmentFilter: [],\n      episodeToDelete: null,\n      episodeToEdit: null,\n      formData: null,\n      genericColumns: [\n        'Metadata column name (text value)',\n        'Task type name (task status name value)',\n        'Task type name + comment (text value)'\n      ],\n      historyEdit: {},\n      initialLoading: true,\n      optionalColumns: ['Description'],\n      pageName: 'Episodes',\n      parsedCSV: [],\n      selectedDepartment: 'ALL',\n      taskTypeForTaskDeletion: null,\n      modals: {\n        isAddMetadataDisplayed: false,\n        isAddThumbnailsDisplayed: false,\n        isBuildFilterDisplayed: false,\n        isCreateTasksDisplayed: false,\n        isDeleteDisplayed: false,\n        isDeleteMetadataDisplayed: false,\n        isDeleteAllTasksDisplayed: false,\n        isImportRenderDisplayed: false,\n        isImportDisplayed: false,\n        isNewDisplayed: false\n      },\n      loading: {\n        addMetadata: false,\n        addThumbnails: false,\n        creatingTasks: false,\n        creatingTasksStay: false,\n        del: false,\n        deleteAllTasks: false,\n        deleteMetadata: false,\n        edit: false,\n        episode: false,\n        importing: false,\n        savingSearch: false,\n        stay: false\n      },\n      errors: {\n        addMetadata: false,\n        creatingTasks: false,\n        deleteAllTasks: false,\n        deleteMetadata: false,\n        edit: false,\n        importing: false,\n        importingError: null\n      }\n    }\n  },\n\n  beforeUnmount() {\n    this.clearSelectedEpisodes()\n  },\n\n  created() {\n    this.setLastProductionScreen('episodes')\n  },\n\n  mounted() {\n    let searchQuery = ''\n    if (this.episodeSearchText && this.episodeSearchText.length > 0) {\n      this.searchField.setValue(this.episodeSearchText)\n    }\n    if (this.$route.query.search && this.$route.query.search.length > 0) {\n      searchQuery = `${this.$route.query.search}`\n    }\n    if (searchQuery === 'undefined') searchQuery = ''\n    this.$refs['episode-list'].setScrollPosition(this.episodeListScrollPosition)\n    this.onSearchChange()\n    this.$refs['episode-list'].setScrollPosition(this.episodeListScrollPosition)\n    if (!this.isCurrentUserManager && this.user.departments.length > 0) {\n      this.selectedDepartment = 'MY_DEPARTMENTS'\n      this.departmentFilter = this.user.departments\n    } else {\n      this.departmentFilter = []\n    }\n\n    const finalize = () => {\n      this.initialLoading = false\n      if (this.$refs['episode-list']) {\n        this.$refs['episode-search-field'].setValue(searchQuery)\n        this.onSearchChange()\n        this.$refs['episode-list'].setScrollPosition(\n          this.episodeListScrollPosition\n        )\n        this.$nextTick(() => {\n          this.$refs['episode-list']?.selectTaskFromQuery()\n        })\n      }\n    }\n\n    if (\n      this.episodeMap.size < 1 ||\n      this.episodeValidationColumns.length === 0 ||\n      this.episodeMap.values().next().project_id !== this.currentProduction.id\n    ) {\n      this.loadEpisodesWithTasks()\n        .then(() => {\n          setTimeout(() => {\n            finalize()\n          }, 200)\n        })\n        .catch(console.error)\n    } else {\n      if (!this.isEpisodesLoading) this.initialLoading = false\n      finalize()\n    }\n  },\n\n  computed: {\n    ...mapGetters([\n      'currentEpisode',\n      'currentProduction',\n      'departmentMap',\n      'departments',\n      'displayedEpisodes',\n      'episodeMap',\n      'episodes',\n      'episodeMap',\n      'episodeFilledColumns',\n      'episodeSearchText',\n      'episodeValidationColumns',\n      'episodeListScrollPosition',\n      'episodeSorting',\n      'episodeSearchQueries',\n      'isCurrentUserClient',\n      'isCurrentUserManager',\n      'isEpisodeDescription',\n      'isEpisodeEstimation',\n      'isEpisodeTime',\n      'isEpisodesLoading',\n      'isEpisodesLoadingError',\n      'isShowAssignations',\n      'isTVShow',\n      'openProductions',\n      'productionEpisodeTaskTypes',\n      'selectedTasks',\n      'taskTypeMap',\n      'user'\n    ]),\n\n    renderColumns() {\n      const collection = [...this.dataMatchers, ...this.optionalColumns]\n\n      this.productionEpisodeTaskTypes.forEach(item => {\n        collection.push(item.name)\n        collection.push(`${item.name} comment`)\n      })\n      return collection\n    },\n\n    filteredEpisodes() {\n      const episodes = {}\n      this.displayedEpisodes.forEach(episode => {\n        const episodeKey = episode.name\n        episodes[episodeKey] = true\n      })\n      return episodes\n    },\n\n    metadataDescriptors() {\n      return this.episodeMetadataDescriptors\n    }\n  },\n\n  methods: {\n    ...mapActions([\n      'addMetadataDescriptor',\n      'createTasks',\n      'changeEpisodeSort',\n      'clearSelectedEpisodes',\n      'commentTaskWithPreview',\n      'deleteAllTasks',\n      'deleteEpisode',\n      'deleteMetadataDescriptor',\n      'editEpisode',\n      'getEpisodesCsvLines',\n      'hideAssignations',\n      'loadEpisodesWithTasks',\n      'newEpisode',\n      'removeEpisodeSearch',\n      'saveEpisodeSearch',\n      'setLastProductionScreen',\n      'setPreview',\n      'setEpisodeSearch',\n      'showAssignations',\n      'uploadEpisodeFile'\n    ]),\n\n    confirmAddMetadata(form) {\n      this.loading.addMetadata = true\n      form.entity_type = 'Episode'\n      this.addMetadataDescriptor(form)\n        .then(() => {\n          this.loading.addMetadata = false\n          this.modals.isAddMetadataDisplayed = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.loading.addMetadata = false\n          this.errors.addMetadata = true\n        })\n    },\n\n    showNewModal() {\n      this.episodeToEdit = {}\n      this.modals.isNewDisplayed = true\n    },\n\n    confirmDeleteEpisode() {\n      this.loading.del = true\n      this.errors.del = false\n      this.deleteEpisode(this.episodeToDelete)\n        .then(() => {\n          this.loading.del = false\n          this.modals.isDeleteDisplayed = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.loading.del = false\n          this.errors.del = true\n        })\n    },\n\n    runTasksCreation(form, selectionOnly) {\n      this.errors.creatingTasks = false\n      return this.createTasks({\n        type: 'episodes',\n        task_type_id: form.task_type_id,\n        project_id: this.currentProduction.id,\n        selectionOnly\n      })\n    },\n\n    reset() {\n      this.initialLoading = false\n      this.loadEpisodesWithTasks(err => {\n        if (err) console.error(err)\n        this.initialLoading = false\n      })\n    },\n\n    resetEditModal() {\n      const form = { name: '' }\n      if (this.openProductions.length > 0) {\n        form.production_id = this.openProductions[0].id\n      }\n      this.episodeToEdit = form\n    },\n\n    applySearch(searchQuery) {\n      this.setEpisodeSearch(searchQuery)\n      this.setSearchInUrl()\n    },\n\n    saveSearchQuery(searchQuery) {\n      if (this.loading.savingSearch) {\n        return\n      }\n      this.loading.savingSearch = true\n      this.saveEpisodeSearch(searchQuery)\n        .catch(console.error)\n        .finally(() => {\n          this.loading.savingSearch = false\n        })\n    },\n\n    removeSearchQuery(searchQuery) {\n      this.removeEpisodeSearch(searchQuery).catch(console.error)\n    },\n\n    onExportClick() {\n      this.getEpisodesCsvLines().then(episodeLines => {\n        const nameData = [\n          moment().format('YYYY-MM-DD'),\n          'kitsu',\n          this.currentProduction.name,\n          this.$t('episodes.title')\n        ]\n        const name = stringHelpers.slugify(nameData.join('_'))\n        const headers = [\n          this.$t('episodes.fields.name'),\n          this.$t('episodes.fields.description')\n        ]\n        if (this.currentEpisode) {\n          headers.splice(0, 0, 'Episode')\n        }\n        sortByName([...this.currentProduction.descriptors])\n          .filter(d => d.entity_type === 'Episode')\n          .forEach(descriptor => {\n            headers.push(descriptor.name)\n          })\n        if (this.isEpisodeTime) {\n          headers.push(this.$t('episodes.fields.time_spent'))\n        }\n        if (this.isEpisodeEstimation) {\n          headers.push(this.$t('main.estimation_short'))\n        }\n        this.episodeValidationColumns.forEach(taskTypeId => {\n          headers.push(this.taskTypeMap.get(taskTypeId).name)\n          headers.push('Assignations')\n        })\n        csv.buildCsvFile(name, [headers].concat(episodeLines))\n      })\n    },\n\n    async onFieldChanged({ entry, fieldName, value }) {\n      const data = {\n        id: entry.id,\n        description: entry.description,\n        [fieldName]: value\n      }\n      await this.editEpisode(data)\n      this.onSearchChange(false)\n    },\n\n    async onMetadataChanged({ entry, descriptor, value }) {\n      const data = {\n        id: entry.id,\n        data: {\n          [descriptor.field_name]: value\n        }\n      }\n      await this.editEpisode(data)\n      this.onSearchChange(false)\n    },\n\n    onEditClicked(episode) {\n      this.episodeToEdit = episode\n      this.modals.isNewDisplayed = true\n    },\n\n    onDeleteClicked(episode) {\n      this.episodeToDelete = episode\n      this.modals.isDeleteDisplayed = true\n    },\n\n    confirmEditEpisode(form) {\n      this.loading.edit = true\n      this.errors.edit = false\n\n      if (form.id) {\n        this.editEpisode(form)\n          .then(() => {\n            this.loading.edit = false\n            this.modals.isNewDisplayed = false\n            this.onSearchChange(false)\n          })\n          .catch(err => {\n            console.error(err)\n            this.loading.edit = false\n            this.errors.edit = true\n          })\n      } else {\n        form.project_id = this.currentProduction.id\n        this.newEpisode(form)\n          .then(() => {\n            this.loading.edit = false\n            this.modals.isNewDisplayed = false\n          })\n          .catch(() => {\n            this.loading.edit = false\n            this.errors.edit = true\n          })\n      }\n    },\n\n    deleteText() {\n      const episode = this.episodeToDelete\n      if (episode) {\n        return this.$t('episodes.delete_text', { name: episode.name })\n      }\n      return ''\n    }\n  },\n\n  watch: {\n    $route(nextRoute, previousRoute) {\n      if (!this.$route.query) return\n      const search = this.$route.query.search\n      const actualSearch = this.$refs['episode-search-field'].getValue()\n      if (search !== actualSearch && !previousRoute.query.task_id) {\n        this.searchField.setValue(search)\n        this.applySearch(search)\n      }\n    },\n\n    currentProduction() {\n      this.$refs['episode-search-field'].setValue('')\n      this.$store.commit('SET_EDIT_LIST_SCROLL_POSITION', 0)\n      this.initialLoading = false\n      this.reset()\n    },\n\n    isEpisodesLoading() {\n      if (!this.isEpisodesLoading) {\n        let searchQuery = ''\n        if (this.$route.query.search && this.$route.query.search.length > 0) {\n          searchQuery = `${this.$route.query.search}`\n        }\n        this.initialLoading = false\n        this.$refs['episode-search-field'].setValue(searchQuery)\n        this.$nextTick(() => {\n          this.applySearch(searchQuery)\n        })\n        if (this.$refs['episode-list']) {\n          this.$refs['episode-list'].setScrollPosition(\n            this.episodeListScrollPosition\n          )\n        }\n      }\n    }\n  },\n\n  head() {\n    return {\n      title: `${this.currentProduction.name} ${this.$t(\n        'episodes.title'\n      )} - Kitsu`\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.data-list {\n  margin-top: 0;\n}\n\n.page-header {\n  margin-bottom: 1em;\n}\n\n.flexcolumn {\n  align-items: flex-start;\n}\n\n.episodes {\n  display: flex;\n  flex-direction: column;\n}\n\n.columns {\n  display: flex;\n  flex-direction: row;\n  padding: 0;\n}\n\n.column {\n  overflow-y: auto;\n  padding: 0;\n}\n</style>\n"],"names":["_sfc_main","descriptorMixin","domMixin","formatListMixin","entityListMixin","selectionListMixin","ButtonSimple","DescriptionCell","EntityThumbnail","MetadataHeader","MetadataInput","RowActionsCell","TableHeaderMenu","TableMetadataHeaderMenu","TableMetadataSelectorMenu","TableInfo","ValidationCell","ValidationHeader","mapGetters","count","columnId","mapActions","lineIndex","columnIndex","episodeId","section","route","episode","status","_hoisted_1","_hoisted_2","_hoisted_5","_hoisted_6","_hoisted_8","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_21","_hoisted_25","_openBlock","_createElementBlock","_createElementVNode","_cache","args","_ctx","_createVNode","_component_table_header_menu","$data","_component_table_metadata_header_menu","$event","_withDirectives","_hoisted_3","_hoisted_4","_toDisplayString","$props","_createBlock","_component_button_simple","_createCommentVNode","_Fragment","_renderList","descriptor","j","_component_metadata_header","event","columnIndexInGrid","_component_validation_header","_hoisted_7","_hoisted_9","_hoisted_10","_normalizeClass","_component_table_metadata_selector_menu","$options","i","_component_entity_thumbnail","_component_router_link","_withCtx","_createTextVNode","_normalizeStyle","_component_metadata_input","_component_validation_cell","infos","_component_description_cell","value","_hoisted_15","_hoisted_16","option","_hoisted_20","_withModifiers","_hoisted_22","_component_row_actions_cell","_hoisted_23","_component_table_info","_hoisted_24","_imports_0","_hoisted_26","_hoisted_27","searchMixin","entitiesMixin","AddMetadataModal","AddThumbnailsModal","BigThumbnailsButton","BuildFilterModal","ComboboxDepartment","CreateTasksModal","DeleteModal","EditEpisodeModal","EpisodeList","HardDeleteModal","SearchField","SearchQueryList","SortingInfo","ShowAssignationsButton","ShowInfosButton","TaskInfo","searchQuery","finalize","_a","collection","item","episodes","episodeKey","form","err","selectionOnly","episodeLines","nameData","moment","name","stringHelpers","headers","sortByName","d","taskTypeId","csv","entry","fieldName","data","nextRoute","previousRoute","search","actualSearch","_component_search_field","_component_combobox_department","_component_show_assignations_button","_component_show_infos_button","_component_big_thumbnails_button","_component_search_query_list","_component_sorting_info","_component_episode_list","_component_task_info","_component_delete_modal","_component_hard_delete_modal","_component_create_tasks_modal","_component_add_metadata_modal","_component_build_filter_modal","_component_edit_episode_modal"],"mappings":"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"}