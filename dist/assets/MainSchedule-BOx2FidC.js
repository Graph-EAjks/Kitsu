import{_ as f,M as b,ah as v,W as g,z as u,m as S,b as y,bw as x,bx as z,by as h,bz as m,bA as I,bB as k,r,o as P,c as V,e as o,t as p,f as n}from"./index-Cbcx6uAs.js";const M={name:"main-schedule",components:{ComboboxNumber:b,DateField:v,Schedule:g},data(){return{endDate:u().add(6,"months"),scheduleItems:[],startDate:u(),selectedStartDate:null,selectedEndDate:null,zoomLevel:0,zoomOptions:[{label:"Week",value:0},{label:"1",value:1},{label:"2",value:2},{label:"3",value:3}],loading:{schedule:!1},errors:{schedule:!1}}},mounted(){let e=parseInt(this.$route.query.zoom);e=isNaN(e)?1:e,this.zoomLevel=Math.min(Math.max(e,0),3),this.init()},computed:{...S(["openProductions","taskTypeMap","user"])},methods:{...y(["editProduction","loadScheduleItems","saveScheduleItem"]),init(){this.openProductions.length&&(this.scheduleItems=this.convertScheduleItems(this.openProductions),this.startDate=x(this.scheduleItems),this.endDate=z(this.scheduleItems),this.selectedStartDate=this.startDate.toDate(),this.selectedEndDate=this.endDate.toDate())},convertScheduleItems(e){return e.map(t=>{const a=h(t.start_date),d=m(a,t.end_date);return{...t,avatar:t.type==="Project",color:t.color||I.fromString(t.name,!0),startDate:a,endDate:d,expanded:!1,loading:!1,editable:!0,route:k(t.id),children:[]}})},convertTaskTypeScheduleItems(e){return e.map(t=>{const a=h(t.start_date),d=m(a,t.end_date),s=this.taskTypeMap.get(t.task_type_id);return{...t,name:s.name,color:s.color,startDate:a,endDate:d,expanded:!1,loading:!1,editable:!0,children:[]}})},expandProductionElement(e){e.expanded?e.expanded=!1:(e.loading=!0,e.expanded=!0,this.loadScheduleItems(e).then(t=>{t=this.convertTaskTypeScheduleItems(t),e.children=t,e.loading=!1}))},onScheduleItemChanged(e){e.type!=="Project"?this.saveScheduleItem(e):this.editProduction({id:e.id,start_date:e.startDate.format("YYYY-MM-DD"),end_date:e.endDate.format("YYYY-MM-DD")})},updateRoute({zoom:e}){const t={...this.$route.query};e!==void 0&&(t.zoom=String(e)),JSON.stringify(t)!==JSON.stringify(this.$route.query)&&this.$router.push({query:t})}},watch:{zoomLevel(e){this.updateRoute({zoom:e})}},head(){return{title:`${this.$t("schedule.title_main")} - Kitsu`}}},w={class:"columns fixed-page"},Y={class:"column main-column"},E={class:"flexrow project-dates"},L={class:"flexrow-item"},N={class:"label"},T={class:"flexrow-item field"},C={class:"label"};function q(e,t,a,d,s,i){const c=r("date-field"),D=r("combobox-number"),_=r("schedule");return P(),V("div",w,[o("div",Y,[o("div",E,[o("div",L,[o("label",N,p(e.$t("main.start_date")),1),n(c,{"week-days-disabled":"",modelValue:s.selectedStartDate,"onUpdate:modelValue":t[0]||(t[0]=l=>s.selectedStartDate=l)},null,8,["modelValue"])]),o("div",T,[o("label",C,p(e.$t("main.end_date")),1),n(c,{"week-days-disabled":"",modelValue:s.selectedEndDate,"onUpdate:modelValue":t[1]||(t[1]=l=>s.selectedEndDate=l)},null,8,["modelValue"])]),n(D,{class:"flexrow-item zoom-level",label:e.$t("schedule.zoom_level"),options:s.zoomOptions,modelValue:s.zoomLevel,"onUpdate:modelValue":t[2]||(t[2]=l=>s.zoomLevel=l)},null,8,["label","options","modelValue"])]),n(_,{"end-date":s.endDate,hierarchy:s.scheduleItems,"is-loading":s.loading.schedule,"is-error":s.errors.schedule,"start-date":s.startDate,"zoom-level":s.zoomLevel,"hide-man-days":!0,"with-milestones":!1,onItemChanged:i.onScheduleItemChanged,onRootElementExpanded:i.expandProductionElement},null,8,["end-date","hierarchy","is-loading","is-error","start-date","zoom-level","onItemChanged","onRootElementExpanded"])])])}const F=f(M,[["render",q],["__scopeId","data-v-ee71cdea"]]);export{F as default};
//# sourceMappingURL=MainSchedule-BOx2FidC.js.map
