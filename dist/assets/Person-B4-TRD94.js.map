{"version":3,"file":"Person-B4-TRD94.js","sources":["../../src/components/pages/Person.vue"],"sourcesContent":["<template>\n  <div ref=\"page\" class=\"columns fixed-page\">\n    <div class=\"column main-column\">\n      <div class=\"person page\" v-if=\"person\">\n        <div ref=\"header\" class=\"flexrow page-header\">\n          <div class=\"flexrow-item\">\n            <people-avatar\n              :person=\"person\"\n              :size=\"80\"\n              :font-size=\"30\"\n              :is-text=\"false\"\n            />\n          </div>\n          <div class=\"flexrow-item entity-title\">\n            {{ person.name }}\n          </div>\n        </div>\n\n        <template v-if=\"!person.is_bot && isCurrentUserAllowed\">\n          <route-section-tabs\n            class=\"section-tabs mt1\"\n            :active-tab=\"activeTab\"\n            :route=\"$route\"\n            :tabs=\"todoTabs\"\n          />\n\n          <div ref=\"search\" class=\"flexrow\" v-if=\"!isActiveTab('calendar')\">\n            <search-field\n              ref=\"person-tasks-search-field\"\n              class=\"search-field flexrow-item\"\n              can-save\n              @change=\"onSearchChange\"\n              @save=\"saveSearchQuery\"\n            />\n            <combobox-production\n              v-if=\"isActiveTab('board')\"\n              class=\"flexrow-item production-field\"\n              :label=\"$t('main.production')\"\n              :production-list=\"productionList\"\n              v-model=\"productionId\"\n            />\n            <span class=\"filler\"></span>\n            <combobox-number\n              class=\"flexrow-item zoom-level mb0\"\n              :label=\"$t('schedule.zoom_level')\"\n              :options=\"zoomOptions\"\n              v-model=\"zoomLevel\"\n              v-if=\"isActiveTab('schedule')\"\n            />\n            <combobox\n              class=\"flexrow-item\"\n              :label=\"$t('main.sorted_by')\"\n              :options=\"sortOptions\"\n              locale-key-prefix=\"tasks.fields.\"\n              v-model=\"currentSort\"\n            />\n          </div>\n\n          <div ref=\"query\" class=\"query-list\" v-if=\"!isActiveTab('calendar')\">\n            <search-query-list\n              :queries=\"personTaskSearchQueries\"\n              type=\"person\"\n              @change-search=\"changeSearch\"\n              @remove-search=\"removeSearchQuery\"\n            />\n          </div>\n\n          <todos-list\n            ref=\"task-list\"\n            :empty-text=\"$t('people.no_task_assigned')\"\n            :is-loading=\"isTasksLoading\"\n            :is-error=\"isTasksLoadingError\"\n            :selection-grid=\"personTaskSelectionGrid\"\n            :tasks=\"sortedTasks\"\n            @scroll=\"setPersonTasksScrollPosition\"\n            v-if=\"isActiveTab('todos')\"\n          />\n\n          <todos-list\n            ref=\"done-list\"\n            :tasks=\"displayedPersonDoneTasks\"\n            :is-loading=\"isTasksLoading\"\n            :is-error=\"isTasksLoadingError\"\n            :done=\"true\"\n            :selection-grid=\"personTaskSelectionGrid\"\n            v-else-if=\"isActiveTab('done')\"\n          />\n\n          <kanban-board\n            :is-loading=\"isTasksLoading\"\n            :is-error=\"isTasksLoadingError\"\n            :statuses=\"boardStatuses\"\n            :tasks=\"boardTasks\"\n            :user=\"user\"\n            :production=\"selectedProduction\"\n            v-else-if=\"isActiveTab('board')\"\n          />\n\n          <user-calendar\n            ref=\"user-calendar\"\n            class=\"calendar\"\n            :days-off=\"daysOff\"\n            :tasks=\"sortedTasks\"\n            v-if=\"isActiveTab('calendar')\"\n          />\n\n          <timesheet-list\n            ref=\"timesheet-list\"\n            :tasks=\"loggablePersonTasks\"\n            :done-tasks=\"loggableDoneTasks\"\n            :is-loading=\"isTasksLoading\"\n            :is-error=\"isTasksLoadingError\"\n            :day-off-error=\"dayOffError\"\n            :time-spent-map=\"personTimeSpentMap\"\n            :time-spent-total=\"personTimeSpentTotal\"\n            :hide-done=\"personTasksSearchText.length === 0\"\n            :hide-day-off=\"!(isCurrentUserAdmin || user.id === person.id)\"\n            @date-changed=\"onDateChanged\"\n            @time-spent-change=\"onTimeSpentChange\"\n            @set-day-off=\"onSetDayOff\"\n            @unset-day-off=\"onUnsetDayOff\"\n            v-else-if=\"isActiveTab('timesheets') && isCurrentUserManager\"\n          />\n\n          <div v-else-if=\"isActiveTab('schedule')\">\n            <schedule\n              ref=\"schedule-widget\"\n              :days-off=\"daysOff\"\n              :start-date=\"tasksStartDate.clone().add(-3, 'months')\"\n              :end-date=\"tasksEndDate.clone().add(3, 'months')\"\n              :hierarchy=\"scheduleItems\"\n              :zoom-level=\"zoomLevel\"\n              :height=\"scheduleHeight\"\n              :is-loading=\"isTasksLoading\"\n              :is-estimation-linked=\"true\"\n              :with-milestones=\"false\"\n              @item-changed=\"saveTaskScheduleItem\"\n              @estimation-changed=\"event => saveTaskScheduleItem(event.item)\"\n              v-if=\"scheduleItems.length > 0\"\n            />\n            <div class=\"has-text-centered\" v-else>\n              {{ $t('main.empty_schedule') }}\n            </div>\n          </div>\n        </template>\n      </div>\n    </div>\n    <div class=\"column side-column\" v-if=\"nbSelectedTasks === 1\">\n      <task-info :task=\"selectedTasks.values().next().value\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport moment from 'moment-timezone'\nimport firstBy from 'thenby'\nimport { mapGetters, mapActions } from 'vuex'\n\nimport colors from '@/lib/colors'\nimport { sortTaskStatuses } from '@/lib/sorting'\nimport {\n  daysToMinutes,\n  getBusinessDays,\n  getFirstStartDate,\n  getLastEndDate,\n  parseDate\n} from '@/lib/time'\n\nimport { formatListMixin } from '@/components/mixins/format'\n\nimport Combobox from '@/components/widgets/Combobox.vue'\nimport ComboboxNumber from '@/components/widgets/ComboboxNumber.vue'\nimport ComboboxProduction from '@/components/widgets/ComboboxProduction.vue'\nimport KanbanBoard from '@/components/lists/KanbanBoard.vue'\nimport PeopleAvatar from '@/components/widgets/PeopleAvatar.vue'\nimport RouteSectionTabs from '@/components/widgets/RouteSectionTabs.vue'\nimport Schedule from '@/components/widgets/Schedule.vue'\nimport SearchField from '@/components/widgets/SearchField.vue'\nimport SearchQueryList from '@/components/widgets/SearchQueryList.vue'\nimport TimesheetList from '@/components/lists/TimesheetList.vue'\nimport TodosList from '@/components/lists/TodosList.vue'\nimport TaskInfo from '@/components/sides/TaskInfo.vue'\nimport UserCalendar from '@/components/widgets/UserCalendar.vue'\n\nexport default {\n  name: 'person',\n\n  mixins: [formatListMixin],\n\n  components: {\n    Combobox,\n    ComboboxNumber,\n    ComboboxProduction,\n    KanbanBoard,\n    PeopleAvatar,\n    RouteSectionTabs,\n    Schedule,\n    SearchField,\n    SearchQueryList,\n    TaskInfo,\n    TodosList,\n    TimesheetList,\n    UserCalendar\n  },\n\n  data() {\n    return {\n      activeTab: 'todos',\n      currentSort: 'entity_name',\n      daysOff: [],\n      dayOffError: false,\n      isTasksLoading: false,\n      isTasksLoadingError: false,\n      loading: {\n        savingSearch: false\n      },\n      person: null,\n      productionId: undefined,\n      scheduleHeight: 0,\n      selectedDate: moment().format('YYYY-MM-DD'),\n      sortOptions: [\n        'entity_name',\n        'priority',\n        'task_status_short_name',\n        'start_date',\n        'due_date',\n        'estimation',\n        'last_comment_date'\n      ].map(name => ({ label: name, value: name })),\n      zoomLevel: 1,\n      zoomOptions: [\n        { label: 'Week', value: 0 },\n        { label: '1', value: 1 },\n        { label: '2', value: 2 },\n        { label: '3', value: 3 }\n      ]\n    }\n  },\n\n  mounted() {\n    this.updateActiveTab()\n    if (this.personTasksSearchText.length > 0) {\n      this.searchField?.setValue(this.personTasksSearchText)\n    }\n    setTimeout(() => {\n      this.searchField?.focus()\n      this.$refs['schedule-widget']?.scrollToDate(this.tasksStartDate)\n    }, 300)\n    this.loadPerson(this.$route.params.person_id)\n    window.addEventListener('resize', this.resetScheduleHeight)\n  },\n\n  afterDestroy() {\n    window.removeEventListener('resize', this.resetScheduleHeight)\n    this.$store.commit('LOAD_PERSON_TASKS_END', {\n      tasks: [],\n      userFilters: {},\n      taskTypeMap: this.taskTypeMap\n    })\n  },\n\n  computed: {\n    ...mapGetters([\n      'displayedPersonTasks',\n      'displayedPersonDoneTasks',\n      'getProductionTaskStatuses',\n      'isCurrentUserAdmin',\n      'isCurrentUserManager',\n      'isCurrentUserSupervisor',\n      'nbSelectedTasks',\n      'personMap',\n      'personTasksScrollPosition',\n      'personTasksSearchText',\n      'personTaskSearchQueries',\n      'personTaskSelectionGrid',\n      'personTimeSpentMap',\n      'personTimeSpentTotal',\n      'openProductions',\n      'productionMap',\n      'selectedTasks',\n      'taskStatuses',\n      'taskTypeMap',\n      'user'\n    ]),\n\n    isCurrentUserAllowed() {\n      if (this.isCurrentUserManager || this.user.id === this.person.id) {\n        return true\n      }\n      if (this.isCurrentUserSupervisor) {\n        const isSupervisorInDepartments = this.user.departments.some(\n          department => this.person.departments.includes(department)\n        )\n        return isSupervisorInDepartments\n      }\n      return false\n    },\n\n    loggablePersonTasks() {\n      return this.displayedPersonTasks.filter(task => {\n        return this.taskTypeMap.get(task.task_type_id).allow_timelog\n      })\n    },\n\n    loggableDoneTasks() {\n      return this.displayedPersonDoneTasks.filter(task => {\n        return this.taskTypeMap.get(task.task_type_id).allow_timelog\n      })\n    },\n\n    searchField() {\n      return this.$refs['person-tasks-search-field']\n    },\n\n    taskList() {\n      return this.$refs['task-list']\n    },\n\n    haveDoneList() {\n      return this.$refs['done-list']\n    },\n\n    sortedTasks() {\n      const isName = this.currentSort === 'entity_name'\n      const isPriority = this.currentSort === 'priority'\n      const isDueDate = this.currentSort === 'due_date'\n      const isStartDate = this.currentSort === 'start_date'\n      const tasks = [...this.displayedPersonTasks]\n      if (isName) {\n        return tasks.sort(\n          firstBy('project_name')\n            .thenBy('task_type_name')\n            .thenBy('full_entity_name')\n        )\n      } else if (isPriority) {\n        return tasks.sort(\n          firstBy('priority', -1)\n            .thenBy((a, b) => {\n              if (!a.due_date) return 1\n              else if (!b.due_date) return -1\n              else return a.due_date.localeCompare(b.due_date)\n            })\n            .thenBy('project_name')\n            .thenBy('task_type_name')\n            .thenBy('entity_name')\n        )\n      } else if (isDueDate) {\n        return tasks.sort(\n          firstBy((a, b) => {\n            if (!a.due_date) return 1\n            else if (!b.due_date) return -1\n            else return a.due_date.localeCompare(b.due_date)\n          })\n            .thenBy('project_name')\n            .thenBy('task_type_name')\n            .thenBy('entity_name')\n        )\n      } else if (isStartDate) {\n        return tasks.sort(\n          firstBy((a, b) => {\n            if (!a.start_date) return 1\n            else if (!b.start_date) return -1\n            else return a.start_date.localeCompare(b.start_date)\n          })\n            .thenBy('project_name')\n            .thenBy('task_type_name')\n            .thenBy('entity_name')\n        )\n      } else {\n        return tasks.sort(\n          firstBy(this.currentSort, -1)\n            .thenBy('project_name')\n            .thenBy('task_type_name')\n            .thenBy('entity_name')\n        )\n      }\n    },\n\n    tasksStartDate() {\n      if (this.scheduleTasks.length) {\n        return getFirstStartDate(this.scheduleTasks)\n      } else {\n        return moment()\n      }\n    },\n\n    tasksEndDate() {\n      if (this.scheduleTasks.length) {\n        return getLastEndDate(this.scheduleTasks)\n      } else {\n        return moment().add(15, 'days')\n      }\n    },\n\n    scheduleTasks() {\n      return this.scheduleItems.flatMap(item => item.children)\n    },\n\n    scheduleItems() {\n      const rootMap = new Map()\n      this.sortedTasks.forEach(task => {\n        if (!rootMap.get(task.project_id)) {\n          const project = this.productionMap.get(task.project_id)\n          const rootElement = this.buildProjectScheduleItem(project)\n          rootMap.set(task.project_id, rootElement)\n        }\n        const rootElement = rootMap.get(task.project_id)\n        const taskItem = this.buildTaskScheduleItem(rootElement, task)\n        if (taskItem) rootElement.children.push(taskItem)\n      })\n\n      const rootElements = Array.from(rootMap.values())\n      rootElements.forEach(rootElement => {\n        let rootStartDate = moment()\n        let rootEndDate = moment().add(1, 'days')\n        let manDays = 0\n        if (rootElement.children.length > 0) {\n          rootStartDate = getFirstStartDate(rootElement.children)\n          rootEndDate = getLastEndDate(rootElement.children)\n        }\n        rootElement.children.forEach(task => {\n          const estimation = this.formatDuration(task.estimation)\n          if (estimation) manDays += task.estimation\n        })\n        Object.assign(rootElement, {\n          startDate: rootStartDate,\n          endDate: rootEndDate,\n          man_days: manDays,\n          daysOff: this.daysOff\n        })\n      })\n      return rootElements\n    },\n\n    boardTasks() {\n      const tasks = this.sortedTasks.concat(this.displayedPersonDoneTasks)\n      if (this.selectedProduction) {\n        return tasks.filter(\n          task => task.project_id === this.selectedProduction.id\n        )\n      }\n      return tasks\n    },\n\n    boardStatuses() {\n      if (this.selectedProduction) {\n        return this.getBoardStatusesByProduction(this.selectedProduction)\n      }\n\n      const productionsByStatus = {}\n      this.userOpenProductions.forEach(production => {\n        const statuses = this.getBoardStatusesByProduction(production)\n        statuses.forEach(status => {\n          if (!productionsByStatus[status.id]) {\n            productionsByStatus[status.id] = []\n          }\n          productionsByStatus[status.id].push(production.id)\n        })\n      })\n\n      return this.taskStatuses\n        .filter(status => !status.for_concept)\n        .map(status => ({\n          ...status,\n          productions: productionsByStatus[status.id] || []\n        }))\n        .filter(status => status.productions.length > 0)\n        .sort((a, b) => a.priority - b.priority)\n    },\n\n    productionList() {\n      return [{ name: this.$t('main.all') }, ...this.userOpenProductions]\n    },\n\n    selectedProduction() {\n      return this.productionMap.get(this.productionId)\n    },\n\n    userOpenProductions() {\n      if (!this.person) {\n        return []\n      }\n      return this.openProductions.filter(production =>\n        production.team.includes(this.person.id)\n      )\n    },\n\n    todoTabs() {\n      const hasAvailableBoard = this.openProductions.some(\n        production => this.getBoardStatusesByProduction(production).length\n      )\n      return [\n        {\n          label: this.$t('main.tasks'),\n          name: 'todos'\n        },\n        hasAvailableBoard\n          ? {\n              label: this.$t('board.title'),\n              name: 'board'\n            }\n          : undefined,\n        {\n          label: this.$t('tasks.calendar'),\n          name: 'calendar'\n        },\n        {\n          label: this.$t('schedule.title'),\n          name: 'schedule'\n        },\n        {\n          label: `${this.$t('tasks.validated')} (${\n            this.displayedPersonDoneTasks.length\n          })`,\n          name: 'done'\n        },\n        {\n          label: this.$t('timesheets.title'),\n          name: 'timesheets'\n        }\n      ].filter(Boolean)\n    }\n  },\n\n  methods: {\n    ...mapActions([\n      'clearSelectedTasks',\n      'loadAggregatedPersonDaysOff',\n      'loadPersonTasks',\n      'setPersonTasksSearch',\n      'savePersonTasksSearch',\n      'removePersonTasksSearch',\n      'setDayOff',\n      'setPersonTasksScrollPosition',\n      'setTimeSpent',\n      'unsetDayOff',\n      'updateTask'\n    ]),\n\n    onAssignation(eventData) {\n      if (this.person.id === eventData.person_id) {\n        this.loadPerson(this.person.id)\n      }\n    },\n\n    resetScheduleHeight() {\n      this.$nextTick(() => {\n        if (this.isActiveTab('schedule')) {\n          const pageHeight = this.$refs.page?.offsetHeight || 0\n          const headerHeight = this.$refs.header?.offsetHeight || 0\n          const tabsHeight = this.$refs.tabs?.offsetHeight || 0\n          const searchHeight = this.$refs.search?.offsetHeight || 0\n          const queryHeight = this.$refs.query?.offsetHeight || 0\n          this.scheduleHeight =\n            pageHeight - headerHeight - tabsHeight - searchHeight - queryHeight\n          this.$refs['schedule-widget']?.resetScheduleSize()\n        }\n      })\n    },\n\n    buildProjectScheduleItem(project) {\n      return {\n        ...project,\n        avatar: true,\n        color: colors.fromString(project.name, true),\n        priority: 1,\n        expanded: true,\n        loading: false,\n        children: [],\n        editable: false\n      }\n    },\n\n    buildTaskScheduleItem(parentElement, task) {\n      let startDate = moment()\n      let endDate\n\n      if (\n        !task.start_date &&\n        !task.real_start_date &&\n        !task.due_date &&\n        !task.end_date\n      ) {\n        return null\n      }\n\n      if (task.start_date) {\n        startDate = parseDate(task.start_date)\n      } else if (task.real_start_date) {\n        startDate = parseDate(task.real_start_date)\n      }\n\n      const estimation = task.estimation\n      if (task.due_date) {\n        endDate = parseDate(task.due_date)\n      } else if (task.end_date) {\n        endDate = parseDate(task.end_date)\n      } else if (task.estimation) {\n        endDate = startDate.clone().add(estimation, 'days')\n      }\n      if (!endDate || endDate.isBefore(startDate)) {\n        endDate = startDate.clone().add(1, 'days')\n      }\n\n      const taskType = this.taskTypeMap.get(task.task_type_id)\n      return {\n        ...task,\n        name: `${task.full_entity_name} / ${taskType.name}`,\n        startDate,\n        endDate,\n        expanded: false,\n        loading: false,\n        man_days: estimation,\n        editable: false,\n        unresizable: false,\n        parentElement,\n        color: taskType.color,\n        children: []\n      }\n    },\n\n    isActiveTab(tab) {\n      return this.activeTab === tab\n    },\n\n    onSearchChange(text) {\n      this.setPersonTasksSearch(text)\n    },\n\n    async loadPerson(personId) {\n      this.person = this.personMap.get(personId)\n\n      if (!this.person) {\n        this.$router.push({ name: 'not-found' })\n        return\n      }\n\n      if (this.person.is_bot || !this.isCurrentUserAllowed) {\n        return\n      }\n\n      this.isTasksLoading = true\n      this.isTasksLoadingError = false\n\n      this.loadPersonTasks({\n        personId: this.person.id,\n        date: this.selectedDate\n      })\n        .then(() => {\n          setTimeout(() => {\n            this.$nextTick(() => {\n              this.taskList?.setScrollPosition(this.personTasksScrollPosition)\n            })\n            this.resizeHeaders()\n          }, 0)\n        })\n        .catch(err => {\n          console.error(err)\n          this.isTasksLoadingError = true\n        })\n        .finally(() => {\n          this.isTasksLoading = false\n        })\n\n      try {\n        this.daysOff = await this.loadAggregatedPersonDaysOff({ personId })\n      } catch (error) {\n        console.error(error)\n      }\n    },\n\n    resizeHeaders() {\n      this.$nextTick(() => {\n        this.taskList?.resizeHeaders()\n        this.haveDoneList?.resizeHeaders()\n      })\n    },\n\n    changeSearch(searchQuery) {\n      this.searchField?.setValue(searchQuery.search_query)\n      this.onSearchChange(searchQuery.search_query)\n    },\n\n    saveSearchQuery(searchQuery) {\n      if (this.loading.savingSearch) {\n        return\n      }\n      this.loading.savingSearch = true\n      this.savePersonTasksSearch(searchQuery)\n        .catch(console.error)\n        .finally(() => {\n          this.loading.savingSearch = false\n        })\n    },\n\n    removeSearchQuery(searchQuery) {\n      this.removePersonTasksSearch(searchQuery).catch(err => {\n        if (err) console.error(err)\n      })\n    },\n\n    updateActiveTab() {\n      const availableSections = [\n        'board',\n        'calendar',\n        'done',\n        'schedule',\n        'timesheets'\n      ]\n      const currentSection = this.$route.query.section\n      this.activeTab = availableSections.includes(currentSection)\n        ? currentSection\n        : 'todos'\n\n      if (this.activeTab === 'board') {\n        const currentProduction = this.userOpenProductions.find(\n          ({ id }) => id === this.$route.query.productionId\n        )\n        if (currentProduction) {\n          this.productionId = currentProduction.id\n        } else {\n          this.$router.push({\n            query: {\n              productionId: this.productionId,\n              section: this.activeTab\n            }\n          })\n        }\n      }\n\n      this.clearSelectedTasks()\n    },\n\n    onTimeSpentChange(timeSpentInfo) {\n      timeSpentInfo.personId = this.person.id\n      timeSpentInfo.date = this.selectedDate\n      this.setTimeSpent(timeSpentInfo)\n    },\n\n    onDateChanged(date) {\n      this.selectedDate = moment(date).format('YYYY-MM-DD')\n      this.loadPerson(this.person.id)\n    },\n\n    async onSetDayOff(dayOff) {\n      this.dayOffError = false\n      try {\n        await this.setDayOff({\n          ...dayOff,\n          personId: this.person.id\n        })\n        this.$refs['timesheet-list']?.closeSetDayOffModal()\n      } catch (error) {\n        this.dayOffError = error.body?.message || true\n      }\n    },\n\n    async onUnsetDayOff() {\n      this.dayOffError = false\n      try {\n        await this.unsetDayOff()\n        this.$refs['timesheet-list']?.closeUnsetDayOffModal()\n      } catch (error) {\n        this.dayOffError = error.body?.message || true\n      }\n    },\n\n    saveTaskScheduleItem(item) {\n      const daysLength = getBusinessDays(item.startDate, item.endDate)\n      const estimation = daysToMinutes(this.organisation, daysLength)\n      item.man_days = estimation\n      if (item.startDate && item.endDate) {\n        this.updateTask({\n          taskId: item.id,\n          data: {\n            estimation,\n            start_date: item.startDate.format('YYYY-MM-DD'),\n            due_date: item.endDate.format('YYYY-MM-DD')\n          }\n        })\n      }\n    },\n\n    getBoardStatusesByProduction(production) {\n      const statuses = this.getProductionTaskStatuses(production.id).filter(\n        status => {\n          if (status.for_concept) {\n            return false\n          }\n          const roles_for_board =\n            production.task_statuses_link?.[status.id]?.roles_for_board\n          return roles_for_board?.includes(this.user.role)\n        }\n      )\n      return sortTaskStatuses(statuses, production)\n    }\n  },\n\n  head() {\n    return {\n      title: `${this.person?.name || '...'} - Kitsu`\n    }\n  },\n\n  watch: {\n    $route() {\n      const personId = this.$route.params.person_id\n\n      this.updateActiveTab()\n      if (this.person && this.person.id !== personId) {\n        this.loadPerson(personId)\n      }\n    },\n\n    activeTab() {\n      this.resetScheduleHeight()\n      this.$nextTick(() => {\n        this.$refs['schedule-widget']?.scrollToDate(this.tasksStartDate)\n      })\n    },\n\n    '$route.query.section'() {\n      this.updateActiveTab()\n    },\n\n    productionId() {\n      this.$router.push({\n        query: {\n          productionId: this.productionId,\n          tab: this.activeTab\n        }\n      })\n    },\n\n    zoomLevel() {\n      this.$refs['schedule-widget']?.scrollToDate(this.tasksStartDate)\n    }\n  },\n\n  socket: {\n    events: {\n      'task:assign'(eventData) {\n        this.onAssignation(eventData)\n      },\n\n      'task:unassign'(eventData) {\n        this.onAssignation(eventData)\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.name {\n  width: 230px;\n  min-width: 230px;\n}\n\n.page {\n  overflow: hidden;\n}\n\n.email {\n  width: 210px;\n  min-width: 210px;\n}\n.phone {\n  width: 140px;\n  min-width: 140px;\n}\n.skills {\n  width: 250px;\n}\n\n.search-field {\n  margin: 25px 2em 5px 0;\n}\n\n.query-list {\n  margin-top: 0.5em;\n}\n\n.task-tabs {\n  margin-top: 2em;\n}\n\n.task-tabs ul {\n  margin: 0;\n}\n\n.data-list {\n  margin-top: 0;\n}\n\n.person {\n  display: flex;\n  flex-direction: column;\n}\n\n.columns {\n  display: flex;\n  flex-direction: row;\n  padding: 0;\n}\n\n.column {\n  overflow-y: auto;\n  padding: 0;\n}\n\n.zoom-level {\n  margin-top: -0.5em;\n}\n\n.field {\n  margin-bottom: 0;\n}\n\n.tabs {\n  min-height: 30px;\n}\n\n.page-header {\n  margin-top: 0.5em;\n}\n\n.calendar {\n  flex: 1;\n  overflow: auto;\n}\n</style>\n"],"names":["_sfc_main","formatListMixin","Combobox","ComboboxNumber","ComboboxProduction","KanbanBoard","PeopleAvatar","RouteSectionTabs","Schedule","SearchField","SearchQueryList","TaskInfo","TodosList","TimesheetList","UserCalendar","moment","name","_a","_b","mapGetters","department","task","isName","isPriority","isDueDate","isStartDate","tasks","firstBy","a","b","getFirstStartDate","getLastEndDate","item","rootMap","project","rootElement","taskItem","rootElements","rootStartDate","rootEndDate","manDays","productionsByStatus","production","status","hasAvailableBoard","mapActions","eventData","pageHeight","headerHeight","tabsHeight","_c","searchHeight","_d","queryHeight","_e","_f","colors","parentElement","startDate","endDate","parseDate","estimation","taskType","tab","text","personId","err","error","searchQuery","availableSections","currentSection","currentProduction","id","timeSpentInfo","date","dayOff","daysLength","getBusinessDays","daysToMinutes","statuses","roles_for_board","sortTaskStatuses","_hoisted_2","_hoisted_5","_hoisted_6","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","$data","_hoisted_3","_hoisted_4","_createVNode","_component_people_avatar","_toDisplayString","$options","_Fragment","_component_route_section_tabs","_ctx","_createCommentVNode","_hoisted_7","_component_search_field","_createBlock","_component_combobox_production","_cache","$event","_component_combobox_number","_component_combobox","_hoisted_8","_component_search_query_list","_component_todos_list","_component_kanban_board","_component_user_calendar","_component_timesheet_list","_hoisted_9","_component_schedule","event","_hoisted_10","_hoisted_11","_component_task_info"],"mappings":"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"}