import{f as _,k as T,C as g,_ as k,S as v,A as y,V as b,d as S,b4 as D,bb as $,aX as n,m as L,a2 as d,aZ as c,a_ as u,g as P,b1 as x,b7 as l,bc as C,bd as M,n as w}from"./index-fMAJNmSk.js";const A={name:"person",mixins:[_],components:{Combobox:T,ComboboxNumber:g,PeopleAvatar:k,Schedule:v,SearchField:y,SearchQueryList:b,TaskInfo:S,TodosList:D,TimesheetList:$},data(){return{activeTab:"todos",currentSort:"entity_name",isTasksLoading:!1,isTasksLoadingError:!1,loading:{savingSearch:!1},person:null,scheduleHeight:0,selectedDate:n().format("YYYY-MM-DD"),sortOptions:["entity_name","priority","task_status_short_name","start_date","due_date","estimation","last_comment_date"].map(s=>({label:s,value:s})),zoomLevel:1,zoomOptions:[{label:"Week",value:0},{label:"1",value:1},{label:"2",value:2},{label:"3",value:3}]}},mounted(){this.updateActiveTab(),this.personTasksSearchText.length>0&&this.searchField.setValue(this.personTasksSearchText),setTimeout(()=>{this.searchField&&this.searchField.focus(),this.$refs["schedule-widget"]&&this.$refs["schedule-widget"].scrollToDate(this.tasksStartDate)},300),this.loadPerson(this.$route.params.person_id),window.addEventListener("resize",this.resetScheduleHeight)},afterDestroy(){window.removeEventListener("resize",this.resetScheduleHeight),this.$store.commit("LOAD_PERSON_TASKS_END",{tasks:[],userFilters:{},taskTypeMap:this.taskTypeMap})},computed:{...L(["displayedPersonTasks","displayedPersonDoneTasks","isCurrentUserAdmin","isCurrentUserManager","nbSelectedTasks","personMap","personTasksScrollPosition","personTasksSearchText","personTaskSearchQueries","personTaskSelectionGrid","personTimeSpentMap","personTimeSpentTotal","productionMap","selectedTasks","taskTypeMap","user"]),loggablePersonTasks(){return this.displayedPersonTasks.filter(s=>this.taskTypeMap.get(s.task_type_id).allow_timelog)},loggableDoneTasks(){return this.displayedPersonDoneTasks.filter(s=>this.taskTypeMap.get(s.task_type_id).allow_timelog)},searchField(){return this.$refs["person-tasks-search-field"]},taskList(){return this.$refs["task-list"]},haveDoneList(){return this.$refs["done-list"]},sortedTasks(){const s=this.currentSort==="entity_name",e=this.currentSort==="priority",t=this.currentSort==="due_date",a=this.currentSort==="start_date",r=[...this.displayedPersonTasks];return s?r.sort(d("project_name").thenBy("task_type_name").thenBy("full_entity_name")):e?r.sort(d("priority",-1).thenBy((i,o)=>i.due_date?o.due_date?i.due_date.localeCompare(o.due_date):-1:1).thenBy("project_name").thenBy("task_type_name").thenBy("entity_name")):t?r.sort(d((i,o)=>i.due_date?o.due_date?i.due_date.localeCompare(o.due_date):-1:1).thenBy("project_name").thenBy("task_type_name").thenBy("entity_name")):a?r.sort(d((i,o)=>i.start_date?o.start_date?i.start_date.localeCompare(o.start_date):-1:1).thenBy("project_name").thenBy("task_type_name").thenBy("entity_name")):r.sort(d(this.currentSort,-1).thenBy("project_name").thenBy("task_type_name").thenBy("entity_name"))},tasksStartDate(){return this.scheduleTasks.length?c(this.scheduleTasks):n()},tasksEndDate(){return this.scheduleTasks.length?u(this.scheduleTasks):n().add(15,"days")},scheduleTasks(){return this.scheduleItems.flatMap(s=>s.children)},scheduleItems(){const s=new Map;this.sortedTasks.forEach(t=>{if(!s.get(t.project_id)){const i=this.productionMap.get(t.project_id),o=this.buildProjectScheduleItem(i);s.set(t.project_id,o)}const a=s.get(t.project_id),r=this.buildTaskScheduleItem(a,t);r&&a.children.push(r)});const e=Array.from(s.values());return e.forEach(t=>{let a=n(),r=n().add(1,"days"),i=0;t.children.length>0&&(a=c(t.children),r=u(t.children)),t.children.forEach(o=>{this.formatDuration(o.estimation)&&(i+=o.estimation)}),Object.assign(t,{startDate:a,endDate:r,man_days:i})}),e}},methods:{...P(["loadPersonTasks","setPersonTasksSearch","savePersonTasksSearch","removePersonTasksSearch","setDayOff","setPersonTasksScrollPosition","setTimeSpent","unsetDayOff","updateTask"]),resetScheduleHeight(){this.$nextTick(()=>{var s,e,t,a,r,i;if(this.isActiveTab("schedule")){const o=((s=this.$refs.page)==null?void 0:s.offsetHeight)||0,h=((e=this.$refs.header)==null?void 0:e.offsetHeight)||0,p=((t=this.$refs.tabs)==null?void 0:t.offsetHeight)||0,f=((a=this.$refs.search)==null?void 0:a.offsetHeight)||0,m=((r=this.$refs.query)==null?void 0:r.offsetHeight)||0;this.scheduleHeight=o-h-p-f-m,(i=this.$refs["schedule-widget"])==null||i.resetScheduleSize()}})},buildProjectScheduleItem(s){return{...s,avatar:!0,color:x.fromString(s.name,!0),priority:1,expanded:!0,loading:!1,children:[],editable:!1}},buildTaskScheduleItem(s,e){let t=n(),a;if(!e.start_date&&!e.real_start_date&&!e.due_date&&!e.end_date)return null;e.start_date?t=l(e.start_date):e.real_start_date&&(t=l(e.real_start_date));const r=e.estimation;e.due_date?a=l(e.due_date):e.end_date?a=l(e.end_date):e.estimation&&(a=t.clone().add(r,"days")),(!a||a.isBefore(t))&&(a=t.clone().add(1,"days"));const i=this.taskTypeMap.get(e.task_type_id);return{...e,name:e.full_entity_name+" / "+i.name,startDate:t,endDate:a,expanded:!1,loading:!1,man_days:r,editable:!1,unresizable:!1,parentElement:s,color:i.color,children:[]}},isActiveTab(s){return this.activeTab===s},selectTab(s){this.activeTab=s,this.isActiveTab("todos")&&setTimeout(()=>{this.searchField&&this.searchField.focus()},100)},onSearchChange(s){this.setPersonTasksSearch(s)},loadPerson(s){this.person=this.personMap.get(s),this.isTasksLoading=!0,this.loadPersonTasks({personId:this.person.id,date:this.selectedDate,callback:e=>{e&&console.error(e),this.isTasksLoading=!1,this.isTasksLoadingError=!1,setTimeout(()=>{this.taskList&&this.$nextTick(()=>{this.taskList.setScrollPosition(this.personTasksScrollPosition)}),this.resizeHeaders()},0)}})},resizeHeaders(){this.$nextTick(()=>{this.taskList&&this.taskList.resizeHeaders(),this.haveDoneList&&this.haveDoneList.resizeHeaders()})},selectCurrent(){this.activeTab="current",setTimeout(()=>{this.$refs["person-tasks-search-field"].focus()},100)},selectDone(){this.activeTab="done"},changeSearch(s){this.$refs["person-tasks-search-field"].setValue(s.search_query),this.$refs["person-tasks-search-field"].$emit("change",s.search_query)},saveSearchQuery(s){this.loading.savingSearch||(this.loading.savingSearch=!0,this.savePersonTasksSearch(s).catch(console.error).finally(()=>{this.loading.savingSearch=!1}))},removeSearchQuery(s){this.removePersonTasksSearch(s).catch(e=>{e&&console.error(e)})},updateActiveTab(){["done","timesheets","schedule"].includes(this.$route.params.tab)?this.activeTab=this.$route.params.tab:this.activeTab="todos"},onTimeSpentChange(s){s.personId=this.person.id,s.date=this.selectedDate,this.setTimeSpent(s)},onDateChanged(s){this.selectedDate=n(s).format("YYYY-MM-DD"),this.loadPerson(this.person.id)},onSetDayOff(){const s={personId:this.person.id,date:this.selectedDate};this.setDayOff(s)},onUnsetDayOff(){const s={personId:this.person.id,date:this.selectedDate};this.unsetDayOff(s)},saveTaskScheduleItem(s){const e=C(s.startDate,s.endDate),t=M(this.organisation,e);s.man_days=t,s.startDate&&s.endDate&&this.updateTask({taskId:s.id,data:{estimation:t,start_date:s.startDate.format("YYYY-MM-DD"),due_date:s.endDate.format("YYYY-MM-DD")}})}},metaInfo(){return{title:this.person?`${this.person.name} - Kitsu`:"... - Kitsu"}},watch:{$route(){const s=this.$route.params.person_id;this.updateActiveTab(),this.person&&this.person.id!==s&&this.loadPerson(s)},activeTab(){this.resetScheduleHeight(),this.$nextTick(()=>{this.$refs["schedule-widget"]&&this.$refs["schedule-widget"].scrollToDate(this.tasksStartDate)})},zoomLevel(){this.$refs["schedule-widget"]&&this.$refs["schedule-widget"].scrollToDate(this.tasksStartDate)}}};var z=function(){var e=this,t=e._self._c;return t("div",{ref:"page",staticClass:"columns fixed-page"},[t("div",{staticClass:"column main-column"},[t("div",{staticClass:"person page"},[t("div",{ref:"header",staticClass:"flexrow page-header"},[e.person?t("div",{staticClass:"flexrow-item"},[t("people-avatar",{attrs:{person:e.person,size:80,"font-size":30,"is-text":!1}})],1):e._e(),t("div",{staticClass:"flexrow-item entity-title"},[e._v(" "+e._s(e.person?e.person.name:"")+" ")])]),t("div",{ref:"tabs",staticClass:"task-tabs tabs"},[e.person?t("ul",[t("li",{class:{"is-active":e.isActiveTab("todos")}},[t("router-link",{attrs:{to:{name:"person",params:{person_id:e.person.id}}}},[e._v(" "+e._s(e.$t("tasks.current"))+" ")])],1),t("li",{class:{"is-active":e.isActiveTab("done")}},[t("router-link",{attrs:{to:{name:"person-tab",params:{tab:"done",person_id:e.person.id}}}},[e._v(" "+e._s(e.$t("tasks.done"))+" ("+e._s(e.displayedPersonDoneTasks.length)+") ")])],1),e.isCurrentUserManager?t("li",{class:{"is-active":e.isActiveTab("timesheets")}},[t("router-link",{attrs:{to:{name:"person-tab",params:{tab:"timesheets",person_id:e.person.id}}}},[e._v(" "+e._s(e.$t("timesheets.title"))+" ")])],1):e._e(),t("li",{class:{"is-active":e.isActiveTab("schedule")}},[t("router-link",{attrs:{to:{name:"person-tab",params:{tab:"schedule",person_id:e.person.id}}}},[e._v(" "+e._s(e.$t("schedule.title"))+" ")])],1)]):e._e()]),t("div",{ref:"search",staticClass:"flexrow"},[t("search-field",{ref:"person-tasks-search-field",class:{"search-field":!0,"flexrow-item":!0},attrs:{"can-save":!0},on:{change:e.onSearchChange,save:e.saveSearchQuery}}),t("span",{staticClass:"filler"}),e.isActiveTab("schedule")?t("combobox-number",{staticClass:"flexrow-item zoom-level mb0",attrs:{label:e.$t("schedule.zoom_level"),options:e.zoomOptions},model:{value:e.zoomLevel,callback:function(a){e.zoomLevel=a},expression:"zoomLevel"}}):e._e(),t("combobox",{staticClass:"flexrow-item",attrs:{label:e.$t("main.sorted_by"),options:e.sortOptions,"locale-key-prefix":"tasks.fields."},model:{value:e.currentSort,callback:function(a){e.currentSort=a},expression:"currentSort"}})],1),t("div",{ref:"query"},[t("div",{staticClass:"query-list"},[t("search-query-list",{attrs:{queries:e.personTaskSearchQueries,type:"person"},on:{"change-search":e.changeSearch,"remove-search":e.removeSearchQuery}})],1)]),e.isActiveTab("todos")?t("todos-list",{ref:"task-list",attrs:{tasks:e.sortedTasks,"is-loading":e.isTasksLoading,"is-error":e.isTasksLoadingError,"selection-grid":e.personTaskSelectionGrid},on:{scroll:e.setPersonTasksScrollPosition}}):e._e(),e.isActiveTab("done")?t("todos-list",{ref:"done-list",attrs:{tasks:e.displayedPersonDoneTasks,"is-loading":e.isTasksLoading,"is-error":e.isTasksLoadingError,done:!0,selectionGrid:e.personTaskSelectionGrid}}):e._e(),e.isActiveTab("timesheets")?t("timesheet-list",{attrs:{tasks:e.loggablePersonTasks,"done-tasks":e.loggableDoneTasks,"is-loading":e.isTasksLoading,"is-error":e.isTasksLoadingError,"time-spent-map":e.personTimeSpentMap,"time-spent-total":e.personTimeSpentTotal,"hide-done":e.personTasksSearchText.length===0,"hide-day-off":!(e.isCurrentUserAdmin||this.user.id==this.person.id)},on:{"date-changed":e.onDateChanged,"time-spent-change":e.onTimeSpentChange,"set-day-off":e.onSetDayOff,"unset-day-off":e.onUnsetDayOff}}):e._e(),e.isActiveTab("schedule")?t("div",[e.scheduleItems.length>0?t("schedule",{ref:"schedule-widget",attrs:{"start-date":e.tasksStartDate.clone().add(-3,"months"),"end-date":e.tasksEndDate.clone().add(3,"months"),hierarchy:e.scheduleItems,"zoom-level":e.zoomLevel,height:e.scheduleHeight,"is-loading":e.isTasksLoading,"is-estimation-linked":!0,"with-milestones":!1},on:{"item-changed":e.saveTaskScheduleItem,"estimation-changed":a=>e.saveTaskScheduleItem(a.item)}}):t("div",{staticClass:"has-text-centered"},[e._v(" There is no tasks scheduled for current person. ")])],1):e._e()],1)]),e.nbSelectedTasks===1?t("div",{staticClass:"column side-column"},[t("task-info",{attrs:{task:e.selectedTasks.values().next().value}})],1):e._e()])},H=[],B=w(A,z,H,!1,null,"7a40f071",null,null);const O=B.exports;export{O as default};
//# sourceMappingURL=Person-ORpa2b2T.js.map
