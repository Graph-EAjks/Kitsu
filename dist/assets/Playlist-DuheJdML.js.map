{"version":3,"file":"Playlist-DuheJdML.js","sources":["../../src/components/widgets/ErrorText.vue","../../src/components/pages/Playlist.vue"],"sourcesContent":["<template>\n  <p\n    :class=\"{\n      error: true,\n      'has-text-right': alignRight,\n      'is-hidden': hidden\n    }\"\n  >\n    {{ text }}\n  </p>\n</template>\n\n<script>\nexport default {\n  name: 'error-text',\n  props: {\n    text: {\n      default: '',\n      type: String\n    },\n    hidden: {\n      default: false,\n      type: Boolean\n    },\n    alignRight: {\n      default: false,\n      type: Boolean\n    }\n  }\n}\n</script>\n","<template>\n  <div class=\"playlists page fixed-page dark\">\n    <div class=\"columns\">\n      <div\n        ref=\"playlistList\"\n        :class=\"{\n          'playlist-list-column': true,\n          column: true,\n          toggled: isListToggled\n        }\"\n        @scroll.passive=\"onPlaylistListScroll\"\n      >\n        <div class=\"flexrow top-section\">\n          <combobox-task-type\n            class=\"flexrow-item selector mb1\"\n            :task-type-list=\"taskTypeList\"\n            :label=\"$t('playlists.filter_task_type')\"\n            :thin=\"true\"\n            v-model=\"taskTypeId\"\n            v-if=\"!isListToggled\"\n          />\n          <span class=\"filler\" v-if=\"!isListToggled\"></span>\n          <button-simple\n            class=\"flexrow-item\"\n            style=\"flex: 0\"\n            :icon=\"isListToggled ? 'right' : 'left'\"\n            is-small\n            @click=\"isListToggled = !isListToggled\"\n          />\n        </div>\n\n        <div class=\"flexrow\">\n          <template v-if=\"!isListToggled\">\n            <combobox\n              class=\"flexrow-item mb2\"\n              :label=\"$t('main.sorted_by')\"\n              :options=\"sortOptions\"\n              locale-key-prefix=\"playlists.fields.\"\n              v-model=\"currentSort\"\n            />\n          </template>\n        </div>\n\n        <button\n          :class=\"{\n            button: true,\n            'is-loading': loading.addPlaylist\n          }\"\n          @click=\"showAddModal\"\n          key=\"new-playlist-button\"\n          v-if=\"\n            (isCurrentUserManager || isCurrentUserSupervisor) && !isListToggled\n          \"\n        >\n          <plus-icon class=\"icon is-small\" />\n          {{ $t('playlists.new_playlist') }}\n        </button>\n\n        <div class=\"playlists\" v-if=\"!loading.playlists\">\n          <router-link\n            :key=\"playlist.id\"\n            :to=\"getPlaylistPath(playlist.id)\"\n            :class=\"{\n              'playlist-item': true,\n              'for-client': playlist.for_client || false,\n              selected: playlist.id === currentPlaylist.id\n            }\"\n            v-for=\"playlist in playlists\"\n          >\n            <div\n              class=\"playlist-item-content\"\n              :style=\"playlistElementStyle(playlist)\"\n            >\n              <div class=\"flexrow\" v-if=\"!isListToggled\">\n                <light-entity-thumbnail\n                  class=\"playlist-thumbnail\"\n                  :preview-file-id=\"playlist.first_preview_file_id\"\n                  type=\"previews\"\n                  width=\"53px\"\n                  height=\"35px\"\n                  max-width=\"53px\"\n                  max-height=\"35px\"\n                  empty-width=\"53px\"\n                  empty-height=\"35px\"\n                  :title=\"playlist.name\"\n                />\n                <div class=\"ml05\">\n                  {{ playlist.name }}\n                  <span class=\"playlist-date\">\n                    {{ $t('playlists.updated_at') }}\n                    {{ formatDate(playlist.updated_at) }}\n                  </span>\n                </div>\n              </div>\n              <div class=\"has-text-centered\" v-else>\n                <light-entity-thumbnail\n                  :preview-file-id=\"playlist.first_preview_file_id\"\n                  type=\"previews\"\n                  width=\"38px\"\n                  height=\"30px\"\n                  max-width=\"38px\"\n                  max-height=\"30px\"\n                  empty-width=\"38px\"\n                  empty-height=\"30px\"\n                  :title=\"playlist.name\"\n                  v-if=\"playlist.first_preview_file_id\"\n                />\n              </div>\n            </div>\n          </router-link>\n        </div>\n        <spinner class=\"mt2\" v-else />\n        <error-text\n          :text=\"$t('playlists.loading_error')\"\n          v-if=\"errors.playlistLoading\"\n        />\n      </div>\n\n      <div\n        class=\"playlist-column no-selection\"\n        v-if=\"playlists.length > 0 && !currentPlaylist.id && !loading.playlist\"\n      >\n        <div\n          class=\"flexcolumn xyz-in\"\n          xyz=\"fade stagger\"\n          v-if=\"!loading.playlists && !loading.playlistsInit\"\n        >\n          <router-link\n            class=\"recent-playlist flexrow-item flexrow\"\n            :key=\"'recent-playlist-' + playlist.id\"\n            :to=\"getPlaylistPath(playlist.id)\"\n            v-for=\"playlist in lastPlaylists\"\n          >\n            <div class=\"has-text-centered\">\n              <light-entity-thumbnail\n                class=\"playlist-thumbnail\"\n                :preview-file-id=\"playlist.first_preview_file_id\"\n                type=\"previews\"\n                width=\"auto\"\n                height=\"auto\"\n                empty-height=\"252px\"\n              />\n            </div>\n            <div class=\"playlist-infos flexrow\">\n              <div>\n                <h3>{{ playlist.name }}</h3>\n                <span v-if=\"currentSort === 'created_at'\">\n                  {{ $t('playlists.created_at') }}\n                  {{ formatDate(playlist.created_at) }}\n                </span>\n                <span v-else>\n                  {{ $t('playlists.updated_at') }}\n                  {{ formatDate(playlist.updated_at) }}\n                </span>\n              </div>\n              <span class=\"filler\"> </span>\n              <div>\n                <task-type-name\n                  :task-type=\"taskTypeMap.get(playlist.task_type_id)\"\n                  v-if=\"playlist.task_type_id\"\n                />\n              </div>\n            </div>\n          </router-link>\n        </div>\n        <spinner class=\"mt2\" v-else />\n      </div>\n\n      <div\n        class=\"playlist-column no-selection has-text-centered\"\n        v-else-if=\"playlists.length === 0\"\n      >\n        <div v-if=\"!loading.playlists && !loading.playlistsInit\">\n          <p class=\"empty-explaination\">\n            {{ $t('playlists.no_playlist') }}\n          </p>\n          <button\n            :class=\"{\n              big: true,\n              button: true,\n              'is-loading': loading.addPlaylist\n            }\"\n            @click=\"showAddModal\"\n            key=\"new-playlist-button\"\n            v-if=\"isCurrentUserManager || isCurrentUserSupervisor\"\n          >\n            {{ $t('playlists.new_playlist') }}\n          </button>\n        </div>\n        <spinner class=\"mt2\" v-else />\n      </div>\n\n      <div class=\"playlist-column column\" v-else>\n        <playlist-player\n          ref=\"playlist-player\"\n          :playlist=\"currentPlaylist\"\n          :entities=\"currentEntities\"\n          :is-loading=\"loading.playlist\"\n          :is-adding-entity=\"isAddingEntity\"\n          :current-entity-type=\"currentEntityType\"\n          @edit-clicked=\"showEditModal\"\n          @show-add-entities=\"toggleAddEntities\"\n          @preview-changed=\"onPreviewChanged\"\n          @task-type-changed=\"onTaskTypeChanged\"\n          @playlist-deleted=\"goFirstPlaylist\"\n          @remove-entity=\"removeEntity\"\n          @order-change=\"onOrderChange\"\n          @annotation-changed=\"onAnnotationChanged\"\n          @for-client-changed=\"onForClientChanged\"\n          @annotations-refreshed=\"onAnnotationsRefreshed\"\n          @new-entity-dropped=\"onNewEntityDropped\"\n        />\n\n        <div\n          v-if=\"\n            (isCurrentUserManager || isCurrentUserSupervisor) &&\n            isAddingEntity &&\n            !loading.playlist\n          \"\n        >\n          <div class=\"addition-header\">\n            <div class=\"flexrow\">\n              <page-subtitle class=\"flexrow-item\" :text=\"addEntitiesText\" />\n              <span class=\"filler\"></span>\n              <a class=\"close-button\" @click=\"toggleAddEntities\">\n                <x-icon />\n              </a>\n            </div>\n            <div class=\"flexrow\">\n              <search-field\n                class=\"flexrow-item\"\n                ref=\"search-field\"\n                :can-save=\"false\"\n                @change=\"onSearchChange\"\n                :placeholder=\"\n                  isAssetPlaylist ? 'chars mode=wfa' : 'ex: seq01 anim=wfa'\n                \"\n              />\n              <button-simple\n                class=\"flexrow-item\"\n                :title=\"$t('entities.build_filter.title')\"\n                icon=\"filter\"\n                @click=\"modals.isBuildFilterDisplayed = true\"\n              />\n              <button\n                :class=\"{\n                  button: true,\n                  'flexrow-item': true,\n                  'add-sequence': true\n                }\"\n                :disabled=\"isAdditionLoading\"\n                @click=\"addCurrentSelection\"\n                v-if=\"isAddSearchVisible\"\n              >\n                {{ $t('playlists.add_selection') }}\n              </button>\n              <span class=\"filler\"></span>\n              <button\n                :class=\"{\n                  button: true,\n                  'add-sequence': true,\n                  'is-loading': loading.addDaily\n                }\"\n                :disabled=\"isAdditionLoading\"\n                @click=\"addDailyPending\"\n              >\n                {{ $t('playlists.build_daily') }}\n              </button>\n              <button\n                :class=\"{\n                  button: true,\n                  'add-sequence': true,\n                  'is-loading': loading.addDaily\n                }\"\n                :disabled=\"isAdditionLoading\"\n                @click=\"addAllPending\"\n              >\n                {{ $t('playlists.build_weekly') }}\n              </button>\n              <button\n                :class=\"{\n                  button: true,\n                  'add-sequence': true,\n                  'is-loading': loading.addEpisode\n                }\"\n                :disabled=\"isAdditionLoading\"\n                @click=\"addEpisodePending\"\n                v-if=\"isTVShow && !isAssetPlaylist && !isSequencePlaylist\"\n              >\n                {{ $t('playlists.add_episode') }}\n              </button>\n              <button\n                :class=\"{\n                  button: true,\n                  'add-sequence': true,\n                  'is-loading': loading.addMovie\n                }\"\n                :disabled=\"isAdditionLoading\"\n                @click=\"addMovie\"\n                v-else-if=\"!isAssetPlaylist\"\n              >\n                {{ $t('playlists.add_movie') }}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div\n          class=\"addition-section\"\n          v-if=\"\n            (isCurrentUserManager || isCurrentUserSupervisor) && isAddingEntity\n          \"\n          @scroll.passive=\"onBodyScroll\"\n        >\n          <spinner\n            class=\"mt2\"\n            key=\"entity-loader\"\n            v-if=\"isShotsLoading || isAssetsLoading\"\n          />\n          <div ref=\"entityListContent\" v-else>\n            <div v-if=\"isAssetPlaylist\">\n              <div\n                :key=\"'asset-type-' + i\"\n                v-for=\"(typeAssets, i) in displayedAssetsByType\"\n              >\n                <h2 class=\"entity-group-title\" v-if=\"typeAssets.length > 0\">\n                  {{ typeAssets[0].asset_type_name }}\n                </h2>\n                <div class=\"addition-entities\">\n                  <div\n                    :class=\"{\n                      'addition-shot': true,\n                      playlisted: currentEntities[asset.id] !== undefined\n                    }\"\n                    :key=\"asset.id\"\n                    draggable=\"true\"\n                    @dragstart=\"onEntityDragStart($event, asset)\"\n                    @click.prevent=\"addEntityToPlaylist(asset)\"\n                    v-for=\"asset in typeAssets.filter(a => !a.canceled)\"\n                  >\n                    <light-entity-thumbnail\n                      :preview-file-id=\"asset.preview_file_id\"\n                      width=\"150px\"\n                      height=\"100px\"\n                    />\n                    <span class=\"playlisted-shot-name\">{{ asset.name }}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div v-else-if=\"isSequencePlaylist\">\n              <div class=\"addition-entities\">\n                <div\n                  :class=\"{\n                    'addition-shot': true,\n                    playlisted: currentEntities[sequence.id] !== undefined\n                  }\"\n                  :key=\"sequence.id\"\n                  draggable=\"true\"\n                  @dragstart=\"onEntityDragStart($event, sequence)\"\n                  @click.prevent=\"addEntityToPlaylist(sequence)\"\n                  v-for=\"sequence in displayedSequences.filter(\n                    s => !s.canceled\n                  )\"\n                >\n                  <light-entity-thumbnail\n                    :preview-file-id=\"sequence.preview_file_id\"\n                    width=\"150px\"\n                    height=\"100px\"\n                  />\n                  <div>\n                    <span\n                      :title=\"getTaskStatus(sequence).name\"\n                      :style=\"{\n                        color: getTaskStatus(sequence).color\n                      }\"\n                      v-if=\"currentPlaylist.task_type_id\"\n                    >\n                      &bullet;\n                    </span>\n                    <span class=\"playlisted-shot-name\">{{\n                      sequence.name\n                    }}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div v-else>\n              <div\n                :key=\"'sequence-' + i\"\n                v-for=\"(sequenceShots, i) in displayedShotsBySequence\"\n              >\n                <h2 class=\"entity-group-title\" v-if=\"sequenceShots.length > 0\">\n                  {{ sequenceShots[0].sequence_name }}\n                  <button\n                    class=\"button\"\n                    @click=\"addSequence(sequenceShots)\"\n                    :key=\"'add-sequence-button-' + sequenceShots[0].sequence_id\"\n                    v-if=\"isCurrentUserManager || isCurrentUserSupervisor\"\n                  >\n                    {{ $t('playlists.add_sequence') }}\n                  </button>\n                </h2>\n                <div class=\"addition-entities\">\n                  <div\n                    :key=\"shot.id\"\n                    v-for=\"shot in sequenceShots.filter(s => !s.canceled)\"\n                  >\n                    <div\n                      :class=\"{\n                        'addition-shot': true,\n                        playlisted: currentEntities[shot.id] !== undefined\n                      }\"\n                      draggable=\"true\"\n                      @dragstart=\"onEntityDragStart($event, shot)\"\n                      @click.prevent=\"addEntityToPlaylist(shot)\"\n                    >\n                      <light-entity-thumbnail\n                        :preview-file-id=\"shot.preview_file_id\"\n                        width=\"150px\"\n                        height=\"100px\"\n                      />\n                      <div>\n                        <span\n                          :title=\"getTaskStatus(shot).name\"\n                          :style=\"{\n                            color: getTaskStatus(shot).color\n                          }\"\n                          v-if=\"currentPlaylist.task_type_id\"\n                        >\n                          &bullet;\n                        </span>\n                        <span class=\"playlisted-shot-name\">{{\n                          shot.name\n                        }}</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <edit-playlist-modal\n      ref=\"edit-playlist-modal\"\n      :active=\"modals.isEditDisplayed\"\n      :is-loading=\"loading.editPlaylist\"\n      :is-error=\"errors.editPlaylist\"\n      :playlist-to-edit=\"playlistToEdit\"\n      :task-type-id=\"taskTypeId\"\n      @cancel=\"hideEditModal\"\n      @confirm=\"confirmEditPlaylist\"\n    />\n\n    <build-filter-modal\n      ref=\"build-filter-modal\"\n      :active=\"modals.isBuildFilterDisplayed\"\n      :entity-type=\"currentEntityType\"\n      @confirm=\"confirmBuildFilter\"\n      @cancel=\"modals.isBuildFilterDisplayed = false\"\n    />\n  </div>\n</template>\n<script>\nimport { ref } from 'vue'\nimport firstBy from 'thenby'\nimport moment from 'moment-timezone'\nimport { mapGetters, mapActions } from 'vuex'\nimport { PlusIcon, XIcon } from 'lucide-vue-next'\n\nimport { DEFAULT_NB_FRAMES_PICTURE } from '@/lib/playlist'\nimport { formatDate } from '@/lib/time'\nimport { getPlaylistPath } from '@/lib/path'\nimport { updateModelFromList, removeModelFromList } from '@/lib/models'\nimport { sortAssets, sortShots } from '@/lib/sorting'\n\nimport assetStore from '@/store/modules/assets'\nimport shotStore from '@/store/modules/shots'\nimport sequenceStore from '@/store/modules/sequences'\n\nimport ButtonSimple from '@/components/widgets/ButtonSimple.vue'\nimport BuildFilterModal from '@/components/modals/BuildFilterModal.vue'\nimport Combobox from '@/components/widgets/Combobox.vue'\nimport ComboboxTaskType from '@/components/widgets/ComboboxTaskType.vue'\nimport EditPlaylistModal from '@/components/modals/EditPlaylistModal.vue'\nimport ErrorText from '@/components/widgets/ErrorText.vue'\nimport LightEntityThumbnail from '@/components/widgets/LightEntityThumbnail.vue'\nimport PageSubtitle from '@/components/widgets/PageSubtitle.vue'\nimport PlaylistPlayer from '@/components/pages/playlists/PlaylistPlayer.vue'\nimport SearchField from '@/components/widgets/SearchField.vue'\nimport Spinner from '@/components/widgets/Spinner.vue'\nimport TaskTypeName from '@/components/widgets/TaskTypeName.vue'\n\nexport default {\n  name: 'playlist',\n\n  components: {\n    BuildFilterModal,\n    ButtonSimple,\n    Combobox,\n    ComboboxTaskType,\n    ErrorText,\n    EditPlaylistModal,\n    LightEntityThumbnail,\n    PageSubtitle,\n    PlaylistPlayer,\n    PlusIcon,\n    SearchField,\n    Spinner,\n    TaskTypeName,\n    XIcon\n  },\n\n  data() {\n    return {\n      currentPlaylist: { name: '' },\n      currentSort: 'updated_at',\n      currentEntities: {},\n      isAddingEntity: false,\n      isListToggled: false,\n      page: 1,\n      taskTypeId: '',\n      sortedPlaylists: [],\n      sortOptions: ['updated_at', 'created_at', 'name'].map(name => ({\n        label: name,\n        value: name\n      })),\n      playlistToEdit: {\n        name: `${moment().format('YYYY-MM-DD HH:mm:ss')}`,\n        for_client: false\n      },\n      previewFileMap: new Map(),\n      previewFileEntityMap: new Map(),\n      modals: {\n        isBuildFilterDisplayed: false,\n        isEditDisplayed: false\n      },\n      loading: {\n        addPlaylist: false,\n        addDaily: false,\n        addEpisode: false,\n        addMovie: false,\n        addSequence: false,\n        addWeekly: false,\n        editPlaylist: false,\n        playlist: false,\n        playlists: false,\n        playlistsInit: true\n      },\n      errors: {\n        editPlaylist: false,\n        playlistLoading: false\n      }\n    }\n  },\n\n  computed: {\n    ...mapGetters([\n      'assetSearchText',\n      'currentEpisode',\n      'currentProduction',\n      'displayedAssets',\n      'displayedAssetsByType',\n      'displayedSequences',\n      'displayedShots',\n      'displayedShotsBySequence',\n      'isAssetsLoading',\n      'isCurrentUserManager',\n      'isCurrentUserSupervisor',\n      'isShotsLoading',\n      'isTVShow',\n      'productionTaskTypes',\n      'playlistMap',\n      'playlists',\n      'playlistsPath',\n      'shotsByEpisode',\n      'shotSearchText',\n      'taskMap',\n      'taskStatusMap',\n      'taskTypeMap'\n    ]),\n\n    isAdditionLoading() {\n      return (\n        this.loading.addSequence ||\n        this.loading.addWeekly ||\n        this.loading.addDaily ||\n        this.loading.addEpisode\n      )\n    },\n\n    isAssetPlaylist() {\n      return this.currentPlaylist.for_entity === 'asset'\n    },\n\n    isSequencePlaylist() {\n      return this.currentPlaylist.for_entity === 'sequence'\n    },\n\n    currentEntityType() {\n      return this.currentPlaylist.for_entity\n    },\n\n    isAddSearchVisible() {\n      return (\n        (this.isAssetPlaylist && this.assetSearchText) ||\n        (!this.isAssetPlaylist && this.shotSearchText)\n      )\n    },\n\n    lastPlaylists() {\n      return this.playlists\n    },\n\n    playlistPlayer() {\n      return this.$refs['playlist-player']\n    },\n\n    addEntitiesText() {\n      if (this.isAssetPlaylist) {\n        return this.$t('playlists.add_assets')\n      } else if (this.isSequencePlaylist) {\n        return this.$t('playlists.add_sequences')\n      } else {\n        return this.$t('playlists.add_shots')\n      }\n    },\n\n    tvShowPageTitle() {\n      const productionName = this.currentProduction\n        ? this.currentProduction.name\n        : ''\n      let episodeName = ''\n      if (this.currentEpisode) {\n        if (this.currentEpisode.id === 'all') {\n          episodeName = this.$t('main.all')\n        } else if (this.currentEpisode.id === 'main') {\n          episodeName = this.$t('main.main_pack')\n        } else {\n          episodeName = this.currentEpisode.name\n        }\n      }\n      return (\n        `${productionName} - ${episodeName}` +\n        ` | ${this.$t('playlists.title')} - Kitsu`\n      )\n    },\n\n    shortPageTitle() {\n      const productionName = this.currentProduction\n        ? this.currentProduction.name\n        : ''\n      return `${productionName} | ${this.$t('playlists.title')} - Kitsu`\n    },\n\n    taskTypeList() {\n      return [\n        {\n          id: '',\n          color: '#999',\n          name: this.$t('news.all')\n        }\n      ].concat([...this.productionTaskTypes])\n    }\n  },\n\n  methods: {\n    ...mapActions([\n      'changePlaylistOrder',\n      'changePlaylistPreview',\n      'changePlaylistType',\n      'displayMoreAssets',\n      'displayMoreShots',\n      'editPlaylist',\n      'getPendingAssets',\n      'getPendingShots',\n      'loadEpisodes',\n      'loadMorePlaylists',\n      'loadPlaylist',\n      'loadPlaylists',\n      'loadEntityPreviewFiles',\n      'loadShots',\n      'loadAssets',\n      'newPlaylist',\n      'refreshPlaylist',\n      'removeEntityPreviewFromPlaylist',\n      'resetSequences',\n      'pushEntityToPlaylist',\n      'setAssetSearch',\n      'setSequenceSearch',\n      'setShotSearch',\n      'updatePreviewAnnotation'\n    ]),\n\n    // Helpers\n\n    formatDate(dateString) {\n      return formatDate(dateString)\n    },\n\n    getPlaylistPath(playlistId, section) {\n      return getPlaylistPath(\n        this.currentProduction.id,\n        this.currentEpisode ? this.currentEpisode.id : null,\n        playlistId,\n        section\n      )\n    },\n\n    playlistElementStyle(playlist) {\n      if (this.isListToggled) {\n        return\n      }\n      const taskType = this.taskTypeMap.get(playlist.task_type_id)\n      const color = taskType?.color || 'transparent'\n      return {\n        'border-left': `4px solid ${color}`\n      }\n    },\n\n    getTaskStatus(entity) {\n      let entityWithTasks = shotStore.cache.shotMap.get(entity.id)\n      if (!entityWithTasks) {\n        entityWithTasks = assetStore.cache.assetMap.get(entity.id)\n      }\n      if (!entityWithTasks) {\n        entityWithTasks = sequenceStore.cache.sequenceMap.get(entity.id)\n      }\n      if (!entityWithTasks) return {}\n\n      const taskId = entity.validations.get(this.currentPlaylist.task_type_id)\n      if (taskId) {\n        const task = this.taskMap.get(taskId)\n        if (!task) return {}\n        const taskStatus = this.taskStatusMap.get(task.task_status_id)\n        return taskStatus\n      } else {\n        return {}\n      }\n    },\n\n    // Data loading\n\n    async loadShotsData() {\n      if (\n        this.displayedShots.length === 0 ||\n        this.displayedShots[0].project_id !== this.currentProduction.id ||\n        (this.currentEpisode &&\n          this.displayedShots[0].episode_id !== this.currentEpisode.id)\n      ) {\n        if (\n          this.isTVShow &&\n          this.currentEpisode &&\n          (this.currentEpisode.id === 'main' ||\n            this.currentEpisode.id === 'all')\n        ) {\n          // Do nothing for main or all episodes\n        } else {\n          if (this.isTVShow && !this.currentEpisode) {\n            await this.loadEpisodes()\n          }\n          await this.loadShots()\n        }\n      }\n    },\n\n    loadAssetsData() {\n      if (this.isTVShow || this.displayedAssets.length === 0) {\n        return this.loadAssets()\n      } else {\n        return Promise.resolve()\n      }\n    },\n\n    loadPlaylistsData(force = false) {\n      const setFirstPlaylist = () => {\n        this.setCurrentPlaylist(() => {\n          if (!this.currentPlaylist || !this.currentPlaylist.id) {\n            this.goFirstPlaylist()\n          }\n          return Promise.resolve()\n        })\n      }\n      if (this.playlists.length === 0 || force) {\n        return this.loadPlaylists({\n          sortBy: this.currentSort,\n          page: this.page,\n          taskTypeId: this.taskTypeId\n        })\n          .then(() => {\n            return setFirstPlaylist()\n          })\n          .catch(err => {\n            console.error(err)\n            this.errors.loadPlaylists = true\n            return Promise.reject(err)\n          })\n      } else {\n        return setFirstPlaylist()\n      }\n    },\n\n    onPlaylistListScroll(event) {\n      if (this.$options.silentMore) return\n      const listEl = this.$refs.playlistList\n      const maxHeight = listEl.scrollHeight - listEl.offsetHeight\n      const position = event.target\n      if (maxHeight < position.scrollTop + 20) {\n        this.$options.silentMore = true\n        this.page++\n        this.loadMorePlaylists({\n          sortBy: this.currentSort,\n          page: this.page,\n          taskTypeId: this.taskTypeId\n        })\n          .then(playlists => {\n            setTimeout(() => {\n              this.$options.silentMore = false\n            }, 1000)\n          })\n          .catch(err => {\n            console.error(err)\n            this.$options.silentMore = false\n            this.errors.loadPlaylists = true\n            return Promise.reject(err)\n          })\n      }\n    },\n\n    // Playlist build\n\n    rebuildCurrentEntities() {\n      this.currentEntities = {}\n      const tmpEntities = {}\n      this.previewFileMap = new Map()\n      this.previewFileEntityMap = new Map()\n      if (this.currentPlaylist && this.currentPlaylist.shots) {\n        this.currentPlaylist.shots.forEach(entity => {\n          const playlistEntity = this.convertEntityToPlaylistFormat(entity)\n          if (playlistEntity) {\n            tmpEntities[playlistEntity.id] = playlistEntity\n            this.previewFileEntityMap.set(\n              entity.preview_file_id,\n              playlistEntity\n            )\n            const previewFileGroups = Object.values(\n              playlistEntity.preview_files\n            )\n            previewFileGroups.forEach(previewFiles => {\n              previewFiles.forEach(previewFile => {\n                this.previewFileMap.set(previewFile.id, previewFile)\n              })\n            })\n          }\n        })\n      }\n      this.$nextTick(() => {\n        this.currentEntities = tmpEntities\n      })\n    },\n\n    onAnnotationsRefreshed(preview) {\n      const entity = this.previewFileEntityMap.get(preview.id)\n      const localPreview = this.previewFileMap.get(preview.id)\n      if (entity) {\n        entity.preview_file_annotations = preview.annotations\n      }\n      if (localPreview) {\n        localPreview.annotations = preview.annotations\n      }\n    },\n\n    convertEntityToPlaylistFormat(entityInfo) {\n      let entity\n      if (this.isAssetPlaylist) {\n        entity = assetStore.cache.assetMap.get(entityInfo.id)\n      } else if (this.isSequencePlaylist) {\n        entity = sequenceStore.cache.sequenceMap.get(entityInfo.id)\n        if (this.currentEpisode) {\n          entity.episode_name = this.currentEpisode.name\n        }\n      } else {\n        entity = shotStore.cache.shotMap.get(entityInfo.id)\n      }\n      if (entity) {\n        const playlistEntity = {\n          id: entityInfo.id,\n          name: entity.name,\n          parent_name:\n            entity.sequence_name ||\n            entity.episode_name ||\n            entity.asset_type_name,\n          preview_files: entityInfo.preview_files,\n          preview_file_id: entityInfo.preview_file_id || entity.preview_file_id,\n          preview_file_extension:\n            entityInfo.preview_file_extension || entity.preview_file_extension,\n          preview_file_revision:\n            entityInfo.preview_file_revision || entity.preview_file_revision,\n          preview_file_width:\n            entityInfo.preview_file_width || entity.preview_file_width,\n          preview_file_height:\n            entityInfo.preview_file_height || entity.preview_file_height,\n          preview_file_duration:\n            entityInfo.preview_file_duration || entity.preview_file_duration,\n          preview_file_task_id:\n            entityInfo.task_id ||\n            entityInfo.preview_file_task_id ||\n            entity.preview_file_task_id,\n          preview_file_annotations:\n            entityInfo.preview_file_annotations ||\n            entity.preview_file_annotations,\n          preview_file_previews:\n            entityInfo.preview_file_previews || entity.preview_file_previews,\n          preview_nb_frames:\n            entityInfo.nb_frames ||\n            entity.nb_frames ||\n            DEFAULT_NB_FRAMES_PICTURE\n        }\n        this.previewFileEntityMap.set(\n          playlistEntity.preview_file_id,\n          playlistEntity\n        )\n        const previews = playlistEntity.preview_file_previews || []\n        previews.forEach(preview => {\n          this.previewFileMap.set(preview.id, preview)\n        })\n        return playlistEntity\n      } else {\n        return null\n      }\n    },\n\n    setCurrentPlaylist(callback) {\n      const playlistId = this.$route.params.playlist_id\n      const playlist = this.playlistMap.get(playlistId)\n      if (playlist) {\n        this.loading.playlist = true\n        this.loadPlaylist(playlist).then(loadedPlaylist => {\n          this.currentPlaylist = ref(loadedPlaylist)\n          this.rebuildCurrentEntities()\n          this.loading.playlist = false\n          if (callback) callback()\n        })\n      } else {\n        this.currentPlaylist = {\n          name: ''\n        }\n        this.currentShots = {}\n      }\n    },\n\n    addEntity(entity, playlist, scrollRight = true) {\n      if (this.currentEntities[entity.id]) {\n        return Promise.resolve()\n      }\n      return this.loadEntityPreviewFiles(entity)\n        .then(previewFiles =>\n          this.addToStorePlaylistAndSave(previewFiles, entity, playlist)\n        )\n        .then(entity => {\n          this.addToPlayerPlaylist(entity, playlist, scrollRight)\n        })\n        .catch(err => console.error(err))\n    },\n\n    addToStorePlaylistAndSave(previewFiles, entity, playlist) {\n      return this.pushEntityToPlaylist({\n        playlist,\n        previewFiles,\n        entity: { ...entity }\n      })\n    },\n\n    addToPlayerPlaylist(entity, playlist, scrollRight = true) {\n      if (playlist.id !== this.playlistPlayer.playlist.id) {\n        return\n      }\n      const playlistEntity = this.convertEntityToPlaylistFormat(entity)\n      this.currentEntities[playlistEntity.id] = playlistEntity\n      this.playlistPlayer.entityList.push(playlistEntity)\n      if (scrollRight) {\n        this.$nextTick(() => {\n          this.playlistPlayer.scrollToRight()\n        })\n      }\n    },\n\n    addEntityToPlaylist(entity) {\n      if (this.currentEntities[entity.id]) {\n        return\n      }\n      const playlist = this.currentPlaylist\n      this.addEntity(entity, playlist).then(this.playlistPlayer.scrollToRight())\n    },\n\n    onNewEntityDropped(info) {\n      let entity\n      if (this.isAssetPlaylist) {\n        entity = assetStore.cache.assetMap.get(info.after)\n      } else if (this.isSequencePlaylist) {\n        entity = sequenceStore.cache.sequenceMap.get(info.after)\n      } else {\n        entity = shotStore.cache.shotMap.get(info.after)\n      }\n\n      if (entity && !this.currentEntities[entity.id]) {\n        const notScrollRight = false\n        const playlist = this.currentPlaylist\n        this.addEntity(entity, playlist, notScrollRight).then(() => {\n          this.playlistPlayer.onEntityDropped(info)\n        })\n      }\n    },\n\n    removeEntity(entity) {\n      this.removeEntityPreviewFromPlaylist({\n        playlist: this.currentPlaylist,\n        entity,\n        callback: () => {\n          delete this.currentEntities[entity.id]\n        }\n      })\n    },\n\n    clearCurrentPlaylist() {\n      this.currentPlaylist = {}\n      this.currentShots = {}\n    },\n\n    resetPlaylist() {\n      this.clearCurrentPlaylist()\n      this.setCurrentPlaylist()\n    },\n\n    // Addition Helpers\n\n    addCurrentSelection() {\n      this.$options.silent = true\n      const entities = this.isAssetPlaylist\n        ? this.displayedAssets\n        : this.displayedShots\n      this.addEntities([...entities].reverse(), () => {\n        this.$options.silent = false\n      })\n    },\n\n    addSequence(sequenceShots) {\n      if (sequenceShots.length > 0) {\n        const sequenceId = sequenceShots[0].sequence_id\n        const shots = Array.from(shotStore.cache.shotMap.values())\n          .filter(s => s.sequence_id === sequenceId)\n          .sort(firstBy('name'))\n          .reverse()\n        this.$options.silent = true\n        this.addEntities(shots, () => {\n          this.$options.silent = false\n        })\n      }\n    },\n\n    async addAllPending() {\n      this.$options.silent = true\n      this.loading.addWeekly = true\n      const getPending = this.isAssetPlaylist\n        ? this.getPendingAssets\n        : this.getPendingShots\n      const sortEntities = this.isAssetPlaylist ? sortAssets : sortShots\n      let entities = await getPending(false)\n      entities = sortEntities(entities).reverse()\n      this.addEntities(entities, () => {\n        this.loading.addWeekly = false\n        this.$options.silent = false\n      })\n    },\n\n    async addDailyPending() {\n      this.loading.addDaily = true\n      this.$options.silent = true\n      const getPending = this.isAssetPlaylist\n        ? this.getPendingAssets\n        : this.getPendingShots\n      const sortEntities = this.isAssetPlaylist ? sortAssets : sortShots\n      let entities = await getPending(true)\n      entities = sortEntities(entities).reverse()\n      this.addEntities(entities, () => {\n        this.loading.addDaily = false\n        this.$options.silent = false\n      })\n    },\n\n    addEpisodePending() {\n      this.loading.addEpisode = true\n      this.$options.silent = true\n      let shots = [].concat(...this.shotsByEpisode)\n      shots = sortShots(shots).reverse()\n      this.addEntities(shots, () => {\n        this.loading.addEpisode = false\n        this.$options.silent = false\n      })\n    },\n\n    addMovie() {\n      this.loading.addMovie = true\n      this.$options.silent = true\n      const shots = sortShots(Array.from(shotStore.cache.shotMap.values()))\n      this.addEntities(shots.reverse(), () => {\n        this.loading.addMovie = false\n        this.$options.silent = false\n      })\n    },\n\n    addEntities(entities, callback, playlist = undefined) {\n      if (!playlist) {\n        playlist = this.currentPlaylist\n      }\n      if (entities && entities.length > 0) {\n        const entity = entities.pop()\n        this.addEntity(entity, playlist).then(() => {\n          this.addEntities(entities, callback, playlist)\n        })\n      } else {\n        callback()\n      }\n    },\n\n    // Save data\n\n    /* When a preview is modified, the change is persisted */\n    onPreviewChanged(entity, previewFileId) {\n      this.changePlaylistPreview({\n        playlist: this.currentPlaylist,\n        entity,\n        previewFileId\n      })\n    },\n\n    onOrderChange(info) {\n      this.changePlaylistOrder({\n        playlist: this.currentPlaylist,\n        info\n      })\n    },\n\n    onAnnotationChanged({ preview, additions, deletions, updates }) {\n      const taskId = preview.task_id\n      this.updatePreviewAnnotation({\n        taskId,\n        preview,\n        additions,\n        deletions,\n        updates\n      })\n    },\n\n    // Search\n\n    confirmBuildFilter(query) {\n      this.modals.isBuildFilterDisplayed = false\n      this.$refs['search-field'].setValue(query)\n      this.onSearchChange(query)\n    },\n\n    onSearchChange(searchQuery) {\n      if (searchQuery.length > 1) {\n        if (this.isAssetPlaylist) {\n          this.setAssetSearch(searchQuery)\n          this.displayMoreAssets()\n        } else if (this.isSequencePlaylist) {\n          this.setSequenceSearch(searchQuery)\n          this.resetSequences()\n        } else {\n          this.setShotSearch(searchQuery)\n          this.displayMoreShots()\n        }\n      } else {\n        if (this.isAssetPlaylist) {\n          this.setAssetSearch('')\n        } else if (this.isSequencePlaylist) {\n          this.setSequenceSearch('')\n        } else {\n          this.setShotSearch('')\n        }\n      }\n    },\n\n    // Playlist list\n\n    onForClientChanged(forClient) {\n      this.editPlaylist({\n        data: {\n          id: this.currentPlaylist.id,\n          for_client: forClient\n        }\n      })\n    },\n\n    runAddPlaylist(form) {\n      const newPlaylist = {\n        name: form.name,\n        production_id: this.currentProduction.id,\n        for_client: form.for_client,\n        for_entity: form.for_entity,\n        is_for_all: form.is_for_all,\n        task_type_id: form.task_type_id\n      }\n      if (this.isTVShow && this.currentEpisode) {\n        newPlaylist.episode_id = this.currentEpisode.id\n      }\n      this.loading.editPlaylist = true\n      this.errors.editPlaylist = false\n      this.newPlaylist(newPlaylist)\n        .then(playlist => {\n          this.$router.push(this.getPlaylistPath(playlist.id))\n          this.loading.editPlaylist = false\n          this.modals.isEditDisplayed = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.errors.editPlaylist = true\n          this.loading.editPlaylist = false\n        })\n    },\n\n    confirmEditPlaylist(form) {\n      if (this.playlistToEdit.id) {\n        form.id = this.currentPlaylist.id\n        this.runEditPlaylist(form)\n      } else {\n        this.runAddPlaylist(form)\n      }\n    },\n\n    runEditPlaylist(form) {\n      this.loading.editPlaylist = true\n      this.errors.editPlaylist = false\n      this.editPlaylist({\n        data: {\n          id: form.id,\n          for_client: form.for_client,\n          for_entity: form.for_entity,\n          name: form.name,\n          task_type_id: form.task_type_id\n        },\n        callback: (err, playlist) => {\n          if (err) {\n            this.errors.editPlaylist = true\n          } else {\n            this.modals.isEditDisplayed = false\n            Object.assign(this.currentPlaylist, playlist)\n          }\n          this.loading.editPlaylist = false\n        }\n      })\n    },\n\n    goFirstPlaylist() {\n      if (this.playlists.length > 0) {\n        this.$router.push({\n          name: 'playlist',\n          params: {\n            production_id: this.currentProduction.id,\n            playlist_id: this.playlists[0].id\n          }\n        })\n      } else {\n        this.$router.push(this.playlistsPath)\n      }\n    },\n\n    onEntityDragStart(event, entity) {\n      event.dataTransfer.setData('entityId', entity.id)\n    },\n\n    // Changes\n\n    toggleAddEntities() {\n      if (this.isAddingEntity) {\n        this.resetPlaylist()\n      }\n      this.isAddingEntity = !this.isAddingEntity\n    },\n\n    onTaskTypeChanged(taskTypeId) {\n      this.changePlaylistType({\n        playlist: this.currentPlaylist,\n        taskTypeId,\n        callback: () => {\n          this.rebuildCurrentEntities()\n        }\n      })\n    },\n\n    onBodyScroll(event) {\n      const position = event.target\n      const maxHeight =\n        this.$refs.entityListContent.scrollHeight -\n        this.$refs.entityListContent.offsetHeight\n      if (maxHeight < position.scrollTop) {\n        if (this.isAssetPlaylist) {\n          this.displayMoreAssets()\n        } else {\n          this.displayMoreShots()\n        }\n      }\n    },\n\n    resetSorting() {\n      let order = 1\n      if (['created_at', 'updated_at'].includes(this.currentSort)) {\n        order = -1\n      }\n      this.sortedPlaylists = [...this.playlists].sort(\n        firstBy(this.currentSort, order).thenBy('name')\n      )\n    },\n\n    // Modals\n\n    showAddModal() {\n      this.playlistToEdit = {\n        name: `${moment().format('YYYY-MM-DD HH:mm:ss')}`,\n        for_client: false\n      }\n      this.errors.editPlaylist = false\n      this.modals.isEditDisplayed = true\n    },\n\n    showEditModal() {\n      this.playlistToEdit = this.currentPlaylist\n      this.errors.editPlaylist = false\n      this.modals.isEditDisplayed = true\n    },\n\n    hideEditModal() {\n      this.playlistToEdit = {\n        name: `${moment().format('YYYY-MM-DD HH:mm:ss')}`,\n        for_client: false\n      }\n      this.modals.isEditDisplayed = false\n    },\n\n    // Loading\n\n    async reloadAll() {\n      if (!this.loading.playlists) {\n        this.loading.playlists = true\n        await this.loadShotsData()\n        await this.loadAssetsData()\n        this.page = 1\n        await this.loadPlaylistsData()\n        this.loading.playlists = false\n        this.resetPlaylist()\n        setTimeout(() => {\n          this.loading.playlistsInit = false\n        }, 300)\n      }\n    }\n  },\n\n  mounted() {\n    // Next tick needed to ensure that current production is properly set.\n    this.$nextTick(() => {\n      this.reloadAll()\n      if (localStorage.getItem('playlist-sort')) {\n        this.currentSort = localStorage.getItem('playlist-sort')\n      }\n      this.resetSorting()\n    })\n  },\n\n  watch: {\n    $route() {\n      this.setCurrentPlaylist()\n    },\n\n    currentPlaylist() {\n      if (this.currentPlaylist.shots) {\n        this.$options.silentMore = false\n        this.isAddingEntity =\n          Object.keys(this.currentPlaylist.shots).length === 0\n      } else {\n        this.isAddingEntity = true\n      }\n    },\n\n    currentProduction() {\n      this.$store.commit('LOAD_PLAYLISTS_END', [])\n      this.reloadAll()\n    },\n\n    currentEpisode() {\n      this.$store.commit('LOAD_PLAYLISTS_END', [])\n      if (this.currentEpisode) {\n        this.reloadAll()\n      }\n    },\n\n    currentSort() {\n      localStorage.setItem('playlist-sort', this.currentSort)\n      this.loading.playlists = true\n      this.page = 1\n      this.loadPlaylistsData(true).then(() => {\n        this.loading.playlists = false\n      })\n    },\n\n    isListToggled() {\n      this.playlistPlayer?.onWindowResize()\n    },\n\n    taskTypeId() {\n      this.loadPlaylistsData(true)\n    }\n  },\n\n  socket: {\n    events: {\n      'playlist:new'(eventData) {\n        if (!this.playlistMap.get(eventData.playlist_id)) {\n          this.refreshPlaylist(eventData.playlist_id)\n        }\n      },\n\n      'playlist:update'(eventData) {\n        if (this.playlistMap.get(eventData.playlist_id)) {\n          this.refreshPlaylist(eventData.playlist_id)\n        }\n      },\n\n      'playlist:delete'(eventData) {\n        if (this.playlistMap.get(eventData.playlist_id)) {\n          this.$store.commit('DELETE_PLAYLIST_END', {\n            id: eventData.playlist_id\n          })\n        }\n      },\n\n      'build-job:new'(eventData) {\n        if (eventData.playlist_id === this.currentPlaylist.id) {\n          this.currentPlaylist.build_jobs = [\n            {\n              id: eventData.build_job_id,\n              created_at: eventData.created_at,\n              status: 'running',\n              playlist_id: this.currentPlaylist.id\n            }\n          ].concat(this.currentPlaylist.build_jobs)\n        }\n      },\n\n      'build-job:update'(eventData) {\n        if (eventData.playlist_id === this.currentPlaylist.id) {\n          updateModelFromList(this.currentPlaylist.build_jobs, {\n            id: eventData.build_job_id,\n            status: eventData.status\n          })\n        }\n      },\n\n      'build-job:delete'(eventData) {\n        if (eventData.playlist_id === this.currentPlaylist.id) {\n          this.currentPlaylist.build_jobs = removeModelFromList(\n            this.currentPlaylist.build_jobs,\n            {\n              id: eventData.build_job_id\n            }\n          )\n        }\n      }\n    }\n  },\n\n  head() {\n    if (this.isTVShow) {\n      return { title: this.tvShowPageTitle }\n    } else {\n      return { title: this.shortPageTitle }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dark {\n  .playlist-item {\n    background: $dark-grey-lightmore;\n    box-shadow: 0 0 6px #333;\n    border-color: $dark-grey;\n    color: $white-grey;\n  }\n\n  .playlist-list-column {\n    background: $dark-grey-light;\n    border-color: $dark-grey;\n    box-shadow: 0 0 6px #333;\n  }\n\n  .playlist-column {\n    button,\n    h2.entity-group-title {\n      color: white;\n    }\n  }\n\n  .playlist-column.no-selection {\n    background: $dark-grey-light;\n\n    h2 {\n      color: white;\n    }\n\n    .recent-playlist {\n      position: relative;\n      max-width: 800px;\n      margin: auto;\n      overflow: hidden;\n      background: $dark-grey-lightmore;\n      border: 2px solid $dark-grey;\n      box-shadow: 0 0 6px #333;\n      margin-bottom: 1em;\n\n      h3 {\n        color: white;\n      }\n    }\n  }\n\n  span.thumbnail-picture {\n    box-shadow: 0 0 6px #333;\n  }\n}\n\n.page {\n  display: flex;\n  padding-left: 0;\n  padding-right: 0;\n  padding-bottom: 0;\n}\n\n.page .columns {\n  margin-top: 0;\n  margin-bottom: 0;\n  overflow-y: auto;\n  flex: 1;\n}\n\n.playlist-list-column {\n  max-width: 300px;\n  background: #f4f5f9;\n  overflow-y: auto;\n  padding: 1em;\n  border-right: 1px solid #ddd;\n  box-shadow: 0 0 6px #f0f0f0;\n  z-index: 201;\n}\n\n.playlist-item {\n  display: block;\n  background: white;\n  border: 2px solid $white-grey;\n  border-radius: 3px;\n  box-shadow: 0 0 6px #ddd;\n  color: $grey-strong;\n  margin: 0.2em;\n  padding: 0.4em;\n  transition: all 0.2s ease;\n\n  &.for-client {\n    background: $purple-grey;\n  }\n\n  &:hover {\n    transform: scale(1.02);\n    border: 2px solid var(--background-selectable);\n  }\n}\n\n.playlist-item.selected {\n  border: 2px solid var(--background-selected);\n  transform: scale(1.02);\n}\n\n.playlist-list-column .button {\n  width: 100%;\n}\n\n.addition-entities {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  flex-direction: row;\n  max-width: 100%;\n  padding-left: 1em;\n}\n\n.addition-shot {\n  padding: 0;\n  cursor: pointer;\n  text-align: center;\n  margin: 0;\n  opacity: 0.5;\n  width: 170px;\n  display: flex;\n  flex-direction: column;\n\n  a {\n    margin: auto;\n  }\n\n  &:hover {\n    opacity: 0.75;\n  }\n\n  &.playlisted {\n    opacity: 1;\n\n    img,\n    span.thumbnail-picture {\n      border: 2px solid $purple;\n      border-radius: 5px;\n    }\n  }\n}\n\nspan.thumbnail-picture {\n  box-shadow: 0 0 6px #ddd;\n  margin-bottom: 2px;\n}\n\n.add-sequence {\n  margin-bottom: 0.4em;\n}\n\n.playlist-column {\n  overflow: hidden;\n  flex: 1;\n  background: $dark-grey-2;\n}\n\n.playlisted-shot-name {\n  padding-right: 20px;\n  color: var(--text);\n}\n\n.playlist-date {\n  display: block;\n  color: $grey;\n  font-size: 0.8em;\n}\n\n.entity-group-title {\n  border-bottom: 1px solid $light-grey-light;\n  color: $grey;\n  margin: 1em;\n  padding-bottom: 0.2em;\n  text-transform: uppercase;\n\n  button {\n    color: $grey;\n    padding: 0.3em 0.8em;\n    font-size: 0.7em;\n  }\n}\n\n.addition-header {\n  background: var(--background);\n  border-top: 3px solid $dark-grey;\n  height: 110px;\n  padding: 0 1em;\n\n  .subtitle {\n    margin-top: 1em;\n  }\n}\n\n.addition-section {\n  background: var(--background);\n  overflow-y: auto;\n  height: calc(100% - 420px);\n}\n\nh2 {\n  font-weight: bold;\n  text-transform: uppercase;\n  color: $grey;\n}\n\n.toggled {\n  padding: 1em 0.1em;\n  max-width: 50px;\n\n  .flexrow {\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 1em;\n  }\n\n  .playlist-item {\n    padding: 0;\n  }\n  .playlist-item-content {\n    height: 30px;\n    padding: 0;\n    border: 0;\n  }\n}\n\n.playlist-column.no-selection {\n  padding: 2em;\n  overflow: auto;\n  background: #f4f5f9;\n\n  h2 {\n    font-size: 2em;\n    margin-top: 1.5em;\n    margin-bottom: 0.3em;\n    border-bottom: 0;\n\n    &:first-child {\n      margin-top: 0.5em;\n    }\n  }\n\n  .recent-playlist {\n    height: 320px;\n    background: white;\n    border: 2px solid $light-grey-light;\n    box-shadow: 0 0 6px #ddd;\n    border-radius: 1em;\n    padding: 0;\n    width: 100%;\n    transition: all 0.6s ease;\n\n    img {\n      border-top-left-radius: 10px;\n      border-top-right-radius: 10px;\n    }\n\n    &:hover {\n      transform: scale(1.03);\n    }\n\n    .playlist-infos {\n      background-color: rgb(0, 0, 0, 0.2);\n      position: absolute;\n      bottom: 0;\n      right: 0;\n      left: 0;\n      align-items: middle;\n      padding: 0.3em 1.2em;\n      height: 65px;\n      padding-top: 0.3em;\n    }\n\n    h3 {\n      color: $grey-strong;\n      font-size: 1.4em;\n      font-weight: bold;\n    }\n    span {\n      display: block;\n    }\n  }\n\n  .empty-explaination {\n    color: $white;\n    margin-top: 4em;\n    font-size: 1.5em;\n  }\n\n  .big {\n    font-size: 1.2em;\n    margin-top: 1em;\n    padding: 0.5em 1em;\n    height: auto;\n  }\n}\n\n.top-section {\n  align-items: flex-start;\n}\n\n.thumbnail-picture,\n.playlist-thumbnail {\n  border-radius: 4px;\n}\n\n.playlist-item-content {\n  padding-left: 0.5em;\n  overflow-wrap: anywhere;\n\n  .flexrow {\n    align-items: flex-start;\n    .thumbnail-picture {\n      margin-top: 3px;\n    }\n  }\n}\n</style>\n"],"names":["_sfc_main","_createElementBlock","_normalizeClass","$props","BuildFilterModal","ButtonSimple","Combobox","ComboboxTaskType","ErrorText","EditPlaylistModal","LightEntityThumbnail","PageSubtitle","PlaylistPlayer","PlusIcon","SearchField","Spinner","TaskTypeName","XIcon","name","moment","mapGetters","productionName","episodeName","mapActions","dateString","formatDate","playlistId","section","getPlaylistPath","playlist","taskType","entity","entityWithTasks","shotStore","assetStore","sequenceStore","taskId","task","force","setFirstPlaylist","err","event","listEl","maxHeight","position","playlists","tmpEntities","playlistEntity","previewFiles","previewFile","preview","localPreview","entityInfo","DEFAULT_NB_FRAMES_PICTURE","callback","loadedPlaylist","ref","scrollRight","info","entities","sequenceShots","sequenceId","shots","s","firstBy","getPending","sortEntities","sortAssets","sortShots","previewFileId","additions","deletions","updates","query","searchQuery","forClient","form","newPlaylist","taskTypeId","order","_a","eventData","updateModelFromList","removeModelFromList","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_5","_hoisted_8","_hoisted_9","_hoisted_13","_hoisted_14","_hoisted_19","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_openBlock","_createElementVNode","$data","_cache","args","$options","_createCommentVNode","_createBlock","_component_combobox_task_type","_ctx","$event","_hoisted_4","_createVNode","_component_button_simple","_component_combobox","_component_plus_icon","_createTextVNode","_component_spinner","_hoisted_6","_Fragment","_renderList","_component_router_link","_withCtx","_normalizeStyle","_hoisted_10","_component_light_entity_thumbnail","_hoisted_7","_toDisplayString","_component_error_text","_hoisted_11","_hoisted_12","_hoisted_15","_hoisted_16","_component_task_type_name","_hoisted_17","_hoisted_18","_hoisted_20","_component_playlist_player","_hoisted_21","_component_page_subtitle","_component_x_icon","_component_search_field","_hoisted_30","_hoisted_31","typeAssets","i","_hoisted_32","a","asset","_withModifiers","_hoisted_36","sequence","_hoisted_41","_hoisted_42","shot","_component_edit_playlist_modal","_component_build_filter_modal"],"mappings":"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"}