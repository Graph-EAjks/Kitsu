{"version":3,"file":"ProductionSchedule-C3XNTHP8.js","sources":["../../src/components/pages/ProductionSchedule.vue"],"sourcesContent":["<template>\n  <div class=\"columns fixed-page\">\n    <div class=\"column main-column\">\n      <div class=\"flexrow project-dates\">\n        <div class=\"flexrow-item\">\n          <label class=\"label\">\n            {{ $t('main.start_date') }}\n          </label>\n          <date-field :can-delete=\"false\" utc v-model=\"selectedStartDate\" />\n        </div>\n        <div class=\"flexrow-item field\">\n          <label class=\"label\">\n            {{ $t('main.end_date') }}\n          </label>\n          <date-field :can-delete=\"false\" utc v-model=\"selectedEndDate\" />\n        </div>\n        <!--\n        <text-field\n          class=\"flexrow-item overall-man-days\"\n          type=\"number\"\n          v-model=\"overallManDays\"\n          :label=\"$t('schedule.overall_man_days')\"\n          :disabled=\"!isCurrentUserAdmin\"\n        />\n        -->\n        <combobox-number\n          class=\"flexrow-item zoom-level\"\n          :label=\"$t('schedule.zoom_level')\"\n          :options=\"zoomOptions\"\n          v-model=\"zoomLevel\"\n        />\n      </div>\n\n      <schedule\n        :start-date=\"startDate\"\n        :end-date=\"endDate\"\n        :hierarchy=\"scheduleItems\"\n        :zoom-level=\"zoomLevel\"\n        :is-loading=\"loading.schedule\"\n        :is-error=\"errors.schedule\"\n        :hide-man-days=\"true\"\n        @item-changed=\"scheduleItemChanged\"\n        @estimation-changed=\"estimationChanged\"\n        @root-element-expanded=\"expandTaskTypeElement\"\n      />\n    </div>\n\n    <div\n      class=\"column side-column is-hidden-mobile hide-small-screen\"\n      v-if=\"currentTask\"\n    >\n      <task-info :task=\"currentTask\" :is-loading=\"false\" />\n    </div>\n  </div>\n</template>\n\n<script>\n/*\n * Page to manage the schedule of the big steps of the production. It allows\n * to set milestones too.\n */\nimport { mapGetters, mapActions } from 'vuex'\nimport moment from 'moment-timezone'\n\nimport { getTaskTypeSchedulePath } from '@/lib/path'\nimport { sortTaskTypeScheduleItems } from '@/lib/sorting'\nimport { daysToMinutes, parseDate } from '@/lib/time'\n\nimport ComboboxNumber from '@/components/widgets/ComboboxNumber.vue'\nimport DateField from '@/components/widgets/DateField.vue'\nimport Schedule from '@/components/widgets/Schedule.vue'\nimport TaskInfo from '@/components/sides/TaskInfo.vue'\n\nexport default {\n  name: 'production-schedule',\n  components: {\n    ComboboxNumber,\n    DateField,\n    Schedule,\n    TaskInfo\n  },\n\n  data() {\n    return {\n      currentTask: null,\n      // overallManDays: 0,\n      endDate: moment().add(6, 'months').endOf('day'),\n      scheduleItems: [],\n      startDate: moment().startOf('day'),\n      selectedStartDate: null,\n      selectedEndDate: null,\n      zoomLevel: 1,\n      zoomOptions: [\n        { label: 'Week', value: 0 },\n        { label: '1', value: 1 },\n        { label: '2', value: 2 },\n        { label: '3', value: 3 }\n      ],\n      loading: {\n        schedule: false\n      },\n      errors: {\n        schedule: false\n      }\n    }\n  },\n\n  mounted() {\n    this.reset()\n  },\n\n  computed: {\n    ...mapGetters([\n      'assetTypeMap',\n      'currentEpisode',\n      'currentProduction',\n      'isCurrentUserAdmin',\n      'isCurrentUserManager',\n      'isCurrentUserSupervisor',\n      'isTVShow',\n      'organisation',\n      'taskTypeMap',\n      'user'\n    ])\n  },\n\n  methods: {\n    ...mapActions([\n      'editProduction',\n      'loadAssetTypeScheduleItems',\n      'loadEpisodeScheduleItems',\n      'loadScheduleItems',\n      'loadSequenceScheduleItems',\n      'saveScheduleItem'\n    ]),\n\n    loadData() {\n      this.loading.schedule = true\n      this.loadScheduleItems(this.currentProduction)\n        .then(scheduleItems => {\n          const scheduleStartDate = parseDate(this.selectedStartDate)\n          const scheduleEndDate = parseDate(this.selectedEndDate)\n          scheduleItems = scheduleItems.map(item => {\n            const taskType = this.taskTypeMap.get(item.task_type_id)\n            let startDate, endDate\n            if (item.start_date) {\n              startDate = parseDate(item.start_date)\n            } else {\n              startDate = moment()\n            }\n            if (startDate.isSameOrAfter(scheduleEndDate)) {\n              startDate = scheduleEndDate.clone().add(-1, 'days')\n            }\n\n            if (startDate.isBefore(scheduleStartDate)) {\n              startDate = scheduleStartDate.clone()\n            }\n\n            if (item.end_date) {\n              endDate = parseDate(item.end_date)\n            } else {\n              endDate = startDate.clone().add(1, 'days')\n            }\n            if (endDate.isSameOrAfter(scheduleEndDate)) {\n              endDate = scheduleEndDate.clone()\n            }\n\n            const path = getTaskTypeSchedulePath(\n              taskType.id,\n              this.currentProduction.id,\n              this.currentEpisode ? this.currentEpisode.id : null,\n              taskType.for_entity\n            )\n\n            return {\n              ...item,\n              color: taskType.color,\n              for_entity: taskType.for_entity,\n              name: taskType.name,\n              priority: taskType.priority,\n              startDate: startDate,\n              endDate: endDate,\n              editable: this.isInDepartment(taskType),\n              expanded: false,\n              loading: false,\n              route:\n                taskType.for_entity === 'Shot' && this.isTVShow ? null : path,\n              children: []\n            }\n          })\n          this.scheduleItems = sortTaskTypeScheduleItems(\n            scheduleItems,\n            this.currentProduction,\n            this.taskTypeMap\n          )\n          this.loading.schedule = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.loading.schedule = false\n        })\n    },\n\n    reset() {\n      if (this.currentProduction.start_date) {\n        this.startDate = parseDate(this.currentProduction.start_date)\n      }\n      if (this.currentProduction.end_date) {\n        this.endDate = parseDate(this.currentProduction.end_date)\n      }\n      // this.overallManDays = this.currentProduction.man_days\n      this.selectedStartDate = this.startDate.toDate()\n      this.selectedEndDate = this.endDate.toDate()\n      this.loadData()\n    },\n\n    convertScheduleItems(taskTypeElement, scheduleItems) {\n      return scheduleItems.map(item => {\n        let startDate, endDate\n        if (item.start_date) {\n          startDate = parseDate(item.start_date)\n        } else {\n          startDate = moment()\n        }\n        if (taskTypeElement && startDate.isBefore(taskTypeElement.startDate)) {\n          startDate = taskTypeElement.startDate.clone()\n        }\n        if (taskTypeElement && startDate.isAfter(taskTypeElement.endDate)) {\n          startDate = taskTypeElement.endDate.clone().add(-1, 'days')\n        }\n        if (item.end_date) {\n          endDate = parseDate(item.end_date)\n        } else {\n          endDate = startDate.clone().add(1, 'days')\n        }\n        if (endDate.isBefore(startDate)) {\n          endDate = startDate.clone().add(1, 'days')\n        }\n        const scheduleItem = {\n          ...item,\n          startDate: startDate,\n          endDate: endDate,\n          expanded: false,\n          loading: false,\n          editable: this.isInDepartment(\n            this.taskTypeMap.get(item.task_type_id)\n          ),\n          children: [],\n          parentElement: taskTypeElement\n        }\n        if (this.isTVShow) {\n          scheduleItem.route = getTaskTypeSchedulePath(\n            item.task_type_id,\n            this.currentProduction.id,\n            item.object_id,\n            taskTypeElement.for_entity\n          )\n        }\n        return scheduleItem\n      })\n    },\n\n    expandTaskTypeElement(taskTypeElement) {\n      const parameters = {\n        production: this.currentProduction,\n        taskType: this.taskTypeMap.get(taskTypeElement.task_type_id)\n      }\n\n      taskTypeElement.expanded = !taskTypeElement.expanded\n      if (taskTypeElement.expanded) {\n        taskTypeElement.loading = true\n        let action = 'loadAssetTypeScheduleItems'\n        if (taskTypeElement.for_entity === 'Shot') {\n          if (this.isTVShow) action = 'loadEpisodeScheduleItems'\n          else action = 'loadSequenceScheduleItems'\n        }\n\n        this[action](parameters)\n          .then(scheduleItems => {\n            taskTypeElement.loading = false\n            taskTypeElement.children = this.convertScheduleItems(\n              taskTypeElement,\n              scheduleItems\n            )\n          })\n          .catch(err => {\n            console.error(err)\n            taskTypeElement.loading = false\n            taskTypeElement.children = []\n          })\n      }\n    },\n\n    estimationChanged({ item, days }) {\n      item.man_days = daysToMinutes(this.organisation, days)\n      this.saveScheduleItem(item)\n    },\n\n    scheduleItemChanged(item) {\n      if (item.startDate && item.endDate && item.parentElement) {\n        item.parentElement.startDate = this.getMinDate(item.parentElement)\n        item.parentElement.endDate = this.getMaxDate(item.parentElement)\n        this.saveScheduleItem(item.parentElement)\n      } else if (!item.parentElement) {\n        const minDate = this.getMinDate(item)\n        const maxDate = this.getMaxDate(item)\n        if (item.startDate.isAfter(minDate)) item.startDate = minDate\n        if (item.endDate.isBefore(maxDate)) {\n          item.endDate = maxDate.add(-1, 'days')\n        }\n      }\n      this.saveScheduleItem(item)\n    },\n\n    getMinDate(parentElement) {\n      let minDate = this.endDate.clone()\n      parentElement.children.forEach(item => {\n        if (item.startDate && item.startDate.isBefore(minDate)) {\n          minDate = item.startDate\n        }\n      })\n      return minDate.clone()\n    },\n\n    getMaxDate(parentElement) {\n      let maxDate = this.startDate.clone()\n      parentElement.children.forEach(item => {\n        if (item.endDate && item.endDate.isAfter(maxDate)) {\n          maxDate = item.endDate\n        }\n      })\n      return maxDate.clone()\n    },\n\n    isInDepartment(taskType) {\n      if (this.isCurrentUserManager) {\n        return true\n      } else if (this.isCurrentUserSupervisor) {\n        if (this.user.departments.length === 0) {\n          return true\n        } else {\n          return (\n            taskType.department_id &&\n            this.user.departments.includes(taskType.department_id)\n          )\n        }\n      } else {\n        return false\n      }\n    }\n  },\n\n  watch: {\n    selectedStartDate() {\n      this.startDate = parseDate(this.selectedStartDate)\n      const start_date = this.startDate.format('YYYY-MM-DD')\n      if (\n        this.currentProduction.start_date &&\n        this.currentProduction.start_date !== start_date\n      ) {\n        this.editProduction({\n          ...this.currentProduction,\n          start_date\n        })\n      }\n    },\n\n    selectedEndDate() {\n      this.endDate = parseDate(this.selectedEndDate)\n      const end_date = this.endDate.format('YYYY-MM-DD')\n      if (\n        this.currentProduction.end_date &&\n        this.currentProduction.end_date !== end_date\n      ) {\n        this.editProduction({\n          ...this.currentProduction,\n          end_date\n        })\n      }\n    },\n\n    // overallManDays() {\n    //   if (this.overallManDays !== this.currentProduction.man_days) {\n    //     this.editProduction({\n    //       ...this.currentProduction,\n    //       man_days: this.overallManDays\n    //     })\n    //   }\n    // },\n\n    currentProduction() {\n      this.reset()\n    }\n  },\n\n  head() {\n    return {\n      title:\n        `${this.currentProduction.name} ` +\n        `| ${this.$t('schedule.title')} - Kitsu`\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dark {\n  .project-dates {\n    color: $white-grey;\n    border-bottom: 1px solid $grey;\n  }\n}\n\n.project-dates {\n  border-bottom: 1px solid #eee;\n  padding-bottom: 1em;\n\n  .field {\n    padding-bottom: 0;\n    margin-bottom: 0;\n  }\n\n  .overall-man-days {\n    width: 120px;\n    font-size: 0.9em;\n    margin-right: 1em;\n  }\n}\n\n.fixed-page {\n  padding: 1em;\n  padding-top: 90px;\n  padding-left: 2em;\n}\n\n.main-column {\n  display: flex;\n  border: 0;\n  overflow: hidden;\n  flex-direction: column;\n}\n\n.zoom-level {\n  margin-top: -10px;\n}\n</style>\n"],"names":["_sfc_main","ComboboxNumber","DateField","Schedule","TaskInfo","moment","mapGetters","mapActions","scheduleItems","scheduleStartDate","parseDate","scheduleEndDate","item","taskType","startDate","endDate","path","getTaskTypeSchedulePath","sortTaskTypeScheduleItems","err","taskTypeElement","scheduleItem","parameters","action","days","daysToMinutes","minDate","maxDate","parentElement","start_date","end_date","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_openBlock","_createElementBlock","_createElementVNode","_toDisplayString","_ctx","_createVNode","_component_date_field","$data","_cache","$event","_component_combobox_number","_component_schedule","$options","_hoisted_8","_component_task_info","_createCommentVNode"],"mappings":"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"}