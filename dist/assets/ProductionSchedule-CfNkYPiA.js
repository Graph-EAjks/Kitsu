import{_ as M,N as I,ai as w,X as x,K as V,A as p,m as O,$ as A,bU as B,b as C,bF as i,cd as g,ce as E,cf as z,cg as T,bL as U,r as m,o as b,c as P,e as f,t as v,f as D,d as Y}from"./index-CBmSN8vz.js";const L={name:"production-schedule",components:{ComboboxNumber:I,DateField:w,Schedule:x,TaskInfo:V},data(){return{currentTask:null,daysOffByPerson:[],endDate:p().add(6,"months").endOf("day"),scheduleItems:[],startDate:p().startOf("day"),selectedStartDate:null,selectedEndDate:null,zoomLevel:1,zoomOptions:[{label:this.$t("main.week"),value:0},{label:"1",value:1},{label:"2",value:2},{label:"3",value:3}],loading:{schedule:!1},errors:{schedule:!1}}},mounted(){this.reset()},computed:{...O(["currentEpisode","currentProduction","isCurrentUserManager","isCurrentUserSupervisor","isTVShow","organisation","personMap","taskTypeMap","user"]),assetMap(){return A.cache.assetMap},shotMap(){return B.cache.shotMap}},methods:{...C(["editProduction","loadAggregatedPersonDaysOff","loadAssets","loadAssetTypeScheduleItems","loadEpisodeScheduleItems","loadScheduleItems","loadSequenceScheduleItems","loadShots","loadTasks","saveScheduleItem"]),loadData(){this.loading.schedule=!0,this.loadScheduleItems(this.currentProduction).then(e=>{const n=i(this.selectedStartDate),a=i(this.selectedEndDate);e=e.map(d=>{const s=this.taskTypeMap.get(d.task_type_id);let o,r;d.start_date?o=i(d.start_date):o=p(),o.isSameOrAfter(a)&&(o=a.clone().add(-1,"days")),o.isBefore(n)&&(o=n.clone()),d.end_date?r=i(d.end_date):r=o.clone().add(1,"days"),r.isSameOrAfter(a)&&(r=a.clone());const _=g(s.id,this.currentProduction.id,this.currentEpisode?this.currentEpisode.id:null,s.for_entity);return{...d,color:s.color,for_entity:s.for_entity,name:`${s.for_entity} / ${s.name}`,priority:s.priority,startDate:o,endDate:r,editable:this.isInDepartment(s),expanded:!1,loading:!1,route:s.for_entity==="Shot"&&this.isTVShow?null:_,children:[]}}),this.scheduleItems=E(e,this.currentProduction,this.taskTypeMap),this.loading.schedule=!1}).catch(e=>{console.error(e),this.loading.schedule=!1})},reset(){this.currentProduction.start_date&&(this.startDate=i(this.currentProduction.start_date)),this.currentProduction.end_date&&(this.endDate=i(this.currentProduction.end_date)),this.selectedStartDate=this.startDate.toDate(),this.selectedEndDate=this.endDate.toDate(),this.loadData()},convertScheduleItems(e,n){return n.map(a=>{let d;if(a.start_date?d=i(a.start_date):d=p(),d.isAfter(this.endDate))return;let s;if(a.end_date?s=i(a.end_date):s=d.clone().add(1,"days"),s.isBefore(d)&&(s=d.clone().add(1,"days")),s.isBefore(this.startDate))return;const o={...a,startDate:d,endDate:s,expanded:!1,loading:!1,editable:this.isInDepartment(this.taskTypeMap.get(a.task_type_id)),children:[],parentElement:e};return this.isTVShow&&(o.route=g(a.task_type_id,this.currentProduction.id,a.object_id,e.for_entity)),o}).filter(Boolean)},async expandTaskTypeElement(e,n=null){if(e.expanded=!e.expanded,e.expanded){try{e.loading=!0,e.children=[],e.people=[];const a=this.isTVShow?["Asset","Shot"].includes(e.for_entity)?this.loadEpisodeScheduleItems:this.loadSequenceScheduleItems:e.for_entity==="Shot"?this.loadSequenceScheduleItems:this.loadAssetTypeScheduleItems,d={production:this.currentProduction,taskType:this.taskTypeMap.get(e.task_type_id)},s=await a(d),o=this.convertScheduleItems(e,s);if(this.isTVShow)e.children=o;else{e.for_entity==="Asset"&&await this.loadAssets({withTasks:!1}),e.for_entity==="Shot"&&await this.loadShots();const r=await this.loadTasks({project_id:this.currentProduction.id,task_type_id:e.task_type_id,relations:"true"}),_=[...new Set(r.flatMap(t=>t.assignees))];await this.loadDaysOff(_);const h={},y={};r.forEach(t=>{e.for_entity==="Asset"?(t.entity=this.assetMap.get(t.entity_id),t.entity_type_id=t.entity.asset_type_id):e.for_entity==="Shot"?(t.entity=this.shotMap.get(t.entity_id),t.entity_type_id=t.entity.sequence_id):t.entity_type_id=e.for_entity,h[t.entity_type_id]||(h[t.entity_type_id]={}),t.assignees.forEach(u=>{h[t.entity_type_id][u]||(h[t.entity_type_id][u]=[],y[u]={...this.personMap.get(u),daysOff:this.daysOffByPerson[u]});let l;t.start_date?l=i(t.start_date):l=p(),t.startDate=l;let c;if(t.due_date?c=i(t.due_date):t.end_date?c=i(t.end_date):t.estimation&&(c=z(t.startDate,Math.ceil(T(this.organisation,t.estimation))-1,this.daysOffByPerson[u])),!c||c.isBefore(l)){const S=l.isoWeekday()===5?3:1;c=l.clone().add(S,"days")}if(!c.isSameOrAfter(l)){const S=l.isoWeekday()===5?3:1;c=l.clone().add(S,"days")}t.endDate=c,h[t.entity_type_id][u].push(t)})}),o.forEach(t=>{t.children=h[t.object_id]}),e.children=o,e.people=y}}catch(a){console.error(a),e.children=[],e.people=[]}finally{e.loading=!1}n&&n(e)}},async loadDaysOff(e){this.daysOffByPerson=[];for(const n of e){const a=await this.loadAggregatedPersonDaysOff({personId:n}).catch(()=>[]);this.daysOffByPerson[n]=a}},estimationChanged({item:e,days:n}){e.man_days=U(this.organisation,n),this.saveScheduleItem(e)},scheduleItemChanged(e){if(e.startDate&&e.endDate&&e.parentElement)e.parentElement.startDate=this.getMinDate(e.parentElement),e.parentElement.endDate=this.getMaxDate(e.parentElement),this.saveScheduleItem(e.parentElement);else if(!e.parentElement){const n=this.getMinDate(e),a=this.getMaxDate(e);e.startDate.isAfter(n)&&(e.startDate=n),e.endDate.isBefore(a)&&(e.endDate=a.add(-1,"days"))}this.saveScheduleItem(e)},getMinDate(e){let n=this.endDate.clone();return e.children.forEach(a=>{a.startDate&&a.startDate.isBefore(n)&&(n=a.startDate)}),n.clone()},getMaxDate(e){let n=this.startDate.clone();return e.children.forEach(a=>{a.endDate&&a.endDate.isAfter(n)&&(n=a.endDate)}),n.clone()},isInDepartment(e){return this.isCurrentUserManager?!0:this.isCurrentUserSupervisor?this.user.departments.length===0?!0:e.department_id&&this.user.departments.includes(e.department_id):!1}},watch:{selectedStartDate(){this.startDate=i(this.selectedStartDate);const e=this.startDate.format("YYYY-MM-DD");this.currentProduction.start_date&&this.currentProduction.start_date!==e&&this.editProduction({...this.currentProduction,start_date:e})},selectedEndDate(){this.endDate=i(this.selectedEndDate);const e=this.endDate.format("YYYY-MM-DD");this.currentProduction.end_date&&this.currentProduction.end_date!==e&&this.editProduction({...this.currentProduction,end_date:e})},currentProduction(){this.reset()}},head(){return{title:`${this.currentProduction.name} | ${this.$t("schedule.title")} - Kitsu`}}},N={class:"columns fixed-page"},j={class:"column main-column"},q={class:"flexrow project-dates"},F={class:"flexrow-item"},K={class:"label"},R={class:"flexrow-item field"},W={class:"label"},G={key:0,class:"column side-column is-hidden-mobile hide-small-screen"};function X(e,n,a,d,s,o){const r=m("date-field"),_=m("combobox-number"),h=m("schedule"),y=m("task-info");return b(),P("div",N,[f("div",j,[f("div",q,[f("div",F,[f("label",K,v(e.$t("main.start_date")),1),D(r,{"can-delete":!1,utc:"",modelValue:s.selectedStartDate,"onUpdate:modelValue":n[0]||(n[0]=t=>s.selectedStartDate=t)},null,8,["modelValue"])]),f("div",R,[f("label",W,v(e.$t("main.end_date")),1),D(r,{"can-delete":!1,utc:"",modelValue:s.selectedEndDate,"onUpdate:modelValue":n[1]||(n[1]=t=>s.selectedEndDate=t)},null,8,["modelValue"])]),D(_,{class:"flexrow-item zoom-level",label:e.$t("schedule.zoom_level"),options:s.zoomOptions,modelValue:s.zoomLevel,"onUpdate:modelValue":n[2]||(n[2]=t=>s.zoomLevel=t)},null,8,["label","options","modelValue"])]),D(h,{"start-date":s.startDate,"end-date":s.endDate,hierarchy:s.scheduleItems,"zoom-level":s.zoomLevel,"is-loading":s.loading.schedule,"is-error":s.errors.schedule,"hide-man-days":!0,multiline:e.isTVShow,subchildren:!e.isTVShow,onItemChanged:o.scheduleItemChanged,onEstimationChanged:o.estimationChanged,onRootElementExpanded:o.expandTaskTypeElement},null,8,["start-date","end-date","hierarchy","zoom-level","is-loading","is-error","multiline","subchildren","onItemChanged","onEstimationChanged","onRootElementExpanded"])]),s.currentTask?(b(),P("div",G,[D(y,{task:s.currentTask,"is-loading":!1},null,8,["task"])])):Y("",!0)])}const J=M(L,[["render",X],["__scopeId","data-v-2d36b466"]]);export{J as default};
//# sourceMappingURL=ProductionSchedule-CfNkYPiA.js.map
