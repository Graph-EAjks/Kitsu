{"version":3,"file":"ProductionSchedule-DiDFlw4N.js","sources":["../../node_modules/lucide-vue-next/dist/esm/icons/grip-vertical.js","../../node_modules/lucide-vue-next/dist/esm/icons/list-restart.js","../../src/components/modals/EditScheduleVersionModal.vue","../../src/components/pages/ProductionSchedule.vue"],"sourcesContent":["/**\n * @license lucide-vue-next v0.533.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst GripVertical = createLucideIcon(\"grip-vertical\", [\n  [\"circle\", { cx: \"9\", cy: \"12\", r: \"1\", key: \"1vctgf\" }],\n  [\"circle\", { cx: \"9\", cy: \"5\", r: \"1\", key: \"hp0tcf\" }],\n  [\"circle\", { cx: \"9\", cy: \"19\", r: \"1\", key: \"fkjjf6\" }],\n  [\"circle\", { cx: \"15\", cy: \"12\", r: \"1\", key: \"1tmaij\" }],\n  [\"circle\", { cx: \"15\", cy: \"5\", r: \"1\", key: \"19l28e\" }],\n  [\"circle\", { cx: \"15\", cy: \"19\", r: \"1\", key: \"f4zoj3\" }]\n]);\n\nexport { GripVertical as default };\n//# sourceMappingURL=grip-vertical.js.map\n","/**\n * @license lucide-vue-next v0.533.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ListRestart = createLucideIcon(\"list-restart\", [\n  [\"path\", { d: \"M21 6H3\", key: \"1jwq7v\" }],\n  [\"path\", { d: \"M7 12H3\", key: \"13ou7f\" }],\n  [\"path\", { d: \"M7 18H3\", key: \"1sijw9\" }],\n  [\n    \"path\",\n    {\n      d: \"M12 18a5 5 0 0 0 9-3 4.5 4.5 0 0 0-4.5-4.5c-1.33 0-2.54.54-3.41 1.41L11 14\",\n      key: \"qth677\"\n    }\n  ],\n  [\"path\", { d: \"M11 10v4h4\", key: \"172dkj\" }]\n]);\n\nexport { ListRestart as default };\n//# sourceMappingURL=list-restart.js.map\n","<template>\n  <base-modal active :title=\"modalTitle\" @cancel=\"$emit('cancel')\">\n    <form @submit.prevent>\n      <combobox\n        ref=\"versionCombobox\"\n        :label=\"$t('schedule.fields.create_from_version')\"\n        :options=\"fromVersionOptions\"\n        v-model=\"form.version\"\n        v-if=\"!isEditing\"\n      />\n      <text-field\n        ref=\"nameField\"\n        :label=\"$t('schedule.fields.name')\"\n        :error-text=\"$t('schedule.edit_version_exist')\"\n        :errored=\"errors.name\"\n        :maxlength=\"20\"\n        @enter=\"runConfirmation\"\n        @update:model-value=\"validateName\"\n        v-model.trim=\"form.name\"\n      />\n      <combobox-boolean\n        :label=\"$t('schedule.fields.locked')\"\n        v-model=\"form.locked\"\n        v-if=\"isEditing\"\n      />\n    </form>\n    <modal-footer\n      :error-text=\"$t('schedule.edit_version_error')\"\n      :is-error=\"isError\"\n      :is-loading=\"isLoading\"\n      :is-disabled=\"!isValidForm\"\n      @confirm=\"runConfirmation\"\n      @cancel=\"$emit('cancel')\"\n    />\n  </base-modal>\n</template>\n\n<script setup>\nimport { ref, computed, reactive, onMounted } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport { firstBy } from 'thenby'\n\nimport BaseModal from '@/components/modals/BaseModal.vue'\nimport Combobox from '@/components/widgets/Combobox.vue'\nimport ComboboxBoolean from '@/components/widgets/ComboboxBoolean.vue'\nimport ModalFooter from '@/components/modals/ModalFooter.vue'\nimport TextField from '@/components/widgets/TextField.vue'\n\nconst props = defineProps({\n  isError: {\n    type: Boolean,\n    default: false\n  },\n  isLoading: {\n    type: Boolean,\n    default: false\n  },\n  scheduleVersionToEdit: {\n    type: Object,\n    required: true\n  },\n  version: {\n    type: String,\n    required: true\n  },\n  versionOptions: {\n    type: Array,\n    required: true\n  }\n})\n\nconst emit = defineEmits(['cancel', 'confirm'])\n\nconst { t } = useI18n()\n\nconst form = reactive({\n  id: null,\n  name: '',\n  locked: 'false',\n  version: props.version || ''\n})\n\nconst errors = reactive({\n  name: false\n})\n\nconst versionCombobox = ref(null)\nconst nameField = ref(null)\n\nconst isEditing = computed(() => Boolean(props.scheduleVersionToEdit?.id))\n\nconst isValidForm = computed(() => Boolean(form.name) && !errors.name)\n\nconst modalTitle = computed(() =>\n  isEditing.value ? t('schedule.edit_version') : t('schedule.create_version')\n)\n\nconst fromVersionOptions = computed(() => [\n  {\n    label: t('schedule.fields.new'),\n    value: 'new',\n    separator: true\n  },\n  {\n    label: `${t('schedule.versions.from')} ${t('schedule.versions.reference')}`,\n    value: 'ref',\n    separator: true\n  },\n  ...props.versionOptions\n    .filter(version => !version.canceled)\n    .sort(firstBy('created_at'))\n    .map(version => ({\n      label: `${t('schedule.versions.from')} ${version.name}`,\n      value: version.id\n    }))\n])\n\nfunction validateName(name) {\n  errors.name = false\n  if (!name || props.scheduleVersionToEdit.name === name) {\n    return\n  }\n  const nameAlreadyExist = props.versionOptions\n    .map(version => version.name)\n    .includes(name)\n\n  if (nameAlreadyExist) {\n    errors.name = true\n  }\n}\n\nfunction runConfirmation() {\n  if (!isValidForm.value) {\n    return\n  }\n  const data = {\n    id: props.scheduleVersionToEdit.id ?? null,\n    name: form.name,\n    locked: form.locked === 'true',\n    version: form.version\n  }\n  emit('confirm', data)\n}\n\nonMounted(() => {\n  form.id = props.scheduleVersionToEdit.id || null\n  form.name = props.scheduleVersionToEdit.name || ''\n  form.locked = props.scheduleVersionToEdit.locked ? 'true' : 'false'\n  form.version = props.version || 'new'\n\n  if (isEditing.value) {\n    nameField.value?.focus()\n  } else {\n    versionCombobox.value?.focus()\n  }\n})\n</script>\n","<template>\n  <div class=\"columns fixed-page\">\n    <div class=\"column main-column\">\n      <div class=\"flexrow project-dates\">\n        <div class=\"flexrow-item\">\n          <date-field\n            :can-delete=\"false\"\n            :label=\"$t('main.start_date')\"\n            utc\n            v-model=\"selectedStartDate\"\n          />\n        </div>\n        <div class=\"flexrow-item\">\n          <date-field\n            :can-delete=\"false\"\n            :label=\"$t('main.end_date')\"\n            utc\n            v-model=\"selectedEndDate\"\n          />\n        </div>\n        <combobox-number\n          class=\"flexrow-item zoom-level nowrap\"\n          :label=\"$t('schedule.zoom_level')\"\n          :options=\"zoomOptions\"\n          v-model=\"zoomLevel\"\n        />\n        <combobox\n          class=\"flexrow-item ml1\"\n          :label=\"$t('schedule.mode')\"\n          v-model=\"mode\"\n          :options=\"modeOptions\"\n          @update:model-value=\"onModeChanged\"\n        />\n        <div class=\"flexrow-item ml1\" v-if=\"mode === 'prev'\">\n          <label class=\"label\">\n            {{ $t('schedule.version') }}\n          </label>\n          <div class=\"flexrow\">\n            <combobox\n              class=\"flexrow-item\"\n              v-model=\"version\"\n              :options=\"versionOptions\"\n              @update:model-value=\"onVersionChanged\"\n            />\n            <button-simple\n              class=\"ml05\"\n              icon=\"calendar-plus\"\n              :title=\"$t('schedule.new_version')\"\n              @click=\"openEditScheduleVersion()\"\n            />\n            <button-simple\n              class=\"ml05\"\n              :disabled=\"version === 'ref'\"\n              icon=\"pencil\"\n              :title=\"$t('schedule.edit_version')\"\n              @click=\"openEditScheduleVersion(currentVersion)\"\n            />\n            <button-simple\n              class=\"ml05\"\n              :disabled=\"version === 'ref'\"\n              icon=\"trash\"\n              :title=\"$t('schedule.delete_version')\"\n              @click=\"openDeleteScheduleVersion(version)\"\n            />\n          </div>\n        </div>\n        <div class=\"filler\"></div>\n        <div class=\"flexrow\" style=\"margin-top: 23px\">\n          <button-simple\n            class=\"flexrow-item\"\n            :disabled=\"version === 'ref'\"\n            icon=\"save\"\n            :text=\"$t('schedule.apply_to_prod')\"\n            @click=\"modals.applyScheduleVersion = true\"\n            v-if=\"!isTVShow && mode === 'prev'\"\n          />\n          <button-simple\n            class=\"flexrow-item\"\n            icon=\"clock\"\n            :text=\"$t('schedule.today')\"\n            @click=\"scrollScheduleToToday\"\n          />\n          <button-simple\n            :active=\"isSidePanelOpen && assignments.type !== 'task'\"\n            class=\"flexrow-item\"\n            :disabled=\"isLockedSchedule\"\n            icon=\"list\"\n            :text=\"$t('menu.assign_tasks')\"\n            @click=\"toggleSidePanel\"\n            v-if=\"!isTVShow\"\n          />\n        </div>\n      </div>\n\n      <schedule\n        ref=\"schedule\"\n        :start-date=\"startDate\"\n        :end-date=\"endDate\"\n        :hierarchy=\"scheduleItems\"\n        :zoom-level=\"zoomLevel\"\n        :is-loading=\"loading.schedule\"\n        :is-error=\"errors.schedule\"\n        is-estimation-linked\n        hide-man-days\n        :multiline=\"isTVShow\"\n        :reassignable=\"!isLockedSchedule\"\n        :subchildren=\"!isTVShow\"\n        :type=\"mode\"\n        @item-assign=\"onScheduleItemAssigned\"\n        @item-changed=\"onScheduleItemChanged\"\n        @item-drop=\"onScheduleItemDropped\"\n        @item-selected=\"selectTaskTypeElement\"\n        @item-unassign=\"onScheduleItemUnassigned\"\n        @root-element-expanded=\"expandTaskTypeElement\"\n        @root-element-selected=\"selectParentElement\"\n        @task-selected=\"selectTaskElement\"\n        @task-unselected=\"closeSidePanel()\"\n      />\n    </div>\n\n    <div\n      class=\"column side-column\"\n      v-if=\"isSidePanelOpen && !isLockedSchedule && !isTVShow\"\n    >\n      <div class=\"side\">\n        <a class=\"close-button\" @click=\"toggleSidePanel\">\n          <x-icon class=\"align-middle\" :size=\"16\" />\n        </a>\n        <h2 class=\"mt1\">\n          {{\n            assignments.type === 'task'\n              ? $t('schedule.edit_task')\n              : $t('menu.assign_tasks')\n          }}\n        </h2>\n        <div class=\"details\">\n          <combobox-task-type\n            class=\"mb05\"\n            add-placeholder\n            :placeholder=\"$t('schedule.select_task_type')\"\n            :label=\"$t('news.task_type')\"\n            :task-type-list=\"availableTaskTypes\"\n            :model-value=\"selectedTaskType?.task_type_id\"\n            @update:model-value=\"onSelectTaskType\"\n          />\n          <button-simple\n            class=\"mt2 mb05\"\n            icon=\"user-check\"\n            :is-on=\"assignments.assigned\"\n            :title=\"$t('schedule.show_assigned')\"\n            @click=\"assignments.assigned = !assignments.assigned\"\n            v-if=\"\n              !assignments.loading &&\n              assignments.entityTypes?.length &&\n              !assignments.type\n            \"\n          />\n        </div>\n        <div class=\"mt2\" v-if=\"assignments.loading\">\n          <spinner class=\"mauto\" :size=\"20\" />\n        </div>\n        <ul class=\"assignments parent mt1\" v-else-if=\"!assignments.type\">\n          <li\n            :key=\"entityType.id\"\n            v-for=\"entityType in assignments.entityTypes\"\n          >\n            <div\n              class=\"assignment-item\"\n              draggable=\"true\"\n              @dragstart=\"\n                onAssignmentItemDragStart($event, entityType, selectedTaskType)\n              \"\n              @click=\"onAssignmentItemSelected(entityType)\"\n            >\n              <grip-vertical-icon class=\"icon\" />\n              <span class=\"name\">\n                {{ entityType.name }}\n                ({{ filteredAssignments(entityType.children).length }})\n              </span>\n              <span\n                class=\"expand\"\n                @click.stop=\"entityType.expanded = !entityType.expanded\"\n              >\n                <chevron-right-icon v-if=\"!entityType.expanded\" />\n                <chevron-down-icon v-else />\n              </span>\n            </div>\n            <ul class=\"assignments children\" v-if=\"entityType.expanded\">\n              <li\n                :key=\"child.id\"\n                v-for=\"child in filteredAssignments(entityType.children)\"\n              >\n                <div\n                  class=\"assignment-item\"\n                  draggable=\"true\"\n                  @dragstart=\"\n                    onAssignmentItemDragStart(\n                      $event,\n                      { ...entityType, children: [child] },\n                      selectedTaskType\n                    )\n                  \"\n                  @click=\"\n                    onAssignmentItemSelected({\n                      ...entityType,\n                      children: [child]\n                    })\n                  \"\n                >\n                  <grip-vertical-icon class=\"icon\" />\n                  <span class=\"name\">{{ child.name }}</span>\n                </div>\n              </li>\n            </ul>\n          </li>\n        </ul>\n        <div class=\"assignments mt1\" v-else>\n          <form class=\"mt1\" @submit.prevent=\"submitAssignments()\">\n            <div class=\"flexrow\">\n              <div class=\"flexrow-item\">\n                <date-field\n                  :can-delete=\"false\"\n                  :disabled=\"assignments.type !== 'entity'\"\n                  :label=\"$t('main.start_date')\"\n                  utc\n                  v-model=\"assignments.startDate\"\n                />\n              </div>\n              <div class=\"flexrow-item\">\n                <date-field\n                  :can-delete=\"false\"\n                  :disabled=\"assignments.type !== 'entity'\"\n                  :label=\"$t('main.end_date')\"\n                  utc\n                  v-model=\"assignments.endDate\"\n                />\n              </div>\n            </div>\n            <div :key=\"item.id\" v-for=\"item in draggedEntities\">\n              <div\n                class=\"dragged-type\"\n                :style=\"{\n                  background: selectedTaskType.color\n                }\"\n              >\n                {{ item.name }}\n              </div>\n              <div v-if=\"!item.children.length\">\n                {{ $t('schedule.no_entity') }}\n              </div>\n              <ul class=\"dragged-items\" v-else>\n                <li\n                  class=\"dragged-item\"\n                  :key=\"child.id\"\n                  :style=\"{\n                    background: `color-mix(in srgb, ${selectedTaskType.color} 40%, transparent)`,\n                    'border-left': `4px solid ${selectedTaskType.color}`\n                  }\"\n                  v-for=\"child in item.children\"\n                >\n                  {{ item.name }} / {{ child.name }}\n                </li>\n              </ul>\n              <hr />\n            </div>\n            <table class=\"assignees\">\n              <thead>\n                <tr>\n                  <td>\n                    {{ $t('schedule.assign') }}\n                    <a\n                      class=\"reset-assignees\"\n                      :title=\"$t('schedule.reset_list')\"\n                      @click=\"assignments.excludes = []\"\n                      v-if=\"assignments.excludes.length\"\n                    >\n                      <list-restart-icon\n                        class=\"align-middle\"\n                        :size=\"18\"\n                        :stroke-width=\"1.5\"\n                      />\n                    </a>\n                  </td>\n                </tr>\n              </thead>\n              <tbody v-if=\"!availablePersons.length\">\n                <tr>\n                  <td class=\"has-text-centered\">\n                    {{ $t('schedule.no_assignee') }}\n                  </td>\n                </tr>\n              </tbody>\n              <tbody v-else>\n                <tr :key=\"person.id\" v-for=\"person in availablePersons\">\n                  <td class=\"assignee\">\n                    <div class=\"person\">\n                      <people-avatar\n                        :is-link=\"false\"\n                        :font-size=\"14\"\n                        :person=\"person\"\n                        :size=\"28\"\n                      />\n                      <people-name :person=\"person\" />\n                    </div>\n                    <button-simple\n                      class=\"is-small\"\n                      icon=\"minus\"\n                      :title=\"\n                        $t('main.avatar.unassign', {\n                          personName: person.name\n                        })\n                      \"\n                      type=\"button\"\n                      @click=\"removeFromAssignments(person)\"\n                    />\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <checkbox\n              class=\"pa05\"\n              :disabled=\"!availablePersons.length\"\n              :label=\"$t('schedule.force_unassign')\"\n              :toggle=\"true\"\n              v-model=\"assignments.unassign\"\n              v-if=\"assignments.type === 'entity'\"\n            />\n            <div class=\"flexrow mt2\" v-if=\"assignments.type === 'entity'\">\n              <label class=\"mr05\">\n                {{ $t('schedule.forced_daily_quotas') }}\n              </label>\n              <text-field\n                class=\"mb0 daily-quotas\"\n                input-class=\" is-small\"\n                :step=\"0.01\"\n                type=\"number\"\n                v-model=\"assignments.forcedDailyQuota\"\n              />\n              <a\n                class=\"reset-quotas ml05\"\n                @click=\"assignments.forcedDailyQuota = null\"\n                v-if=\"assignments.forcedDailyQuota\"\n              >\n                <trash-icon class=\"align-middle\" :size=\"14\" />\n              </a>\n            </div>\n            <div class=\"mt2\" v-if=\"assignments.type === 'entity'\">\n              {{ $t('schedule.estimated_daily_quotas') }}\n              {{ estimatedDailyQuota.toFixed(2) }}\n            </div>\n            <div class=\"flexrow mt2\" v-if=\"assignments.type === 'task'\">\n              <div class=\"flexrow-item\">\n                <date-field\n                  :can-delete=\"false\"\n                  :label=\"$t('main.start_date')\"\n                  utc\n                  :with-margin=\"false\"\n                  v-model=\"assignments.task.startDate\"\n                />\n              </div>\n              <div class=\"flexrow-item\">\n                <date-field\n                  :can-delete=\"false\"\n                  disabled\n                  :label=\"$t('main.end_date')\"\n                  utc\n                  :with-margin=\"false\"\n                  v-model=\"assignments.task.endDate\"\n                />\n              </div>\n            </div>\n            <div class=\"flexrow mt2\" v-if=\"assignments.type === 'task'\">\n              <text-field\n                class=\"mb0 estimation mr05\"\n                input-class=\" thin\"\n                :label=\"$t('main.estimation')\"\n                :step=\"0.01\"\n                placeholder=\"0.00\"\n                type=\"number\"\n                :unit-label=\"$t('schedule.md')\"\n                v-model=\"assignments.task.estimation\"\n              />\n            </div>\n            <div class=\"mt2 has-text-right\">\n              <template v-if=\"assignments.type === 'entity'\">\n                <button-simple\n                  :disabled=\"!hasDraggedEntities || !availablePersons.length\"\n                  :is-loading=\"assignments.saving\"\n                  is-primary\n                  :text=\"$t('main.apply')\"\n                  type=\"submit\"\n                />\n                <button\n                  class=\"button is-link ml05\"\n                  :disabled=\"assignments.saving\"\n                  :text=\"$t('main.back')\"\n                  type=\"button\"\n                  @click=\"assignments.type = null\"\n                >\n                  {{ $t('main.back') }}\n                </button>\n              </template>\n              <template v-if=\"assignments.type === 'task'\">\n                <button-simple\n                  :disabled=\"!assignments.task.estimation\"\n                  :is-loading=\"assignments.saving\"\n                  is-primary\n                  :text=\"$t('main.apply')\"\n                  type=\"submit\"\n                />\n                <button class=\"button is-link ml05\" @click=\"closeSidePanel()\">\n                  {{ $t('main.cancel') }}\n                </button>\n              </template>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <edit-schedule-version-modal\n    :schedule-version-to-edit=\"scheduleVersionToEdit\"\n    :version=\"version\"\n    :version-options=\"scheduleVersions\"\n    :is-loading=\"loading.editScheduleVersion\"\n    :is-error=\"errors.editScheduleVersion\"\n    @cancel=\"modals.editScheduleVersion = false\"\n    @confirm=\"editVersion\"\n    v-if=\"modals.editScheduleVersion\"\n  />\n\n  <hard-delete-modal\n    active\n    :error-text=\"$t('schedule.delete_version_error')\"\n    :is-loading=\"loading.delete\"\n    :is-error=\"errors.deleteScheduleVersion\"\n    :lock-text=\"scheduleVersionToEdit?.name\"\n    :text=\"$t('schedule.delete_version_message')\"\n    @cancel=\"modals.deleteScheduleVersion = false\"\n    @confirm=\"deleteVersion(scheduleVersionToEdit)\"\n    v-if=\"modals.deleteScheduleVersion\"\n  />\n\n  <confirm-modal\n    active\n    :text=\"$t('schedule.apply_to_prod_confirm')\"\n    :error-text=\"$t('schedule.apply_to_prod_error')\"\n    :is-loading=\"loading.applyScheduleVersion\"\n    :is-error=\"errors.applyScheduleVersion\"\n    @cancel=\"modals.applyScheduleVersion = false\"\n    @confirm=\"applyToProduction()\"\n    v-if=\"modals.applyScheduleVersion\"\n  />\n</template>\n\n<script>\n/*\n * Page to manage the schedule of the big steps of the production. It allows\n * to set milestones too.\n */\n\nimport {\n  ChevronDownIcon,\n  ChevronRightIcon,\n  GripVerticalIcon,\n  ListRestartIcon,\n  TrashIcon,\n  XIcon\n} from 'lucide-vue-next'\nimport moment from 'moment-timezone'\nimport { firstBy } from 'thenby'\nimport { mapGetters, mapActions } from 'vuex'\n\nimport { getTaskTypeSchedulePath } from '@/lib/path'\nimport {\n  sortByName,\n  sortPeople,\n  sortTaskTypeScheduleItems\n} from '@/lib/sorting'\nimport {\n  addBusinessDays,\n  daysToMinutes,\n  getBusinessDays,\n  getDatesFromStartDate,\n  minutesToDays,\n  parseDate,\n  parseSimpleDate\n} from '@/lib/time'\n\nimport ButtonSimple from '@/components/widgets/ButtonSimple.vue'\nimport Checkbox from '@/components/widgets/Checkbox.vue'\nimport Combobox from '@/components/widgets/Combobox.vue'\nimport ComboboxNumber from '@/components/widgets/ComboboxNumber.vue'\nimport ComboboxTaskType from '@/components/widgets/ComboboxTaskType.vue'\nimport ConfirmModal from '@/components/modals/ConfirmModal.vue'\nimport DateField from '@/components/widgets/DateField.vue'\nimport EditScheduleVersionModal from '@/components/modals/EditScheduleVersionModal.vue'\nimport HardDeleteModal from '@/components/modals/HardDeleteModal.vue'\nimport PeopleAvatar from '@/components/widgets/PeopleAvatar.vue'\nimport PeopleName from '@/components/widgets/PeopleName.vue'\nimport Schedule from '@/components/widgets/Schedule.vue'\nimport Spinner from '@/components/widgets/Spinner.vue'\nimport TextField from '@/components/widgets/TextField.vue'\n\nimport assetStore from '@/store/modules/assets'\nimport assetTypeStore from '@/store/modules/assettypes'\nimport shotStore from '@/store/modules/shots'\nimport taskTypeStore from '@/store/modules/tasktypes'\n\nexport default {\n  name: 'production-schedule',\n\n  components: {\n    ButtonSimple,\n    Checkbox,\n    ChevronDownIcon,\n    ChevronRightIcon,\n    Combobox,\n    ComboboxNumber,\n    ComboboxTaskType,\n    ConfirmModal,\n    DateField,\n    EditScheduleVersionModal,\n    GripVerticalIcon,\n    HardDeleteModal,\n    ListRestartIcon,\n    PeopleAvatar,\n    PeopleName,\n    Schedule,\n    Spinner,\n    TrashIcon,\n    TextField,\n    XIcon\n  },\n\n  data() {\n    return {\n      assignments: {\n        assigned: false,\n        entityTypes: null,\n        excludes: [],\n        forcedDailyQuota: null,\n        loading: false,\n        saving: false,\n        startDate: null,\n        endDate: null,\n        task: {},\n        type: null,\n        unassign: false\n      },\n      availableTaskTypes: [],\n      daysOffByPerson: [],\n      draggedEntities: [],\n      endDate: moment().add(6, 'months').endOf('day'),\n      isSidePanelOpen: false,\n      scheduleItems: [],\n      startDate: moment().startOf('day'),\n      selectedStartDate: null,\n      selectedEndDate: null,\n      selectedTaskType: null,\n      zoomLevel: 1,\n      zoomOptions: [\n        { label: this.$t('main.week'), value: 0 },\n        { label: '1', value: 1 },\n        { label: '2', value: 2 },\n        { label: '3', value: 3 }\n      ],\n      mode: 'prev',\n      modeOptions: [\n        { label: this.$t('schedule.mode_prev'), value: 'prev' },\n        { label: this.$t('schedule.mode_real'), value: 'real' }\n      ],\n      scheduleVersionToEdit: {},\n      version: 'ref',\n      loading: {\n        schedule: false,\n        editScheduleVersion: false,\n        applyScheduleVersion: false\n      },\n      errors: {\n        schedule: false,\n        editScheduleVersion: false,\n        deleteScheduleVersion: false,\n        applyScheduleVersion: false\n      },\n      modals: {\n        editScheduleVersion: false,\n        deleteScheduleVersion: false,\n        applyScheduleVersion: false\n      }\n    }\n  },\n\n  mounted() {\n    this.reset()\n  },\n\n  computed: {\n    ...mapGetters([\n      'currentEpisode',\n      'currentProduction',\n      'isCurrentUserManager',\n      'isCurrentUserSupervisor',\n      'isTVShow',\n      'organisation',\n      'personMap',\n      'productionAssetTypes',\n      'scheduleVersions',\n      'user'\n    ]),\n\n    estimatedDailyQuota() {\n      const startDate = parseSimpleDate(this.assignments.startDate)\n      const endDate = parseSimpleDate(this.assignments.endDate)\n      const nbDays = getBusinessDays(startDate, endDate)\n      const nbEntities = this.draggedEntities.reduce(\n        (sum, entity) => sum + (entity.children?.length ?? 0),\n        0\n      )\n      const nbAssignees = this.availablePersons.length\n\n      return nbDays && nbAssignees ? nbEntities / nbDays / nbAssignees : 0\n    },\n\n    assetMap() {\n      return assetStore.cache.assetMap\n    },\n\n    assets() {\n      return assetStore.cache.assets\n    },\n\n    assetTypeMap() {\n      return assetTypeStore.cache.assetTypeMap\n    },\n\n    availablePersons() {\n      const taskType = this.taskTypeMap.get(this.selectedTaskType.task_type_id)\n      return this.team.filter(\n        person =>\n          !this.assignments.excludes.includes(person.id) &&\n          person.role !== 'client' &&\n          (['admin', 'manager'].includes(person.role) ||\n            !person.departments.length ||\n            person.departments.includes(taskType?.department_id))\n      )\n    },\n\n    currentVersion() {\n      return this.scheduleVersions.find(version => version.id === this.version)\n    },\n\n    hasDraggedEntities() {\n      return this.draggedEntities.some(entity => entity.children.length)\n    },\n\n    isLockedSchedule() {\n      return (\n        this.mode === 'real' ||\n        this.currentVersion?.locked ||\n        !this.isCurrentUserManager\n      )\n    },\n\n    shotMap() {\n      return shotStore.cache.shotMap\n    },\n\n    shots() {\n      return shotStore.cache.shots\n    },\n\n    taskTypeMap() {\n      return taskTypeStore.cache.taskTypeMap\n    },\n\n    team() {\n      return sortPeople(\n        this.currentProduction.team\n          .map(personId => this.personMap.get(personId))\n          .filter(person => person && !person.is_bot)\n      )\n    },\n\n    isVersioned() {\n      return this.mode === 'prev' && this.version !== 'ref'\n    },\n\n    versionOptions() {\n      const options = this.scheduleVersions\n        .filter(version => !version.canceled)\n        .sort(firstBy('created_at'))\n        .map(version => ({\n          label: version.locked\n            ? `${version.name} (${this.$t('schedule.versions.locked')})`\n            : version.name,\n          value: version.id\n        }))\n\n      const fromScheduleVersion = this.scheduleVersions.find(\n        version =>\n          version.id === this.currentProduction.from_schedule_version_id\n      )\n      const referenceVersion = {\n        label: fromScheduleVersion\n          ? `${this.$t('schedule.versions.reference')} (${this.$t('schedule.versions.from')} ${fromScheduleVersion.name})`\n          : this.$t('schedule.versions.reference'),\n        value: 'ref',\n        separator: true\n      }\n\n      return [referenceVersion, ...options]\n    }\n  },\n\n  methods: {\n    ...mapActions([\n      'applyScheduleVersionToProduction',\n      'assignSelectedTasks',\n      'createScheduleVersion',\n      'createScheduleVersionedTask',\n      'deleteScheduleVersion',\n      'editProduction',\n      'loadAggregatedPersonDaysOff',\n      'loadAssets',\n      'loadAssetTypeScheduleItems',\n      'loadEpisodeScheduleItems',\n      'loadScheduleItems',\n      'loadScheduleVersions',\n      'loadSequenceScheduleItems',\n      'loadShots',\n      'loadTasks',\n      'loadTasksFromScheduleVersion',\n      'saveScheduleItem',\n      'unassignPersonFromTask',\n      'unassignSelectedTasks',\n      'updateScheduleVersion',\n      'updateScheduleVersionedTask',\n      'updateTask'\n    ]),\n\n    async loadData() {\n      this.loading.schedule = true\n      this.availableTaskTypes = []\n\n      await this.loadScheduleVersions()\n\n      return this.loadScheduleItems(this.currentProduction)\n        .then(scheduleItems => {\n          const scheduleStartDate = parseDate(this.selectedStartDate)\n          const scheduleEndDate = parseDate(this.selectedEndDate)\n          scheduleItems = scheduleItems.map(item => {\n            const taskType = this.taskTypeMap.get(item.task_type_id)\n            let startDate, endDate\n            if (item.start_date) {\n              startDate = parseDate(item.start_date)\n            } else {\n              startDate = moment()\n            }\n            if (startDate.isSameOrAfter(scheduleEndDate)) {\n              startDate = scheduleEndDate.clone().add(-1, 'days')\n            }\n\n            if (startDate.isBefore(scheduleStartDate)) {\n              startDate = scheduleStartDate.clone()\n            }\n\n            if (item.end_date) {\n              endDate = parseDate(item.end_date)\n            } else {\n              endDate = startDate.clone().add(1, 'days')\n            }\n            if (endDate.isSameOrAfter(scheduleEndDate)) {\n              endDate = scheduleEndDate.clone()\n            }\n\n            const path = getTaskTypeSchedulePath(\n              taskType.id,\n              this.currentProduction.id,\n              this.currentEpisode ? this.currentEpisode.id : null,\n              taskType.for_entity\n            )\n\n            return {\n              ...item,\n              color: taskType.color,\n              for_entity: taskType.for_entity,\n              name: `${taskType.for_entity} / ${taskType.name}`,\n              priority: taskType.priority,\n              startDate,\n              endDate,\n              editable: this.isInDepartment(taskType) && !this.isLockedSchedule,\n              expanded: false,\n              loading: false,\n              route:\n                taskType.for_entity === 'Shot' && this.isTVShow ? null : path,\n              children: []\n            }\n          })\n          this.scheduleItems = sortTaskTypeScheduleItems(\n            scheduleItems,\n            this.currentProduction,\n            this.taskTypeMap\n          )\n\n          this.availableTaskTypes = this.scheduleItems.map(item => ({\n            ...this.taskTypeMap.get(item.task_type_id),\n            name: item.name\n          }))\n\n          this.loading.schedule = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.loading.schedule = false\n        })\n    },\n\n    async reset() {\n      this.closeSidePanel()\n\n      if (this.currentProduction.start_date) {\n        this.startDate = parseDate(this.currentProduction.start_date)\n      }\n      if (this.currentProduction.end_date) {\n        this.endDate = parseDate(this.currentProduction.end_date)\n      }\n      this.selectedStartDate = this.startDate.toDate()\n      this.selectedEndDate = this.endDate.toDate()\n      this.version = 'ref'\n      await this.loadData()\n    },\n\n    convertScheduleItems(taskTypeElement, scheduleItems) {\n      return scheduleItems.map(item => {\n        let startDate\n        if (item.start_date) {\n          startDate = parseDate(item.start_date)\n        } else {\n          startDate = moment()\n        }\n        if (startDate.isBefore(this.startDate)) {\n          startDate = this.startDate.clone()\n        }\n        if (startDate.isAfter(this.endDate)) {\n          startDate = this.endDate.clone()\n        }\n        let endDate\n        if (item.end_date) {\n          endDate = parseDate(item.end_date)\n        } else {\n          endDate = startDate.clone().add(1, 'days')\n        }\n        if (endDate.isBefore(startDate)) {\n          endDate = startDate.clone().add(1, 'days')\n        }\n        if (endDate.isAfter(this.endDate)) {\n          endDate = this.endDate.clone()\n        }\n        const scheduleItem = {\n          ...item,\n          startDate,\n          endDate,\n          expanded: false,\n          loading: false,\n          editable:\n            this.isInDepartment(this.taskTypeMap.get(item.task_type_id)) &&\n            !this.isLockedSchedule,\n          children: [],\n          parentElement: taskTypeElement\n        }\n        if (this.isTVShow) {\n          scheduleItem.route = getTaskTypeSchedulePath(\n            item.task_type_id,\n            this.currentProduction.id,\n            item.object_id,\n            taskTypeElement.for_entity\n          )\n        }\n        return scheduleItem\n      })\n    },\n\n    async expandTaskTypeElement(\n      taskTypeElement,\n      refreshScheduleCallBack = null,\n      expanded = false,\n      resetAssignments = true\n    ) {\n      taskTypeElement.expanded = expanded || !taskTypeElement.expanded\n\n      if (taskTypeElement.expanded) {\n        try {\n          taskTypeElement.loading = true\n\n          this.selectedTaskType = !this.isTVShow ? taskTypeElement : null\n          this.assignments.loading = resetAssignments\n\n          taskTypeElement.children = []\n          taskTypeElement.people = {}\n          taskTypeElement.entitiesByType = {}\n\n          const loadScheduleItems = this.isTVShow\n            ? ['Asset', 'Shot'].includes(taskTypeElement.for_entity)\n              ? this.loadEpisodeScheduleItems\n              : this.loadSequenceScheduleItems\n            : taskTypeElement.for_entity === 'Shot'\n              ? this.loadSequenceScheduleItems\n              : this.loadAssetTypeScheduleItems\n          const parameters = {\n            production: this.currentProduction,\n            taskType: this.taskTypeMap.get(taskTypeElement.task_type_id)\n          }\n          const scheduleItems = await loadScheduleItems(parameters)\n\n          let children = this.convertScheduleItems(\n            taskTypeElement,\n            scheduleItems\n          )\n          const childrenById = new Map(\n            children.map(child => [child.object_id, child])\n          )\n\n          if (this.isTVShow) {\n            taskTypeElement.children = children\n          } else {\n            // load entities\n            if (taskTypeElement.for_entity === 'Asset') {\n              await this.loadAssets({ withShared: false, withTasks: false })\n            }\n            if (taskTypeElement.for_entity === 'Shot') {\n              await this.loadShots()\n            }\n\n            let tasks = await this.loadTasks({\n              project_id: this.currentProduction.id,\n              task_type_id: taskTypeElement.task_type_id,\n              relations: 'true'\n            })\n\n            // Update tasks for versioned schedules\n            if (this.isVersioned) {\n              const taskType = this.taskTypeMap.get(\n                taskTypeElement.task_type_id\n              )\n              const versionedTasks = await this.loadTasksFromScheduleVersion({\n                version: { id: this.version },\n                taskType\n              })\n              const versionedTaskMap = new Map(\n                versionedTasks.map(versionedTask => [\n                  versionedTask.task_id,\n                  versionedTask\n                ])\n              )\n              tasks = tasks\n                .map(task => {\n                  const versioned = versionedTaskMap.get(task.id)\n                  if (!versioned?.start_date) {\n                    return null\n                  }\n                  return {\n                    ...task,\n                    versionedTaskId: versioned.id,\n                    start_date: versioned.start_date,\n                    due_date: versioned.due_date,\n                    estimation: versioned.estimation,\n                    assignees: versioned.assignees\n                  }\n                })\n                .filter(Boolean)\n            }\n\n            // load days off of assignees\n            const personIds = [\n              ...new Set(tasks.flatMap(task => task.assignees))\n            ]\n            await this.loadDaysOff(personIds)\n\n            // group tasks by entity type and assignee\n            const tasksByType = {}\n            const people = {}\n            tasks.forEach(task => {\n              if (!task.start_date) {\n                return\n              }\n\n              // link entity to task\n              if (taskTypeElement.for_entity === 'Asset') {\n                task.entity = this.assetMap.get(task.entity_id)\n                task.entity_type_id = task.entity.asset_type_id\n              } else if (taskTypeElement.for_entity === 'Shot') {\n                task.entity = this.shotMap.get(task.entity_id)\n                task.entity_type_id = task.entity.sequence_id\n              } else {\n                task.entity_type_id = taskTypeElement.for_entity\n              }\n              if (task.entity?.canceled) {\n                return\n              }\n\n              if (!tasksByType[task.entity_type_id]) {\n                tasksByType[task.entity_type_id] = {}\n              }\n\n              if (!task.assignees.length) {\n                task.assignees = ['unassigned']\n              }\n\n              task.assignees.forEach(assigneeId => {\n                const entityTypeItem = childrenById.get(task.entity_type_id)\n\n                // populate task with start and end dates\n\n                let startDate\n                if (this.mode === 'real') {\n                  if (!task.real_start_date) {\n                    return\n                  }\n                  startDate = parseDate(task.real_start_date)\n                } else {\n                  startDate = parseDate(task.start_date)\n                }\n                if (startDate.isAfter(this.endDate)) {\n                  return\n                }\n                if (startDate.isBefore(entityTypeItem.startDate)) {\n                  entityTypeItem.startDate = startDate.clone()\n                }\n                task.startDate = startDate\n\n                let endDate\n                if (this.mode === 'real') {\n                  endDate = task.done_date\n                    ? parseDate(task.done_date)\n                    : moment.tz()\n                } else if (task.due_date) {\n                  endDate = parseDate(task.due_date)\n                } else if (task.end_date) {\n                  endDate = parseDate(task.end_date)\n                } else if (task.estimation) {\n                  endDate = addBusinessDays(\n                    task.startDate,\n                    Math.ceil(\n                      minutesToDays(this.organisation, task.estimation)\n                    ) - 1,\n                    this.daysOffByPerson[assigneeId]\n                  )\n                }\n                if (!endDate || endDate.isBefore(startDate)) {\n                  const nbDays = startDate.isoWeekday() === 5 ? 3 : 1\n                  endDate = startDate.clone().add(nbDays, 'days')\n                }\n                if (!endDate.isSameOrAfter(startDate)) {\n                  const nbDays = startDate.isoWeekday() === 5 ? 3 : 1\n                  endDate = startDate.clone().add(nbDays, 'days')\n                }\n                if (endDate.isBefore(this.startDate)) {\n                  return\n                }\n                if (endDate.isAfter(entityTypeItem.endDate)) {\n                  entityTypeItem.endDate = endDate.clone()\n                }\n                task.endDate = endDate\n\n                if (!tasksByType[task.entity_type_id][assigneeId]) {\n                  tasksByType[task.entity_type_id][assigneeId] = []\n                  people[assigneeId] =\n                    assigneeId !== 'unassigned'\n                      ? {\n                          ...this.personMap.get(assigneeId),\n                          daysOff: this.daysOffByPerson[assigneeId]\n                        }\n                      : {\n                          id: assigneeId,\n                          avatar: false,\n                          color: '#888',\n                          full_name: this.$t('main.unassigned')\n                        }\n                }\n\n                task.editable = !this.isLockedSchedule\n                task.unresizable = false\n                task.parentElement = entityTypeItem\n\n                tasksByType[task.entity_type_id][assigneeId].push(task)\n              })\n            })\n\n            if (taskTypeElement.for_entity === 'Asset') {\n              // filtering following custom asset types workflow\n              children = children.filter(item => {\n                const assetType = this.assetTypeMap.get(item.object_id)\n                return (\n                  assetType &&\n                  (!assetType.task_types.length ||\n                    assetType.task_types.includes(taskTypeElement.task_type_id))\n                )\n              })\n            }\n\n            // sort grouped tasks\n            const sortEntitiesByUserName = ([keyA], [keyB]) => {\n              if (keyA === 'unassigned') return 1\n              if (keyB === 'unassigned') return -1\n              return people[keyA].full_name.localeCompare(\n                people[keyB].full_name\n              )\n            }\n            const sortTasksByEntityName = (a, b) =>\n              a.entity?.name.localeCompare(b.entity?.name, undefined, {\n                numeric: true\n              })\n            children.forEach(child => {\n              const items = tasksByType[child.object_id] || {}\n              const sortedChildren = new Map(\n                Object.entries(items)\n                  .sort(sortEntitiesByUserName)\n                  .map(([key, tasks]) => [\n                    key,\n                    tasks.sort(sortTasksByEntityName)\n                  ])\n              )\n\n              child.children = sortedChildren\n            })\n\n            taskTypeElement.children = sortByName(children)\n            taskTypeElement.people = people\n\n            // group all assigned entities by type\n            taskTypeElement.entitiesByType = Object.fromEntries(\n              Object.entries(tasksByType).map(([entityTypeId, byAssignee]) => [\n                entityTypeId,\n                Object.entries(byAssignee)\n                  .flatMap(([assignee, items]) =>\n                    assignee !== 'unassigned'\n                      ? items.map(item => item.entity_id)\n                      : undefined\n                  )\n                  .filter(Boolean)\n              ])\n            )\n          }\n        } catch (err) {\n          console.error(err)\n          taskTypeElement.children = []\n          taskTypeElement.people = []\n        } finally {\n          taskTypeElement.loading = false\n        }\n\n        if (refreshScheduleCallBack) {\n          refreshScheduleCallBack(taskTypeElement)\n        }\n\n        this.selectTaskTypeElement(taskTypeElement, null, resetAssignments)\n      }\n    },\n\n    async loadDaysOff(personIds) {\n      this.daysOffByPerson = []\n      for (const personId of personIds) {\n        // load sequentially to avoid too many requests\n        const daysOff = await this.loadAggregatedPersonDaysOff({\n          personId\n        }).catch(\n          () => [] // fallback if not allowed to fetch days off\n        )\n        this.daysOffByPerson[personId] = daysOff\n      }\n    },\n\n    filteredAssignments(items) {\n      return this.assignments.assigned\n        ? items\n        : items.filter(item => !item.assigned)\n    },\n\n    saveTaskChanged(task) {\n      if (this.isVersioned) {\n        return this.updateScheduleVersionedTask({\n          id: task.versionedTaskId,\n          estimation: task.estimation,\n          startDate: task.startDate.format('YYYY-MM-DD'),\n          dueDate: task.endDate.format('YYYY-MM-DD'),\n          assignees: task.assignees\n        })\n      } else {\n        return this.updateTask({\n          taskId: task.id,\n          data: {\n            estimation: task.estimation,\n            start_date: task.startDate.format('YYYY-MM-DD'),\n            due_date: task.endDate.format('YYYY-MM-DD')\n          }\n        })\n      }\n    },\n\n    async onScheduleItemChanged(item) {\n      if (item.type === 'Task') {\n        // update dates with weekends and days off\n        const daysOff = item.assignees\n          .flatMap(assigneeId => this.daysOffByPerson[assigneeId])\n          .filter(Boolean)\n        item.startDate = addBusinessDays(item.startDate, 0, daysOff)\n        item.endDate = addBusinessDays(\n          item.startDate,\n          Math.ceil(minutesToDays(this.organisation, item.estimation)) - 1,\n          daysOff\n        )\n        // update parents\n        if (item.startDate.isBefore(item.parentElement.startDate)) {\n          item.parentElement.startDate = item.startDate.clone()\n          this.updateScheduleItem(item.parentElement)\n          if (\n            item.parentElement.startDate.isBefore(\n              item.parentElement.parentElement.startDate\n            )\n          ) {\n            item.parentElement.parentElement.startDate =\n              item.parentElement.startDate.clone()\n            this.updateScheduleItem(item.parentElement.parentElement)\n          }\n        }\n        if (item.endDate.isAfter(item.parentElement.endDate)) {\n          item.parentElement.endDate = item.endDate.clone()\n          this.updateScheduleItem(item.parentElement)\n          if (\n            item.parentElement.endDate.isAfter(\n              item.parentElement.parentElement.endDate\n            )\n          ) {\n            item.parentElement.parentElement.endDate =\n              item.parentElement.endDate.clone()\n            this.updateScheduleItem(item.parentElement.parentElement)\n          }\n        }\n        await this.saveTaskChanged(item)\n        return\n      }\n\n      if (item.startDate && item.endDate && item.parentElement) {\n        item.parentElement.startDate = this.getMinDate(item.parentElement)\n        item.parentElement.endDate = this.getMaxDate(item.parentElement)\n        if (!this.isVersioned) {\n          this.saveScheduleItem(item.parentElement)\n        }\n      } else if (!item.parentElement) {\n        const minDate = this.getMinDate(item)\n        const maxDate = this.getMaxDate(item)\n        if (item.startDate.isAfter(minDate)) {\n          item.startDate = minDate\n        }\n        if (item.endDate.isBefore(maxDate)) {\n          item.endDate = maxDate\n        }\n      }\n\n      await this.updateScheduleItem(item)\n    },\n\n    async updateScheduleItem(item) {\n      const scheduleItem = this.scheduleItems.find(\n        scheduleItem => scheduleItem === item\n      )\n      if (scheduleItem) {\n        scheduleItem.startDate = item.startDate\n        scheduleItem.start_date = item.startDate.format('YYYY-MM-DD')\n        scheduleItem.endDate = item.endDate\n        scheduleItem.end_date = item.endDate.format('YYYY-MM-DD')\n      }\n      if (!this.isVersioned) {\n        await this.saveScheduleItem(item)\n      }\n    },\n\n    getMinDate(parentElement) {\n      let minDate = this.endDate.clone()\n      parentElement.children.forEach(item => {\n        if (item.startDate && item.startDate.isBefore(minDate)) {\n          minDate = item.startDate\n        }\n      })\n      return minDate.clone()\n    },\n\n    getMaxDate(parentElement) {\n      let maxDate = this.startDate.clone()\n      parentElement.children.forEach(item => {\n        if (item.endDate && item.endDate.isAfter(maxDate)) {\n          maxDate = item.endDate\n        }\n      })\n      return maxDate.clone()\n    },\n\n    isInDepartment(taskType) {\n      if (this.isCurrentUserManager) {\n        return true\n      } else if (this.isCurrentUserSupervisor) {\n        if (this.user.departments.length === 0) {\n          return true\n        } else {\n          return (\n            taskType.department_id &&\n            this.user.departments.includes(taskType.department_id)\n          )\n        }\n      } else {\n        return false\n      }\n    },\n\n    scrollScheduleToToday() {\n      this.$refs.schedule?.scrollToToday()\n    },\n\n    resetSidePanel() {\n      this.assignments = {\n        ...this.assignments,\n        entityTypes: null,\n        excludes: [],\n        forcedDailyQuota: null,\n        loading: false,\n        saving: false,\n        startDate: null,\n        endDate: null,\n        task: {},\n        type: null,\n        unassign: false\n      }\n    },\n\n    toggleSidePanel() {\n      if (this.isSidePanelOpen && this.assignments.type === 'task') {\n        this.assignments.type = null\n        this.isSidePanelOpen = false\n      }\n\n      this.isSidePanelOpen = !this.isSidePanelOpen\n\n      if (\n        this.isSidePanelOpen &&\n        this.assignments.type !== 'task' &&\n        !this.assignments.entityTypes &&\n        this.selectedTaskType\n      ) {\n        this.selectTaskTypeElement(this.selectedTaskType)\n      }\n    },\n\n    selectParentElement(element) {\n      if (!element.expanded) {\n        this.expandTaskTypeElement(element, () => {\n          this.$refs.schedule?.refreshItemPositions(element)\n        })\n      } else {\n        this.selectTaskTypeElement(element)\n      }\n    },\n\n    onSelectTaskType(taskTypeId) {\n      this.selectedTaskType = this.scheduleItems.find(\n        item => item.task_type_id === taskTypeId\n      )\n      // refresh schedule\n      this.expandTaskTypeElement(\n        this.selectedTaskType,\n        () => {\n          this.$refs.schedule?.refreshItemPositions(this.selectedTaskType)\n        },\n        true,\n        false\n      )\n    },\n\n    async selectTaskTypeElement(\n      taskType,\n      selectedEntityType = undefined,\n      resetAssignments = true\n    ) {\n      if (this.isTVShow) {\n        return\n      }\n\n      this.selectedTaskType = taskType\n\n      if (resetAssignments) {\n        this.resetSidePanel()\n      }\n\n      this.assignments.loading = true\n\n      // load tasks\n      const tasks = await this.loadTasks({\n        project_id: this.currentProduction.id,\n        task_type_id: this.selectedTaskType.task_type_id,\n        relations: 'true'\n      })\n\n      // load entity types\n      if (taskType.for_entity === 'Asset') {\n        await this.loadAssets({ withShared: false, withTasks: false })\n\n        this.assignments.entityTypes = this.productionAssetTypes\n          .filter(assetType => {\n            // filtering following custom asset types workflow\n            return (\n              !assetType.task_types.length ||\n              assetType.task_types.includes(taskType.task_type_id)\n            )\n          })\n          .map(assetType => {\n            return {\n              id: assetType.id,\n              name: assetType.name,\n              for_entity: taskType.for_entity,\n              expanded: assetType.id === selectedEntityType?.object_id,\n              entity_type_id: assetType.id,\n              children: this.assets\n                .filter(\n                  asset =>\n                    asset.asset_type_id === assetType.id &&\n                    !asset.canceled &&\n                    !asset.shared &&\n                    tasks.some(task => task.entity_id === asset.id)\n                )\n                .map(asset => ({\n                  ...asset,\n                  assigned: taskType.entitiesByType[assetType.id]?.includes(\n                    asset.id\n                  )\n                }))\n            }\n          })\n      } else if (taskType.for_entity === 'Shot') {\n        await this.loadShots()\n\n        const shotsBySequence = this.shots\n          .filter(shot => tasks.some(task => task.entity_id === shot.id))\n          .reduce((acc, shot) => {\n            if (!acc[shot.parent_id]) {\n              acc[shot.parent_id] = []\n            }\n            shot.assigned = taskType.entitiesByType[shot.parent_id]?.includes(\n              shot.id\n            )\n            acc[shot.parent_id].push(shot)\n            return acc\n          }, {})\n\n        this.assignments.entityTypes = Object.keys(shotsBySequence).map(\n          sequenceId => {\n            const shots = shotsBySequence[sequenceId]\n            return {\n              id: sequenceId,\n              name: shots[0].sequence_name,\n              for_entity: taskType.for_entity,\n              expanded: sequenceId === selectedEntityType?.object_id,\n              children: shots\n            }\n          }\n        )\n      }\n      this.assignments.loading = false\n    },\n\n    selectTaskElement(taskType, entityType, task, selection) {\n      if (selection.length !== 1) {\n        this.closeSidePanel()\n        return\n      }\n\n      this.resetSidePanel()\n\n      this.isSidePanelOpen = true\n      this.selectedTaskType = taskType\n      this.draggedEntities = [{ ...entityType, children: [{ ...task.entity }] }]\n\n      this.assignments.type = 'task'\n\n      const start_date = taskType.start_date\n      const end_date = parseDate(start_date).isAfter(taskType.end_date)\n        ? start_date\n        : taskType.end_date\n      this.assignments.startDate = start_date\n      this.assignments.endDate = end_date\n      this.assignments.task = {\n        ...task,\n        estimation: minutesToDays(this.organisation, task.estimation),\n        startDate: task.startDate.format('YYYY-MM-DD'),\n        endDate: task.endDate.format('YYYY-MM-DD')\n      }\n      this.assignments.excludes = this.team\n        .filter(person => !task.assignees.includes(person.id))\n        .map(person => person.id)\n      this.assignments.unassign = true\n    },\n\n    closeSidePanel() {\n      this.isSidePanelOpen = false\n      this.resetSidePanel()\n    },\n\n    onAssignmentItemSelected(item) {\n      const today = moment().utc().toDate()\n      this.assignments.type = 'entity'\n      this.assignments.startDate = item.start_date || today\n      this.assignments.endDate = item.end_date || today\n\n      item.children = this.filteredAssignments(item.children)\n      this.draggedEntities = [item]\n    },\n\n    onAssignmentItemDragStart(event, item, type) {\n      event.stopPropagation()\n      event.dataTransfer.dropEffect = 'move'\n      event.dataTransfer.effectAllowed = 'move'\n      event.dataTransfer.setData(`task-type-${type.task_type_id}`, true) // use for hack on drag over (must be lowercase)\n      event.dataTransfer.setData('taskTypeId', type.task_type_id)\n      event.dataTransfer.setData('entityId', item.id)\n\n      item.children = this.filteredAssignments(item.children)\n      this.draggedEntities = [item]\n    },\n\n    onScheduleItemDropped(event, item) {\n      this.assignments.type = 'entity'\n      const start_date = event.start_date || item.start_date\n      const end_date = parseDate(start_date).isAfter(item.end_date)\n        ? start_date\n        : item.end_date\n      this.assignments.startDate = start_date\n      this.assignments.endDate = end_date\n    },\n\n    removeFromAssignments(person) {\n      this.assignments.excludes.push(person.id)\n    },\n\n    submitAssignments() {\n      if (this.assignments.type === 'entity') {\n        this.saveAssignments()\n      } else if (this.assignments.type === 'task') {\n        this.saveTask()\n      }\n    },\n\n    async saveAssignments() {\n      this.assignments.saving = true\n\n      // load tasks\n      const tasks = await this.loadTasks({\n        project_id: this.currentProduction.id,\n        task_type_id: this.selectedTaskType.task_type_id,\n        relations: 'true'\n      })\n\n      const dailyQuota =\n        this.assignments.forcedDailyQuota ?? this.estimatedDailyQuota\n      const taskEstimation = 1 / dailyQuota\n\n      // assign each selected entity to each selected assignee\n      for (const taskType of this.draggedEntities) {\n        const startDate = parseDate(this.assignments.startDate)\n        const endDate = parseDate(this.assignments.endDate)\n\n        let cumulatedTasks = 0\n        let nextAssigneeIndex = 0\n        let nextStartDate = startDate.clone()\n\n        // distribute the task assignments according to the daily quotas, the task type duration and people's availability.\n        for (const entity of taskType.children) {\n          const task = tasks.find(task => task.entity_id === entity.id)\n          if (!task) {\n            continue // no task found for this entity\n          }\n\n          let versionedTask\n          if (this.isVersioned) {\n            const versionedTasks = await this.loadTasksFromScheduleVersion({\n              version: { id: this.version },\n              taskType: { id: task.task_type_id }\n            })\n            versionedTask = versionedTasks.find(t => t.task_id === task.id) ?? {\n              taskId: task.id,\n              version: this.version,\n              assignees: []\n            }\n            task.versionedTaskId = versionedTask.id\n          }\n\n          if (this.assignments.unassign) {\n            if (this.isVersioned) {\n              versionedTask.assignees = []\n            } else {\n              await this.unassignSelectedTasks({ taskIds: [task.id] })\n            }\n          }\n\n          cumulatedTasks++\n\n          let taskStartDate = nextStartDate\n          let taskEndDate = null\n          let taskAssignee = null\n          while (nextAssigneeIndex < this.availablePersons.length) {\n            taskAssignee = this.availablePersons[nextAssigneeIndex]\n\n            taskStartDate = addBusinessDays(\n              taskStartDate,\n              0,\n              this.daysOffByPerson[taskAssignee.id]\n            )\n\n            const { due_date } = getDatesFromStartDate(\n              this.organisation,\n              startDate,\n              taskEndDate,\n              cumulatedTasks * taskEstimation,\n              this.daysOffByPerson[taskAssignee.id]\n            )\n            taskEndDate = parseDate(due_date)\n\n            if (taskEndDate.isAfter(endDate)) {\n              // try to assign the task to the next available person\n              nextAssigneeIndex++\n              cumulatedTasks = 1\n              taskStartDate = startDate.clone()\n              taskEndDate = null\n            } else {\n              if (this.isVersioned) {\n                versionedTask.startDate = taskStartDate.format('YYYY-MM-DD')\n                versionedTask.dueDate = taskEndDate.format('YYYY-MM-DD')\n                versionedTask.estimation = daysToMinutes(\n                  this.organisation,\n                  taskEstimation\n                )\n                versionedTask.assignees.push(taskAssignee.id)\n\n                // save versioned task\n                if (!versionedTask.id) {\n                  await this.createScheduleVersionedTask(versionedTask)\n                } else {\n                  await this.updateScheduleVersionedTask(versionedTask)\n                }\n              } else {\n                await Promise.all([\n                  // assign task to the current assignee\n                  this.assignSelectedTasks({\n                    personId: taskAssignee.id,\n                    taskIds: [task.id]\n                  }),\n                  // save task dates & estimation\n                  this.updateTask({\n                    taskId: task.id,\n                    data: {\n                      estimation: daysToMinutes(\n                        this.organisation,\n                        taskEstimation\n                      ),\n                      start_date: taskStartDate.format('YYYY-MM-DD'),\n                      due_date: taskEndDate.format('YYYY-MM-DD')\n                    }\n                  })\n                ])\n              }\n              // set next start date\n              if ((cumulatedTasks * taskEstimation) % 1 !== 0) {\n                nextStartDate = taskEndDate.clone()\n              } else {\n                nextStartDate = taskEndDate.clone().add(1, 'days')\n              }\n              break // jump to next task\n            }\n          }\n        }\n\n        // refresh schedule\n        this.expandTaskTypeElement(\n          this.selectedTaskType,\n          () => {\n            this.$refs.schedule?.refreshItemPositions(this.selectedTaskType)\n          },\n          true,\n          false\n        )\n      }\n\n      this.assignments.saving = false\n    },\n\n    async saveTask() {\n      this.assignments.saving = true\n      try {\n        const task = {\n          ...this.assignments.task,\n          startDate: parseDate(this.assignments.task.startDate),\n          endDate: parseDate(this.assignments.task.endDate),\n          estimation: daysToMinutes(\n            this.organisation,\n            this.assignments.task.estimation\n          ),\n          assignees: this.availablePersons.map(person => person.id)\n        }\n        // update task and assignments\n        await this.onScheduleItemChanged(task)\n        if (!this.isVersioned) {\n          await this.unassignSelectedTasks({ taskIds: [task.id] })\n          await Promise.all(\n            task.assignees.map(personId =>\n              this.assignSelectedTasks({\n                personId,\n                taskIds: [task.id]\n              })\n            )\n          )\n        }\n        // refresh task in side panel\n        this.assignments.task.startDate = task.startDate.format('YYYY-MM-DD')\n        this.assignments.task.endDate = task.endDate.format('YYYY-MM-DD')\n        // refresh schedule\n        this.expandTaskTypeElement(\n          this.selectedTaskType,\n          () => {\n            this.$refs.schedule?.refreshItemPositions(this.selectedTaskType)\n          },\n          true,\n          false\n        )\n      } catch (err) {\n        console.error(err)\n      } finally {\n        this.assignments.saving = false\n      }\n    },\n\n    async onScheduleItemAssigned(task, personId) {\n      // update task to refresh the schedule\n      task.assignees.push(personId)\n      task.parentElement.children.get(personId).push(task)\n\n      // save change\n      if (this.isVersioned) {\n        return this.updateScheduleVersionedTask({\n          id: task.versionedTaskId,\n          assignees: task.assignees\n        })\n      } else {\n        await this.assignSelectedTasks({\n          personId,\n          taskIds: [task.id]\n        })\n      }\n    },\n\n    async onScheduleItemUnassigned(task, personId) {\n      // update task to refresh the schedule\n      task.assignees = task.assignees.filter(id => id !== personId)\n      const tasks = task.parentElement.children.get(personId)\n      tasks.splice(tasks.indexOf(task), 1)\n\n      // save change\n      if (this.isVersioned) {\n        return this.updateScheduleVersionedTask({\n          id: task.versionedTaskId,\n          assignees: task.assignees\n        })\n      } else {\n        await this.unassignPersonFromTask({\n          person: { id: personId },\n          task\n        })\n      }\n    },\n\n    onModeChanged() {\n      this.closeSidePanel()\n      this.refreshSchedule()\n    },\n\n    onVersionChanged() {\n      this.closeSidePanel()\n      this.refreshSchedule()\n    },\n\n    refreshSchedule() {\n      this.scheduleItems.forEach(item => {\n        if (!item.expanded) {\n          return\n        }\n        // refresh schedule\n        this.expandTaskTypeElement(\n          item,\n          () => {\n            this.$refs.schedule?.refreshItemPositions(item)\n          },\n          true,\n          false\n        )\n      })\n    },\n\n    openEditScheduleVersion(scheduleVersion = {}) {\n      this.scheduleVersionToEdit = scheduleVersion\n      this.modals.editScheduleVersion = true\n    },\n\n    openDeleteScheduleVersion(versionId) {\n      this.scheduleVersionToEdit = this.scheduleVersions.find(\n        ({ id }) => id === versionId\n      )\n      this.modals.deleteScheduleVersion = true\n    },\n\n    async editVersion(version) {\n      this.modals.editScheduleVersion = false\n      if (!version.id) {\n        const newVersion = await this.createScheduleVersion(version)\n        this.version = newVersion.id\n      } else {\n        await this.updateScheduleVersion(version)\n      }\n      this.scheduleVersionToEdit = {}\n    },\n\n    async deleteVersion(version) {\n      this.modals.deleteScheduleVersion = false\n      await this.deleteScheduleVersion(version)\n      if (this.version === version.id) {\n        this.version = 'ref' // reset to reference version\n        this.onVersionChanged()\n      }\n      this.scheduleVersionToEdit = {}\n    },\n\n    async applyToProduction() {\n      this.loading.applyScheduleVersion = true\n      this.errors.applyScheduleVersion = false\n      try {\n        await this.applyScheduleVersionToProduction(this.version)\n        this.modals.applyScheduleVersion = false\n      } catch (err) {\n        console.error(err)\n        this.errors.applyScheduleVersion = true\n      } finally {\n        this.loading.applyScheduleVersion = false\n      }\n      // refresh version list\n      await this.loadScheduleVersions()\n    }\n  },\n\n  watch: {\n    selectedStartDate() {\n      this.startDate = parseDate(this.selectedStartDate)\n      const start_date = this.startDate.format('YYYY-MM-DD')\n      if (\n        this.currentProduction.start_date &&\n        this.currentProduction.start_date !== start_date\n      ) {\n        this.editProduction({\n          ...this.currentProduction,\n          start_date\n        })\n      }\n    },\n\n    selectedEndDate() {\n      this.endDate = parseDate(this.selectedEndDate)\n      const end_date = this.endDate.format('YYYY-MM-DD')\n      if (\n        this.currentProduction.end_date &&\n        this.currentProduction.end_date !== end_date\n      ) {\n        this.editProduction({\n          ...this.currentProduction,\n          end_date\n        })\n      }\n    },\n\n    currentProduction() {\n      this.reset()\n    }\n  },\n\n  head() {\n    return {\n      title: `${this.currentProduction.name} | ${this.$t('schedule.title')} - Kitsu`\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dark {\n  .project-dates {\n    color: $white-grey;\n    border-bottom: 1px solid $grey;\n  }\n}\n\n.project-dates {\n  border-bottom: 1px solid $white-grey;\n  padding-bottom: 1em;\n\n  .field {\n    padding-bottom: 0;\n    margin-bottom: 0;\n  }\n}\n\n.fixed-page {\n  padding: 1em;\n  padding-top: 90px;\n  padding-left: 2em;\n}\n\n.main-column {\n  display: flex;\n  border: 0;\n  overflow: hidden;\n  flex-direction: column;\n}\n\n.zoom-level {\n  margin-top: -10px;\n}\n\n.ml2 {\n  margin-left: 2em;\n}\n\n.side-column {\n  position: relative;\n  top: -30px;\n  right: -14px;\n  height: calc(100% + 44px);\n  margin-top: 0;\n  padding: 0 1em 1em 1em;\n  background: var(--background-alt);\n  min-height: 100%;\n\n  .close-button {\n    position: absolute;\n    right: 1em;\n  }\n\n  .details {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n}\n\n.assignments {\n  list-style-type: none;\n  margin-left: 0;\n\n  .assignment-item {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: var(--background-selectable);\n    border: 1px solid $grey;\n    margin-top: -1px;\n    padding: 1em 1em 1em 0.5em;\n    cursor: pointer;\n\n    .icon {\n      color: $grey;\n      margin-right: 0.5em;\n      cursor: grab;\n    }\n\n    .name {\n      flex: 1;\n    }\n\n    .expand {\n      cursor: pointer;\n      opacity: 0.5;\n      height: 24px;\n\n      &:hover {\n        opacity: 1;\n      }\n    }\n  }\n\n  // odd/event items background\n  &.parent {\n    $alt-background: color-mix(\n      in srgb,\n      var(--background-selectable) 70%,\n      white 30%\n    );\n    > li:nth-child(odd) {\n      > .assignment-item {\n        background: $alt-background;\n      }\n      .assignments.children {\n        > li:nth-child(even) > .assignment-item {\n          background: $alt-background;\n        }\n      }\n    }\n    > li:nth-child(even) {\n      .assignments.children {\n        > li:nth-child(odd) > .assignment-item {\n          background: $alt-background;\n        }\n      }\n    }\n  }\n\n  &.children {\n    margin-left: 2em;\n  }\n\n  .dragged-type {\n    font-size: 12px;\n    font-weight: 600;\n    padding: 5px;\n    margin-bottom: 1em;\n    border-radius: 0.2em;\n    text-align: center;\n  }\n\n  .dragged-items {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 0.5em;\n    list-style: none;\n    margin: 0;\n  }\n\n  .dragged-item {\n    padding: 0 0.7em;\n    border-radius: 0.2em;\n  }\n\n  .assignees {\n    .reset-assignees {\n      position: absolute;\n      right: 1.5em;\n      opacity: 0.5;\n\n      &:hover {\n        opacity: 1;\n      }\n    }\n    td {\n      padding: 0.5em;\n    }\n    tbody {\n      background: var(--background);\n\n      tr {\n        border: 1px solid var(--border);\n      }\n    }\n    .assignee {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n    .person {\n      display: flex;\n      align-items: center;\n      gap: 10px;\n    }\n  }\n\n  .daily-quotas {\n    width: 50px;\n  }\n  .reset-quotas {\n    opacity: 0.5;\n\n    &:hover {\n      opacity: 1;\n    }\n  }\n\n  .estimation {\n    :deep(.input) {\n      font-size: 1rem;\n      padding: 0 1rem;\n      width: 90px;\n    }\n  }\n}\n</style>\n"],"names":["GripVertical","createLucideIcon","ListRestart","props","__props","emit","__emit","t","useI18n","form","reactive","errors","versionCombobox","ref","nameField","isEditing","computed","isValidForm","modalTitle","fromVersionOptions","version","firstBy","validateName","name","runConfirmation","data","onMounted","_sfc_main","ButtonSimple","Checkbox","ChevronDownIcon","ChevronRightIcon","Combobox","ComboboxNumber","ComboboxTaskType","ConfirmModal","DateField","EditScheduleVersionModal","GripVerticalIcon","HardDeleteModal","ListRestartIcon","PeopleAvatar","PeopleName","Schedule","Spinner","TrashIcon","TextField","XIcon","moment","mapGetters","startDate","parseSimpleDate","endDate","nbDays","getBusinessDays","nbEntities","sum","entity","nbAssignees","assetStore","assetTypeStore","taskType","person","shotStore","taskTypeStore","sortPeople","personId","options","fromScheduleVersion","mapActions","scheduleItems","scheduleStartDate","parseDate","scheduleEndDate","item","path","getTaskTypeSchedulePath","sortTaskTypeScheduleItems","err","taskTypeElement","scheduleItem","refreshScheduleCallBack","expanded","resetAssignments","loadScheduleItems","parameters","children","childrenById","child","tasks","versionedTasks","versionedTaskMap","versionedTask","task","versioned","personIds","tasksByType","people","assigneeId","entityTypeItem","addBusinessDays","minutesToDays","assetType","sortEntitiesByUserName","keyA","keyB","sortTasksByEntityName","a","b","items","sortedChildren","key","sortByName","entityTypeId","byAssignee","assignee","daysOff","minDate","maxDate","parentElement","element","taskTypeId","selectedEntityType","asset","shotsBySequence","shot","acc","sequenceId","shots","entityType","selection","start_date","end_date","today","event","type","taskEstimation","cumulatedTasks","nextAssigneeIndex","nextStartDate","taskStartDate","taskEndDate","taskAssignee","due_date","getDatesFromStartDate","daysToMinutes","id","scheduleVersion","versionId","newVersion","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_7","_hoisted_8","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_20","_hoisted_21","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_28","_hoisted_29","_hoisted_31","_hoisted_33","_hoisted_34","_hoisted_36","_hoisted_39","_hoisted_40","_hoisted_42","_hoisted_43","_openBlock","_createElementBlock","_Fragment","_createElementVNode","_createVNode","_component_date_field","_ctx","$data","_cache","$event","_component_combobox_number","_component_combobox","$options","_hoisted_6","_toDisplayString","_component_button_simple","_createCommentVNode","_hoisted_9","_createBlock","_component_schedule","_hoisted_10","args","_component_x_icon","_component_combobox_task_type","_hoisted_14","_component_spinner","_hoisted_22","_withModifiers","_renderList","_normalizeStyle","_hoisted_27","_hoisted_26","_createTextVNode","_component_list_restart_icon","_hoisted_32","_component_people_avatar","_component_people_name","_hoisted_30","_component_checkbox","_hoisted_35","_component_text_field","_component_trash_icon","_hoisted_37","_hoisted_38","_hoisted_41","_hoisted_15","_component_grip_vertical_icon","_component_chevron_down_icon","_component_chevron_right_icon","_hoisted_19","_component_edit_schedule_version_modal","_component_hard_delete_modal","_component_confirm_modal"],"mappings":"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","x_google_ignoreList":[0,1]}