{"version":3,"file":"SequenceStats-DW2hu5-Q.js","sources":["../../src/components/lists/SequenceStatsList.vue","../../src/components/pages/SequenceStats.vue"],"sourcesContent":["<template>\n  <div class=\"data-list\">\n    <div class=\"datatable-wrapper\" ref=\"body\" @scroll.passive=\"onBodyScroll\">\n      <table class=\"datatable\">\n        <thead class=\"datatable-head\">\n          <tr>\n            <th scope=\"col\" class=\"name datatable-row-header\" ref=\"th-sequence\">\n              {{ $t('shots.fields.sequence') }}\n            </th>\n            <th scope=\"col\" class=\"validation\">{{ $t('main.all') }}</th>\n            <template v-if=\"!isLoading\">\n              <th\n                scope=\"col\"\n                class=\"validation validation-cell\"\n                :key=\"columnId\"\n                v-for=\"columnId in validationColumns\"\n              >\n                <div\n                  class=\"flexrow validation-content\"\n                  :style=\"getValidationStyle(columnId)\"\n                >\n                  <router-link\n                    class=\"flexrow-item\"\n                    :title=\"taskTypeMap.get(columnId).name\"\n                    :to=\"taskTypePath(columnId)\"\n                    v-if=\"!isCurrentUserClient\"\n                  >\n                    {{ taskTypeMap.get(columnId).name }}\n                  </router-link>\n                  <span class=\"flexrow-item\" v-else>\n                    {{ taskTypeMap.get(columnId).name }}\n                  </span>\n                </div>\n              </th>\n            </template>\n            <th scope=\"col\" class=\"actions\"></th>\n          </tr>\n        </thead>\n        <tbody class=\"datatable-body\" v-if=\"!isLoading\">\n          <tr class=\"all-line datatable-row\" v-if=\"showAll && !isEmptyList\">\n            <th scope=\"row\" class=\"name datatable-row-header\">\n              {{ $t('sequences.all_sequences') }}\n            </th>\n\n            <stats-cell\n              class=\"all-validation\"\n              :colors=\"chartColors('all', 'all')\"\n              :data=\"chartData('all', 'all')\"\n              :frames-data=\"chartData('all', 'all', 'frames')\"\n              :count-mode=\"countMode\"\n              :display-mode=\"displayMode\"\n            />\n\n            <stats-cell\n              :style=\"getValidationStyle(columnId)\"\n              :key=\"'all-' + columnId\"\n              :colors=\"chartColors('all', columnId)\"\n              :data=\"chartData('all', columnId)\"\n              :frames-data=\"chartData('all', columnId, 'frames')\"\n              :count-mode=\"countMode\"\n              :display-mode=\"displayMode\"\n              v-for=\"columnId in validationColumns\"\n            />\n\n            <td class=\"actions\"></td>\n          </tr>\n\n          <tr class=\"datatable-row\" :key=\"entry.id\" v-for=\"entry in entryStats\">\n            <td scope=\"row\" class=\"name datatable-row-header\">\n              {{ entry.name }}\n            </td>\n\n            <stats-cell\n              :colors=\"chartColors(entry.id, 'all')\"\n              :data=\"chartData(entry.id, 'all')\"\n              :frames-data=\"chartData(entry.id, 'all', 'frames')\"\n              :count-mode=\"countMode\"\n              :display-mode=\"displayMode\"\n              v-if=\"isStats(entry.id, 'all')\"\n            />\n            <td v-else></td>\n\n            <template\n              :key=\"entry.id + '-' + columnId\"\n              v-for=\"columnId in validationColumns\"\n            >\n              <stats-cell\n                :key=\"entry.id + columnId\"\n                :style=\"getValidationStyle(columnId)\"\n                :colors=\"chartColors(entry.id, columnId)\"\n                :data=\"chartData(entry.id, columnId)\"\n                :frames-data=\"chartData(entry.id, columnId, 'frames')\"\n                :count-mode=\"countMode\"\n                :display-mode=\"displayMode\"\n                v-if=\"isStats(entry.id, columnId)\"\n              />\n              <td :style=\"getValidationStyle(columnId)\" v-else></td>\n            </template>\n\n            <td class=\"actions\"></td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <table-info :is-loading=\"isLoading\" :is-error=\"isError\" />\n\n    <div\n      class=\"has-text-centered\"\n      v-if=\"isEmptyList && !isCurrentUserClient && !isLoading\"\n    >\n      <p class=\"info\">\n        <img src=\"../../assets/illustrations/empty_shot.png\" />\n      </p>\n      <p class=\"info\">{{ $t('sequences.empty_list') }}</p>\n    </div>\n    <div\n      class=\"has-text-centered\"\n      v-if=\"isEmptyList && isCurrentUserClient && !isLoading\"\n    >\n      <p class=\"info\">\n        <img src=\"../../assets/illustrations/empty_shot.png\" />\n      </p>\n      <p class=\"info\">{{ $t('sequences.empty_list_client') }}</p>\n    </div>\n\n    <p class=\"has-text-centered nb-sequences\" v-if=\"!isEmptyList && !isLoading\">\n      {{ displayedSequencesLength }}\n      {{ $tc('sequences.number', displayedSequencesLength) }}\n    </p>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\n\nimport { getChartColors, getChartData } from '@/lib/stats'\n\nimport { entityListMixin } from '@/components/mixins/entity_list'\n\nimport TableInfo from '@/components/widgets/TableInfo.vue'\nimport StatsCell from '@/components/cells/StatsCell.vue'\n\nexport default {\n  name: 'sequence-stats-list',\n\n  mixins: [entityListMixin],\n\n  components: {\n    StatsCell,\n    TableInfo\n  },\n\n  props: {\n    countMode: {\n      type: String,\n      default: 'count'\n    },\n    displayMode: {\n      type: String,\n      default: 'pie'\n    },\n    entries: {\n      type: Array,\n      default: () => []\n    },\n    isLoading: {\n      type: Boolean,\n      default: false\n    },\n    isError: {\n      type: Boolean,\n      default: false\n    },\n    sequenceStats: {\n      type: Object,\n      default: () => {}\n    },\n    showAll: {\n      type: Boolean,\n      default: false\n    },\n    validationColumns: {\n      type: Array,\n      default: () => []\n    }\n  },\n\n  computed: {\n    ...mapGetters([\n      'currentProduction',\n      'currentEpisode',\n      'displayedSequencesLength',\n      'isCurrentUserClient',\n      'isTVShow',\n      'sequenceSearchText',\n      'taskTypeMap'\n    ]),\n\n    entryStats() {\n      return this.entries.filter(entry => this.isEntryStats(entry.id))\n    },\n\n    isEmptyList() {\n      return (\n        this.entries &&\n        this.entries.length === 0 &&\n        !this.isLoading &&\n        !this.isError &&\n        (!this.sequenceSearchText || this.sequenceSearchText.length === 0)\n      )\n    }\n  },\n\n  methods: {\n    chartColors(entryId, columnId) {\n      return getChartColors(this.sequenceStats, entryId, columnId)\n    },\n\n    chartData(entryId, columnId, dataType = 'count') {\n      return getChartData(this.sequenceStats, entryId, columnId, dataType)\n    },\n\n    isStats(entryId, columnId) {\n      return (\n        this.sequenceStats[entryId] && this.sequenceStats[entryId][columnId]\n      )\n    },\n\n    isEntryStats(entryId) {\n      if (!this.sequenceStats[entryId] && this.sequenceSearchText) return false\n      if (!this.sequenceStats[entryId]) return true\n      let isStats = false\n      Object.keys(this.sequenceStats[entryId]).forEach(statKey => {\n        isStats = isStats || this.sequenceStats[entryId][statKey]\n      })\n      return isStats\n    },\n\n    editPath(sequenceId) {\n      return this.getPath('edit-sequence', sequenceId)\n    },\n\n    deletePath(sequenceId) {\n      return this.getPath('delete-sequence', sequenceId)\n    },\n\n    taskTypePath(taskTypeId) {\n      const route = {\n        name: 'task-type',\n        params: {\n          production_id: this.currentProduction.id,\n          task_type_id: taskTypeId,\n          type: 'shots'\n        }\n      }\n\n      if (this.isTVShow && this.currentEpisode) {\n        route.name = 'episode-task-type'\n        route.params.episode_id = this.currentEpisode.id\n      }\n\n      return route\n    },\n\n    getPath(section, sequenceId) {\n      const route = {\n        name: section,\n        params: {\n          production_id: this.currentProduction.id\n        }\n      }\n\n      if (this.isTVShow && this.currentEpisode) {\n        route.name = `episode-${section}`\n        route.params.episode_id = this.currentEpisode.id\n      }\n\n      if (sequenceId) {\n        route.params.sequence_id = sequenceId\n      }\n      return route\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.datatable-body tr:first-child th,\n.datatable-body tr:first-child td {\n  border-top: 0;\n}\n.episode {\n  min-width: 100px;\n  width: 100px;\n}\n\n.name {\n  min-width: 150px;\n  width: 150px;\n  font-weight: bold;\n}\n\n.name a {\n  color: inherit;\n}\n\ntd.name {\n  font-size: 1.2em;\n}\n\n.description {\n  min-width: 200px;\n  width: 200px;\n}\n\n.validation {\n  min-width: 170px;\n  max-width: 170px;\n  width: 170px;\n  word-wrap: break-word;\n}\n\n.actions {\n  min-width: 100px;\n}\n\nth.actions {\n  padding: 0.4em;\n}\n\n.info img {\n  max-width: 80vh;\n}\n\n.actions {\n  width: 100%;\n  min-width: 150px;\n}\n</style>\n","<template>\n  <div class=\"sequences page fixed-page\">\n    <div class=\"sequence-list-header page-header flexrow\">\n      <search-field\n        class=\"flexrow-item mt1\"\n        ref=\"sequence-search-field\"\n        :can-save=\"true\"\n        @change=\"onSearchChange\"\n        @save=\"saveSearchQuery\"\n        placeholder=\"ex: e01 s01 anim=wip\"\n      />\n      <combobox\n        class=\"mb0 flexrow-item\"\n        :label=\"$t('statistics.display_mode')\"\n        locale-key-prefix=\"statistics.\"\n        :options=\"displayModeOptions\"\n        v-model=\"displayMode\"\n      />\n      <combobox\n        class=\"mb0 flexrow-item\"\n        :label=\"$t('statistics.count_mode')\"\n        locale-key-prefix=\"statistics.\"\n        :options=\"countModeOptions\"\n        v-model=\"countMode\"\n      />\n      <span class=\"filler\"> </span>\n      <button-simple\n        class=\"flexrow-item\"\n        icon=\"refresh\"\n        :title=\"$t('main.reload')\"\n        @click=\"reloadData\"\n      />\n      <button-simple\n        class=\"flexrow-item\"\n        icon=\"download\"\n        :title=\"$t('main.csv.export_file')\"\n        @click=\"exportStatisticsToCsv\"\n      />\n    </div>\n\n    <div class=\"query-list mt1\">\n      <search-query-list\n        :queries=\"sequenceSearchQueries\"\n        type=\"sequenceStat\"\n        @change-search=\"changeSearch\"\n        @remove-search=\"removeSearchQuery\"\n      />\n    </div>\n\n    <sequence-stats-list\n      ref=\"sequence-list\"\n      :count-mode=\"countMode\"\n      :display-mode=\"displayMode\"\n      :entries=\"displayedSequences\"\n      :is-loading=\"isShotsLoading || initialLoading\"\n      :is-error=\"isShotsLoadingError\"\n      :validation-columns=\"shotValidationColumns\"\n      :sequence-stats=\"sequenceStats\"\n      :show-all=\"sequenceSearchText.length === 0\"\n      @field-changed=\"onFieldChanged\"\n      @scroll=\"saveScrollPosition\"\n    />\n  </div>\n</template>\n\n<script>\nimport moment from 'moment'\nimport { mapGetters, mapActions } from 'vuex'\n\nimport csv from '@/lib/csv'\nimport stringHelpers from '@/lib/string'\n\nimport ButtonSimple from '@/components/widgets/ButtonSimple.vue'\nimport Combobox from '@/components/widgets/Combobox.vue'\nimport SearchField from '@/components/widgets/SearchField.vue'\nimport SearchQueryList from '@/components/widgets/SearchQueryList.vue'\nimport SequenceStatsList from '@/components/lists/SequenceStatsList.vue'\n\nexport default {\n  name: 'sequence-stats',\n\n  components: {\n    ButtonSimple,\n    Combobox,\n    SearchField,\n    SearchQueryList,\n    SequenceStatsList\n  },\n\n  data() {\n    return {\n      countMode: 'count',\n      displayMode: 'pie',\n      initialLoading: true,\n      countModeOptions: [\n        { label: 'shots', value: 'count' },\n        { label: 'frames', value: 'frames' }\n      ],\n      displayModeOptions: [\n        { label: 'pie', value: 'pie' },\n        { label: 'count', value: 'count' }\n      ],\n      loading: {\n        savingSearch: false\n      }\n    }\n  },\n\n  computed: {\n    ...mapGetters([\n      'currentEpisode',\n      'currentProduction',\n      'displayedSequences',\n      'isCurrentUserManager',\n      'isShotsLoading',\n      'isShotsLoadingError',\n      'isTVShow',\n      'searchSequenceFilters',\n      'sequences',\n      'sequenceMap',\n      'sequencesPath',\n      'sequenceStats',\n      'sequenceSearchText',\n      'sequenceSearchQueries',\n      'sequenceListScrollPosition',\n      'shotValidationColumns',\n      'taskTypeMap',\n      'taskStatusMap'\n    ])\n  },\n\n  mounted() {\n    this.loadShots(() => {\n      this.initSequences()\n        .then(() => {\n          this.initialLoading = false\n        })\n        .catch(err => console.error(err))\n      this.setDefaultSearchText()\n      this.setDefaultListScrollPosition()\n    })\n  },\n\n  methods: {\n    ...mapActions([\n      'computeSequenceStats',\n      'hideAssignations',\n      'initSequences',\n      'loadShots',\n      'removeSequenceSearch',\n      'saveSequenceSearch',\n      'setLastProductionScreen',\n      'setSequenceStatsSearch',\n      'setSequenceListScrollPosition',\n      'showAssignations'\n    ]),\n\n    reloadData() {\n      this.initialLoading = true\n      this.loadShots(() => {\n        this.initialLoading = false\n        this.computeSequenceStats()\n      })\n    },\n\n    setDefaultSearchText() {\n      if (this.sequenceSearchText.length > 0) {\n        this.$refs['sequence-search-field'].setValue(this.sequenceSearchText)\n      }\n    },\n\n    setDefaultListScrollPosition() {\n      if (this.$refs['sequence-list']) {\n        this.$refs['sequence-list'].setScrollPosition(\n          this.sequenceListScrollPosition\n        )\n      }\n    },\n\n    navigateToList() {\n      this.$router.push(this.sequencesPath)\n    },\n\n    onSearchChange() {\n      const searchQuery = this.$refs['sequence-search-field'].getValue()\n      this.setSequenceStatsSearch(searchQuery)\n    },\n\n    changeSearch(searchQuery) {\n      this.$refs['sequence-search-field'].setValue(searchQuery.search_query)\n      this.$refs['sequence-search-field'].$emit(\n        'change',\n        searchQuery.search_query\n      )\n    },\n\n    saveSearchQuery(searchQuery) {\n      if (this.loading.savingSearch) {\n        return\n      }\n      this.loading.savingSearch = true\n      this.saveSequenceSearch(searchQuery)\n        .catch(console.error)\n        .finally(() => {\n          this.loading.savingSearch = false\n        })\n    },\n\n    removeSearchQuery(searchQuery) {\n      this.removeSequenceSearch(searchQuery).catch(console.error)\n    },\n\n    saveScrollPosition(scrollPosition) {\n      this.setSequenceListScrollPosition(scrollPosition)\n    },\n\n    exportStatisticsToCsv() {\n      const nameData = [\n        moment().format('YYYYMMDD'),\n        this.currentProduction.name,\n        'sequences',\n        'statistics'\n      ]\n      if (this.currentEpisode) {\n        nameData.splice(2, 0, this.currentEpisode.name)\n      }\n      const name = stringHelpers.slugify(nameData.join('_'))\n      csv.generateStatReports(\n        name,\n        this.sequenceStats,\n        this.taskTypeMap,\n        this.taskStatusMap,\n        this.sequenceMap,\n        this.countMode,\n        this.currentProduction\n      )\n    },\n\n    onFieldChanged({ entry, fieldName, value }) {\n      const data = { id: entry.id }\n      data[fieldName] = value\n      this.editSequence(data)\n    }\n  },\n\n  watch: {\n    currentProduction() {\n      this.$refs['sequence-search-field'].setValue('')\n      this.$store.commit('SET_SEQUENCE_LIST_SCROLL_POSITION', 0)\n\n      if (!this.isTVShow) {\n        this.loadShots(() => {\n          this.initSequences()\n            .then(this.handleModalsDisplay)\n            .catch(err => console.error(err))\n        })\n      }\n    },\n\n    currentEpisode() {\n      if (this.isTVShow && this.currentEpisode) {\n        this.loadShots(() => {\n          this.initSequences()\n            .then(this.handleModalsDisplay)\n            .then(() => {\n              this.initialLoading = false\n            })\n            .catch(err => console.error(err))\n        })\n      }\n    },\n\n    searchSequenceFilters: {\n      deep: true,\n      handler() {\n        this.computeSequenceStats()\n      }\n    }\n  },\n\n  head() {\n    if (this.isTVShow) {\n      return {\n        title:\n          `${this.currentProduction ? this.currentProduction.name : ''}` +\n          ` - ${this.currentEpisode ? this.currentEpisode.name : ''}` +\n          ` | ${this.$t('sequences.title')} - Kitsu`\n      }\n    } else {\n      return {\n        title:\n          `${this.currentProduction ? this.currentProduction.name : ''}` +\n          ` | ${this.$t('sequences.title')} - Kitsu`\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.mb0 {\n  margin-bottom: 0;\n}\n</style>\n"],"names":["_sfc_main","entityListMixin","StatsCell","TableInfo","mapGetters","entry","entryId","columnId","getChartColors","dataType","getChartData","isStats","statKey","sequenceId","taskTypeId","route","section","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_12","_hoisted_14","_openBlock","_createElementBlock","_createElementVNode","_cache","args","_ctx","_hoisted_4","_toDisplayString","$props","_createCommentVNode","_Fragment","_renderList","_normalizeStyle","_hoisted_5","_createBlock","_component_router_link","$options","_withCtx","_createTextVNode","_hoisted_6","_hoisted_7","_hoisted_8","_createVNode","_component_stats_cell","_hoisted_9","_hoisted_10","_component_table_info","_hoisted_11","_imports_0","_hoisted_13","_hoisted_15","ButtonSimple","Combobox","SearchField","SearchQueryList","SequenceStatsList","err","mapActions","searchQuery","scrollPosition","nameData","moment","name","stringHelpers","csv","fieldName","value","data","_component_search_field","_component_combobox","$data","$event","_component_button_simple","_component_search_query_list","_component_sequence_stats_list"],"mappings":"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"}