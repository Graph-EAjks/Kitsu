{"version":3,"file":"Studios-C4h_5N7_.js","sources":["../../src/components/modals/EditStudiosModal.vue","../../src/components/lists/StudioList.vue","../../src/components/pages/Studios.vue"],"sourcesContent":["<template>\n  <div class=\"modal\" :class=\"{ 'is-active': active }\">\n    <div class=\"modal-background\" @click=\"$emit('cancel')\"></div>\n    <div class=\"modal-content\">\n      <div class=\"box\">\n        <h1 class=\"title\" v-if=\"isEditing\">\n          {{ $t('studios.edit_title') }} {{ studioToEdit.name }}\n        </h1>\n        <h1 class=\"title\" v-else>\n          {{ $t('studios.new_studios') }}\n        </h1>\n        <form v-on:submit.prevent>\n          <text-field\n            ref=\"nameField\"\n            :label=\"$t('studios.fields.name')\"\n            :maxlength=\"30\"\n            v-model=\"form.name\"\n            v-focus\n          />\n          <color-field\n            ref=\"colorField\"\n            :label=\"$t('studios.fields.color')\"\n            v-model=\"form.color\"\n          />\n          <combobox-boolean\n            :label=\"$t('main.archived')\"\n            @enter=\"runConfirmation\"\n            v-model=\"form.archived\"\n            v-if=\"isEditing\"\n          />\n        </form>\n        <modal-footer\n          :error-text=\"$t('studios.create_error')\"\n          :is-error=\"isError\"\n          :is-loading=\"isLoading\"\n          @confirm=\"runConfirmation\"\n          @cancel=\"$emit('cancel')\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { modalMixin } from '@/components/modals/base_modal'\n\nimport ColorField from '@/components/widgets/ColorField.vue'\nimport ComboboxBoolean from '@/components/widgets/ComboboxBoolean.vue'\nimport ModalFooter from '@/components/modals/ModalFooter.vue'\nimport TextField from '@/components/widgets/TextField.vue'\n\nexport default {\n  name: 'edit-studios-modal',\n\n  mixins: [modalMixin],\n\n  components: {\n    ColorField,\n    ComboboxBoolean,\n    ModalFooter,\n    TextField\n  },\n\n  props: {\n    active: {\n      type: Boolean,\n      default: false\n    },\n    isError: {\n      type: Boolean,\n      default: false\n    },\n    isLoading: {\n      type: Boolean,\n      default: false\n    },\n    studioToEdit: {\n      type: Object,\n      default: () => {}\n    }\n  },\n\n  data() {\n    return {\n      form: {\n        id: null,\n        name: '',\n        color: '',\n        archived: 'false'\n      }\n    }\n  },\n\n  computed: {\n    isEditing() {\n      return this.studioToEdit?.id\n    }\n  },\n\n  methods: {\n    runConfirmation() {\n      this.$emit('confirm', this.form)\n    }\n  },\n\n  watch: {\n    active() {\n      if (this.active) {\n        setTimeout(() => {\n          this.$refs.nameField.focus()\n        }, 100)\n      }\n    },\n\n    studioToEdit() {\n      if (this.isEditing) {\n        this.form = {\n          id: this.studioToEdit.id,\n          name: this.studioToEdit.name,\n          color: this.studioToEdit.color,\n          archived: String(this.studioToEdit.archived === true)\n        }\n      } else {\n        this.form = {\n          id: null,\n          name: '',\n          color: '',\n          archived: 'false'\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.modal-content .box p.text {\n  margin-bottom: 1em;\n}\n\n.is-danger {\n  color: #ff3860;\n  font-style: italic;\n}\n</style>\n","<template>\n  <div class=\"data-list\">\n    <div class=\"datatable-wrapper\">\n      <table class=\"datatable\">\n        <thead class=\"datatable-head\">\n          <tr>\n            <th scope=\"col\" class=\"name\">\n              {{ $t('studios.fields.name') }}\n            </th>\n            <th scope=\"col\">{{ $t('studios.fields.color') }}</th>\n            <th scope=\"col\" class=\"actions\"></th>\n          </tr>\n        </thead>\n        <tbody class=\"datatable-body\" v-if=\"entries.length > 0\">\n          <tr class=\"datatable-row\" v-for=\"entry in entries\" :key=\"entry.id\">\n            <td class=\"name\">\n              {{ entry.name }}\n            </td>\n            <td class=\"color\">\n              <div>\n                <span :style=\"{ background: entry.color }\"> </span>\n              </div>\n            </td>\n            <row-actions-cell\n              :entry-id=\"entry.id\"\n              @edit-clicked=\"$emit('edit-clicked', entry)\"\n              @delete-clicked=\"$emit('delete-clicked', entry)\"\n            />\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <table-info :is-loading=\"isLoading\" :is-error=\"isError\"> </table-info>\n    <p class=\"has-text-centered nb-asset-types\">\n      {{ entries.length }} {{ $tc('studios.number', entries.length) }}\n    </p>\n  </div>\n</template>\n\n<script>\nimport RowActionsCell from '@/components/cells/RowActionsCell.vue'\nimport TableInfo from '@/components/widgets/TableInfo.vue'\n\nexport default {\n  name: 'studio-list',\n\n  props: ['entries', 'isLoading', 'isError'],\n\n  components: {\n    RowActionsCell,\n    TableInfo\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.datatable-body tr:first-child th,\n.datatable-body tr:first-child td {\n  border-top: 0;\n}\n\n.name {\n  width: 300px;\n  padding: 1em;\n}\n\n.color {\n  width: 20px;\n  height: 20px;\n  text-align: center;\n\n  span {\n    display: inline-block;\n    width: 20px;\n    height: 20px;\n    border-radius: 10px;\n  }\n}\n</style>\n","<template>\n  <div class=\"studios page fixed-page\">\n    <list-page-header\n      :title=\"$t('studios.title')\"\n      :new-entry-label=\"$t('studios.new_studios')\"\n      :is-exportable=\"isActiveTab\"\n      @export-clicked=\"onExportClicked\"\n      @new-clicked=\"onNewClicked\"\n    />\n\n    <route-tabs\n      class=\"mt2\"\n      :active-tab=\"activeTab\"\n      :tabs=\"tabs\"\n      route-name=\"studios\"\n    />\n\n    <studio-list\n      class=\"studio-list\"\n      :entries=\"studioList\"\n      :is-loading=\"loading.studios\"\n      :is-error=\"errors.studios\"\n      @edit-clicked=\"onEditClicked\"\n      @delete-clicked=\"onDeleteClicked\"\n    />\n\n    <edit-studios-modal\n      :active=\"modals.edit\"\n      :is-loading=\"loading.edit\"\n      :is-error=\"errors.edit\"\n      :studio-to-edit=\"studioToEdit\"\n      @cancel=\"modals.edit = false\"\n      @confirm=\"confirmEditStudio\"\n    />\n\n    <delete-modal\n      :active=\"modals.del\"\n      :is-loading=\"loading.del\"\n      :is-error=\"errors.del\"\n      :text=\"deleteText\"\n      :error-text=\"$t('studios.delete_error')\"\n      @cancel=\"modals.del = false\"\n      @confirm=\"confirmDeleteStudio\"\n    />\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\n\nimport csv from '@/lib/csv'\nimport stringHelpers from '@/lib/string'\n\nimport DeleteModal from '@/components/modals/DeleteModal.vue'\nimport EditStudiosModal from '@/components/modals/EditStudiosModal.vue'\nimport ListPageHeader from '@/components/widgets/ListPageHeader.vue'\nimport RouteTabs from '@/components/widgets/RouteTabs.vue'\nimport StudioList from '@/components/lists/StudioList.vue'\n\nexport default {\n  name: 'studios',\n\n  components: {\n    DeleteModal,\n    EditStudiosModal,\n    ListPageHeader,\n    RouteTabs,\n    StudioList\n  },\n\n  data() {\n    return {\n      activeTab: 'active',\n      studioToEdit: null,\n      studioToDelete: null,\n      errors: {\n        studios: false,\n        edit: false,\n        del: false\n      },\n      loading: {\n        studios: false,\n        edit: false,\n        del: false\n      },\n      modals: {\n        del: false,\n        edit: false\n      },\n      tabs: [\n        {\n          name: 'active',\n          label: this.$t('main.active')\n        },\n        {\n          name: 'archived',\n          label: this.$t('main.archived')\n        }\n      ]\n    }\n  },\n\n  async mounted() {\n    this.activeTab = this.$route.query.tab || 'active'\n    this.loading.studios = true\n    this.errors.studios = false\n    try {\n      await this.loadStudios()\n    } catch (error) {\n      console.log(error)\n      this.errors.studios = true\n    }\n    this.loading.studios = false\n  },\n\n  computed: {\n    ...mapGetters(['studios', 'archivedStudios']),\n\n    isActiveTab() {\n      return this.activeTab === 'active'\n    },\n\n    studioList() {\n      return this.isActiveTab ? this.studios : this.archivedStudios\n    },\n\n    deleteText() {\n      return this.studioToDelete\n        ? this.$t('studios.delete_text', { name: this.studioToDelete.name })\n        : ''\n    }\n  },\n\n  methods: {\n    ...mapActions(['deleteStudio', 'editStudio', 'loadStudios', 'newStudio']),\n\n    onExportClicked() {\n      const name = stringHelpers.slugify(this.$t('studios.title'))\n      const headers = [\n        this.$t('main.type'),\n        this.$t('studios.fields.name'),\n        this.$t('studios.fields.color')\n      ]\n      const entries = [headers].concat(\n        this.studios.map(studio => [studio.type, studio.name, studio.color])\n      )\n      csv.buildCsvFile(name, entries)\n    },\n\n    onNewClicked() {\n      this.studioToEdit = { name: '', color: '#999999' }\n      this.modals.edit = true\n    },\n\n    onEditClicked(studio) {\n      this.studioToEdit = studio\n      this.modals.edit = true\n    },\n\n    async confirmEditStudio(form) {\n      this.loading.edit = true\n      this.errors.edit = false\n      form.id = this.studioToEdit?.id\n      try {\n        if (form.id) {\n          await this.editStudio(form)\n        } else {\n          await this.newStudio(form)\n        }\n        this.modals.edit = false\n      } catch (error) {\n        console.error(error)\n        this.errors.edit = true\n      }\n      this.loading.edit = false\n    },\n\n    onDeleteClicked(studio) {\n      this.studioToDelete = studio\n      this.modals.del = true\n    },\n\n    async confirmDeleteStudio() {\n      this.loading.del = true\n      this.errors.del = false\n      try {\n        await this.deleteStudio(this.studioToDelete)\n        this.modals.del = false\n      } catch (error) {\n        console.error(error)\n        this.errors.del = true\n      }\n      this.loading.del = false\n    }\n  },\n\n  watch: {\n    $route() {\n      this.activeTab = this.$route.query.tab\n    }\n  },\n\n  metaInfo() {\n    return {\n      title: `${this.$t('studios.title')} - Kitsu`\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.studio-list {\n  margin-top: 0;\n}\n</style>\n"],"names":["_sfc_main","modalMixin","ColorField","ComboboxBoolean","ModalFooter","TextField","_a","RowActionsCell","TableInfo","DeleteModal","EditStudiosModal","ListPageHeader","RouteTabs","StudioList","error","mapGetters","mapActions","name","stringHelpers","entries","studio","csv","form"],"mappings":"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"}