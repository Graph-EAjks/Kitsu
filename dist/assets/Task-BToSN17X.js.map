{"version":3,"file":"Task-BToSN17X.js","sources":["../../src/components/widgets/SubscribeButton.vue","../../src/components/pages/Task.vue"],"sourcesContent":["<template>\n  <button class=\"button\" :title=\"buttonTitle\" @click=\"$emit('click')\">\n    <eye-icon class=\"icon is-small\" v-if=\"subscribed\" />\n    <eye-off-icon class=\"icon is-small\" v-else />\n  </button>\n</template>\n\n<script>\nimport { EyeIcon, EyeOffIcon } from 'lucide-vue-next'\n\nexport default {\n  name: 'subscribe-button',\n\n  components: {\n    EyeIcon,\n    EyeOffIcon\n  },\n\n  props: {\n    subscribed: {\n      default: false,\n      type: Boolean\n    }\n  },\n\n  emits: ['click'],\n\n  computed: {\n    buttonTitle() {\n      if (!this.subscribed) {\n        return this.$t('tasks.subscribe_notifications')\n      } else {\n        return this.$t('tasks.unsubscribe_notifications')\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <div class=\"fixed-page columns xyz-in\" xyz=\"fade\">\n    <div class=\"page column main-column\">\n      <div class=\"page-header pa1 mb0\" xyz=\"fade\">\n        <div class=\"flexrow header-title\" v-if=\"task\">\n          <router-link\n            class=\"flexrow-item has-text-centered back-link\"\n            :to=\"taskEntitiesPath\"\n          >\n            <corner-left-up-icon />\n          </router-link>\n\n          <div class=\"flexrow-item block flexrow task-type\">\n            <router-link\n              class=\"flexrow-item mt05\"\n              :to=\"previousEntityTaskPath\"\n              v-if=\"previousEntityTaskPath\"\n            >\n              <chevron-left-icon />\n            </router-link>\n\n            <router-link\n              class=\"flexrow-item mt05\"\n              :to=\"nextEntityTaskPath\"\n              v-if=\"nextEntityTaskPath\"\n            >\n              <chevron-right-icon />\n            </router-link>\n            <task-type-name\n              class=\"flexrow-item\"\n              :task-type=\"taskType\"\n              :production-id=\"currentProduction.id\"\n              v-if=\"taskType\"\n            />\n          </div>\n\n          <span class=\"flexrow-item ml2\">\n            <entity-thumbnail\n              class=\"entity-thumbnail\"\n              :entity=\"currentEntity\"\n              :empty-width=\"100\"\n              :empty-height=\"60\"\n              :width=\"100\"\n              :with-link=\"true\"\n            />\n          </span>\n\n          <h1 class=\"title flexrow-item\">\n            <router-link :to=\"taskEntityPath\">\n              {{ task ? title : 'Loading...' }}\n            </router-link>\n          </h1>\n\n          <div class=\"flexrow-item flexrow block\">\n            <span class=\"flexrow-item\">\n              {{ $t('tasks.current_status') }}\n            </span>\n            <validation-tag\n              class=\"is-medium flexrow-item\"\n              :task=\"task\"\n              :is-static=\"true\"\n              v-if=\"task\"\n            />\n            <span\n              class=\"flexrow-item\"\n              v-if=\"assignees.length > 0 && !isCurrentUserClient\"\n            >\n              {{ $t('tasks.fields.assignees') }}:\n            </span>\n            <template v-if=\"!isCurrentUserClient\">\n              <span\n                class=\"flexrow-item avatar-wrapper\"\n                :key=\"person.id\"\n                v-for=\"person in assignees\"\n              >\n                <people-avatar\n                  class=\"flexrow-item\"\n                  :person=\"person\"\n                  :size=\"30\"\n                  :font-size=\"16\"\n                />\n              </span>\n            </template>\n            <subscribe-button\n              class=\"flexrow-item action-button\"\n              :subscribed=\"isAssigned || task.is_subscribed\"\n              @click=\"toggleSubscribe\"\n              v-if=\"!isAssigned\"\n            />\n\n            <router-link\n              class=\"flexrow-item\"\n              :to=\"previousTaskPath\"\n              v-if=\"previousTaskPath\"\n            >\n              <chevron-up-icon />\n            </router-link>\n\n            <router-link\n              class=\"flexrow-item\"\n              :to=\"nextTaskPath\"\n              v-if=\"nextTaskPath\"\n            >\n              <chevron-down-icon />\n            </router-link>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"task-columns\" ref=\"task-columns\">\n        <div class=\"task-column preview-column\">\n          <div class=\"preview-column-content block\">\n            <div class=\"flexrow preview-header\">\n              <div class=\"flexrow-item\" v-if=\"isPreviews\">\n                <combobox-styled\n                  class=\"preview-combo flexrow-item\"\n                  :options=\"previewOptions\"\n                  is-preview\n                  v-model=\"selectedPreviewId\"\n                />\n              </div>\n              <div v-else>\n                <em>\n                  {{ $t('tasks.no_preview') }}\n                </em>\n              </div>\n\n              <div\n                class=\"set-main-preview flexrow-item flexrow pull-right\"\n                v-if=\"currentPreview\"\n              >\n                <button\n                  class=\"button flexrow-item\"\n                  @click=\"showHookupPlaylistModal\"\n                  v-if=\"isHookupButtonVisible\"\n                >\n                  <kitsu-icon\n                    name=\"playlists\"\n                    :title=\"$t('tasks.hookup_playlist')\"\n                  />\n                </button>\n                <button\n                  class=\"button flexrow-item\"\n                  :class=\"{\n                    'is-loading': loading.setPreview\n                  }\"\n                  @click=\"setPreview\"\n                  v-if=\"isCurrentUserManager\"\n                >\n                  <image-icon class=\"icon\" />\n                  <span class=\"text\">\n                    {{ $t('tasks.set_preview') }}\n                  </span>\n                </button>\n                <span class=\"error flexrow-item\" v-if=\"errors.setPreview\">\n                  {{ $t('tasks.set_preview_error') }}\n                </span>\n              </div>\n              <view-playlist-modal\n                :active=\"modals.hookupPlaylist\"\n                :task-ids=\"hookupPlaylistTaskIds\"\n                sort\n                @cancel=\"hideHookupPlaylistModal\"\n              />\n            </div>\n\n            <div class=\"preview-area mt1\">\n              <div v-if=\"isPreviews\">\n                <preview-player\n                  ref=\"preview-player\"\n                  :entity-preview-files=\"taskEntityPreviews\"\n                  :extra-wide=\"true\"\n                  :last-preview-files=\"taskPreviews || []\"\n                  :link=\"currentPreviewComment?.links?.[0]\"\n                  :previews=\"currentPreview.previews\"\n                  :read-only=\"isPreviewPlayerReadOnly\"\n                  :task=\"task\"\n                  :task-type-map=\"taskTypeMap\"\n                  @add-extra-preview=\"onAddExtraPreviewClicked\"\n                  @annotation-changed=\"onAnnotationChanged\"\n                  @change-current-preview=\"changeCurrentPreview\"\n                  @remove-extra-preview=\"onRemoveExtraPreviewClicked\"\n                  @previews-order-changed=\"onPreviewsOrderChanged\"\n                  @frame-updated=\"onFrameUpdated\"\n                  v-if=\"currentPreview\"\n                />\n              </div>\n            </div>\n          </div>\n          <div class=\"flexrow-item block mt1 mr0 info-block\">\n            <page-subtitle :text=\"$t('main.info')\" />\n            <div class=\"table-body mt1\">\n              <table class=\"datatable no-header\" v-if=\"task\">\n                <tbody class=\"table-body\">\n                  <tr class=\"datatable-row\">\n                    <td class=\"field-label\">\n                      {{ $t('tasks.fields.estimation') }}\n                    </td>\n                    <td>{{ formatDuration(task.estimation) }}</td>\n                  </tr>\n                  <tr class=\"datatable-row\">\n                    <td class=\"field-label\">\n                      {{ $t('tasks.fields.duration') }}\n                    </td>\n                    <td>{{ formatDuration(task.duration) }}</td>\n                  </tr>\n                  <tr class=\"datatable-row\">\n                    <td class=\"field-label\">\n                      {{ $t('tasks.fields.retake_count') }}\n                    </td>\n                    <td>{{ task.retake_count }}</td>\n                  </tr>\n                  <tr class=\"datatable-row\">\n                    <td class=\"field-label\">\n                      {{ $t('tasks.fields.start_date') }}\n                    </td>\n                    <td>{{ formatSimpleDate(task.start_date) }}</td>\n                  </tr>\n                  <tr class=\"datatable-row\">\n                    <td class=\"field-label\">\n                      {{ $t('tasks.fields.due_date') }}\n                    </td>\n                    <td>{{ formatSimpleDate(task.due_date) }}</td>\n                  </tr>\n                  <tr class=\"datatable-row\">\n                    <td class=\"field-label\">\n                      {{ $t('tasks.fields.end_date') }}\n                    </td>\n                    <td>{{ formatSimpleDate(task.end_date) }}</td>\n                  </tr>\n                  <tr class=\"datatable-row\">\n                    <td class=\"field-label\">\n                      {{ $t('tasks.fields.done_date') }}\n                    </td>\n                    <td>{{ formatSimpleDate(task.done_date) }}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n          <div class=\"pa2\"></div>\n        </div>\n\n        <div class=\"task-column comments-column\">\n          <div v-if=\"task\">\n            <div>\n              <add-comment\n                ref=\"add-comment\"\n                :frame=\"currentFrame\"\n                :is-error=\"errors.addComment\"\n                :is-max-retakes-error=\"errors.addCommentMaxRetakes\"\n                :is-loading=\"loading.addComment\"\n                :is-movie=\"isMovie\"\n                :team=\"currentTeam\"\n                :task=\"task\"\n                :task-status=\"taskStatusForCurrentUser\"\n                :preview-forms=\"previewForms\"\n                :fps=\"currentFps\"\n                :revision=\"currentRevision\"\n                @add-comment=\"addComment\"\n                @add-preview=\"onAddPreviewClicked\"\n                @file-drop=\"selectFile\"\n                @clear-files=\"clearPreviewFiles\"\n                @annotation-snapshots-requested=\"extractAnnotationSnapshots\"\n                @remove-preview=\"onPreviewFormRemoved\"\n                v-if=\"isCommentingAllowed\"\n              />\n              <div\n                class=\"comments\"\n                v-if=\"taskComments && taskComments.length > 0\"\n              >\n                <XyzTransitionGroup\n                  appear\n                  v-xyz=\"{ fade: false, up: false, 'flip-up': false }\"\n                >\n                  <comment\n                    :key=\"comment.id\"\n                    :comment=\"comment\"\n                    :fps=\"currentFps\"\n                    :frame=\"currentFrame\"\n                    :is-change=\"isStatusChange(index)\"\n                    :is-checkable=\"\n                      user.id === comment.person?.id ||\n                      (isCurrentUserArtist && isAssigned) ||\n                      isDepartmentSupervisor ||\n                      isCurrentUserManager\n                    \"\n                    :is-editable=\"\n                      user.id === comment.person?.id || isCurrentUserManager\n                    \"\n                    :is-pinnable=\"\n                      isDepartmentSupervisor || isCurrentUserManager\n                    \"\n                    :is-replyable=\"\n                      user.id === comment.person?.id ||\n                      isAssigned ||\n                      isDepartmentSupervisor ||\n                      isCurrentUserManager\n                    \"\n                    :revision=\"currentRevision\"\n                    :task=\"task\"\n                    :team=\"currentTeam\"\n                    @ack-comment=\"onAckComment\"\n                    @duplicate-comment=\"onDuplicateComment\"\n                    @pin-comment=\"onPinComment\"\n                    @edit-comment=\"onEditComment\"\n                    @delete-comment=\"onDeleteComment\"\n                    @checklist-updated=\"saveComment\"\n                    @time-code-clicked=\"timeCodeClicked\"\n                    v-for=\"(comment, index) in taskComments\"\n                  />\n                </XyzTransitionGroup>\n              </div>\n              <div class=\"no-comment\" v-else>\n                <em>\n                  {{ $t('tasks.no_comment') }}\n                </em>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"has-text-centered\" v-if=\"taskLoading.isLoading\">\n            <spinner />\n          </div>\n        </div>\n      </div>\n\n      <add-preview-modal\n        ref=\"add-preview-modal\"\n        :active=\"modals.addPreview\"\n        :is-loading=\"loading.addPreview\"\n        :is-error=\"errors.addPreview\"\n        :form-data=\"addPreviewFormData\"\n        :fps=\"currentFps\"\n        :expected-frames=\"entityFrames\"\n        :title=\"\n          task\n            ? `${task.entity_name} / ${taskTypeMap.get(task.task_type_id).name}`\n            : ''\n        \"\n        @cancel=\"closeAddPreviewModal\"\n        @confirm=\"confirmAddPreviewModal\"\n      />\n\n      <add-preview-modal\n        ref=\"add-extra-preview-modal\"\n        :active=\"modals.addExtraPreview\"\n        :is-loading=\"loading.addExtraPreview\"\n        :is-error=\"errors.addExtraPreview\"\n        :form-data=\"addExtraPreviewFormData\"\n        message=\"\"\n        :title=\"\n          task\n            ? `${task.entity_name} / ${taskTypeMap.get(task.task_type_id).name}`\n            : ''\n        \"\n        @cancel=\"hideExtraPreviewModal\"\n        @confirm=\"createExtraPreview\"\n      />\n\n      <edit-comment-modal\n        :active=\"modals.editComment\"\n        :frame=\"currentFrame\"\n        :is-loading=\"loading.editComment\"\n        :is-error=\"errors.editComment\"\n        :comment-to-edit=\"commentToEdit\"\n        :team=\"currentTeam\"\n        :fps=\"currentFps\"\n        :revision=\"currentRevision\"\n        @confirm=\"confirmEditTaskComment\"\n        @cancel=\"onCancelEditComment\"\n      />\n\n      <delete-modal\n        :active=\"modals.deleteComment\"\n        :is-loading=\"loading.deleteComment\"\n        :is-error=\"errors.deleteComment\"\n        :text=\"$t('tasks.delete_comment')\"\n        :error-text=\"$t('tasks.delete_comment_error')\"\n        @confirm=\"confirmDeleteTaskComment\"\n        @cancel=\"onCancelDeleteComment\"\n      />\n\n      <delete-modal\n        :active=\"modals.deleteExtraPreview\"\n        :is-loading=\"loading.deleteExtraPreview\"\n        :is-error=\"errors.deleteExtraPreview\"\n        :text=\"$t('tasks.delete_preview')\"\n        :error-text=\"$t('tasks.delete_preview_error')\"\n        @cancel=\"hideRemoveExtraPreviewModal\"\n        @confirm=\"confirmDeleteTaskPreview\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  ChevronDownIcon,\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  ChevronUpIcon,\n  CornerLeftUpIcon,\n  ImageIcon\n} from 'lucide-vue-next'\nimport { mapGetters, mapActions } from 'vuex'\n\nimport drafts from '@/lib/drafts'\nimport { getTaskEntityPath, getTaskEntitiesPath } from '@/lib/path'\nimport { sortPeople } from '@/lib/sorting'\n\nimport { formatListMixin } from '@/components/mixins/format'\nimport { taskMixin } from '@/components/mixins/task'\n\nimport AddComment from '@/components/widgets/AddComment.vue'\nimport AddPreviewModal from '@/components/modals/AddPreviewModal.vue'\nimport Comment from '@/components/widgets/Comment.vue'\nimport ComboboxStyled from '@/components/widgets/ComboboxStyled.vue'\nimport DeleteModal from '@/components/modals/DeleteModal.vue'\nimport EditCommentModal from '@/components/modals/EditCommentModal.vue'\nimport EntityThumbnail from '@/components/widgets/EntityThumbnail.vue'\nimport KitsuIcon from '@/components/widgets/KitsuIcon.vue'\nimport PageSubtitle from '@/components/widgets/PageSubtitle.vue'\nimport PeopleAvatar from '@/components/widgets/PeopleAvatar.vue'\nimport Spinner from '@/components/widgets/Spinner.vue'\nimport SubscribeButton from '@/components/widgets/SubscribeButton.vue'\nimport TaskTypeName from '@/components/widgets/TaskTypeName.vue'\nimport ValidationTag from '@/components/widgets/ValidationTag.vue'\nimport PreviewPlayer from '@/components/previews/PreviewPlayer.vue'\nimport ViewPlaylistModal from '@/components/modals/ViewPlaylistModal.vue'\n\nimport assetsStore from '@/store/modules/assets'\nimport editsStore from '@/store/modules/edits'\nimport episodesStore from '@/store/modules/episodes'\nimport sequencesStore from '@/store/modules/sequences'\nimport shotsStore from '@/store/modules/shots'\n\nexport default {\n  name: 'task',\n\n  mixins: [formatListMixin, taskMixin],\n\n  components: {\n    AddComment,\n    AddPreviewModal,\n    ChevronDownIcon,\n    ChevronLeftIcon,\n    ChevronRightIcon,\n    ChevronUpIcon,\n    ComboboxStyled,\n    Comment,\n    CornerLeftUpIcon,\n    DeleteModal,\n    EditCommentModal,\n    EntityThumbnail,\n    KitsuIcon,\n    ImageIcon,\n    PageSubtitle,\n    PeopleAvatar,\n    PreviewPlayer,\n    Spinner,\n    SubscribeButton,\n    TaskTypeName,\n    ValidationTag,\n    ViewPlaylistModal\n  },\n\n  provide() {\n    return {\n      draftComment: this.draftComment\n    }\n  },\n\n  data() {\n    return {\n      draftComment: {},\n      previewForms: [],\n      currentFrame: 0,\n      currentTask: null,\n      hookupPlaylistTaskIds: [],\n      selectedTab: 'validation',\n      taskLoading: {\n        isLoading: true,\n        isError: false\n      },\n      modals: {\n        addPreview: false,\n        addExtraPreview: false,\n        deleteExtraPreview: false,\n        deleteComment: false,\n        editComment: false,\n        hookupPlaylist: false\n      },\n      loading: {\n        addComment: false,\n        addPreview: false,\n        addExtraPreview: false,\n        setPreview: false,\n        deleteComment: false,\n        editComment: false\n      },\n      errors: {\n        addComment: false,\n        addCommentMaxRetakes: false,\n        addPreview: false,\n        addExtraPreview: false,\n        setPreview: false,\n        deleteComment: false,\n        editComment: false\n      },\n      addPreviewFormData: null,\n      addExtraPreviewFormData: null,\n      task: null,\n      taskComments: [],\n      taskPreviews: [],\n      commentToEdit: null,\n      selectedPreviewId: null\n    }\n  },\n\n  created() {\n    this.clearSelectedTasks()\n  },\n\n  mounted() {\n    this.loadTaskData().then(() => {\n      this.reset()\n    })\n    this.$nextTick(() => {\n      if (this.$refs['task-columns']) {\n        this.$refs['task-columns'].scrollTop = 100\n        window.scrollTo(0, 0)\n      }\n    })\n  },\n\n  computed: {\n    ...mapGetters([\n      'currentEpisode',\n      'currentProduction',\n      'displayedShots',\n      'displayedAssets',\n      'getTaskComments',\n      'getTaskPreviews',\n      'getTaskComment',\n      'isCurrentUserArtist',\n      'isCurrentUserClient',\n      'isCurrentUserManager',\n      'isCurrentUserSupervisor',\n      'isSingleEpisode',\n      'isTVShow',\n      'personMap',\n      'productionMap',\n      'route',\n      'shotMap',\n      'taskEntityPreviews',\n      'taskStatus',\n      'taskStatusForCurrentUser',\n      'taskMap',\n      'taskTypeMap',\n      'user'\n    ]),\n\n    assetList() {\n      return assetsStore.cache.assets\n    },\n\n    editList() {\n      return editsStore.cache.edits\n    },\n\n    episodeList() {\n      return episodesStore.cache.episodes\n    },\n\n    sequenceList() {\n      return sequencesStore.cache.sequences\n    },\n\n    shotList() {\n      return shotsStore.cache.shots\n    },\n\n    currentEntity() {\n      return this.task && this.task.entity\n    },\n\n    currentType() {\n      const genericNames = ['Shot', 'Episode', 'Sequence', 'Edit']\n      if (genericNames.includes(this.task.entity_type_name)) {\n        return this.task.entity_type_name\n      } else {\n        return 'Asset'\n      }\n    },\n\n    previewOptions() {\n      return [...this.taskPreviews]\n        .sort((a, b) => b.revision - a.revision)\n        .map(preview => {\n          return {\n            label: `v${preview.revision}`,\n            value: preview.id\n          }\n        })\n    },\n\n    isPreviewButtonVisible() {\n      return (\n        this.isCurrentUserManager &&\n        this.task &&\n        this.task.entity &&\n        this.task.entity.preview_file_id !== this.currentPreviewId &&\n        ['png', 'mp4'].includes(this.extension)\n      )\n    },\n\n    isMovie() {\n      return this.extension === 'mp4'\n    },\n\n    isPreviewPlayerReadOnly() {\n      if (this.task) {\n        if (this.isCurrentUserManager || this.isCurrentUserClient) {\n          return false\n        } else if (this.isCurrentUserSupervisor) {\n          if (this.user.departments.length === 0) {\n            return false\n          } else {\n            return !this.user.departments.includes(this.taskType?.department_id)\n          }\n        }\n      }\n      return true\n    },\n\n    extension() {\n      return this.currentPreview ? this.currentPreview.extension : ''\n    },\n\n    currentPreviewId() {\n      return this.currentPreview ? this.currentPreview.id : ''\n    },\n\n    currentPreview() {\n      if (this.isPreviews) {\n        let currentPreview = this.taskPreviews[0]\n        const previewId = this.route.params.preview_id\n        if (this.selectedPreviewId) {\n          currentPreview = this.taskPreviews.find(preview => {\n            return preview.id === previewId\n          })\n        }\n        return currentPreview\n      } else {\n        return null\n      }\n    },\n\n    currentPreviewComment() {\n      return this.taskComments.find(comment =>\n        comment.previews?.some(\n          preview => preview.revision === this.currentRevision\n        )\n      )\n    },\n\n    currentRevision() {\n      return this.currentPreview?.revision || 0\n    },\n\n    taskTypeBorder() {\n      let border = 'transparent'\n      if (this.task) border = this.task.task_type_color\n      return {\n        'border-left': `4px solid ${border}`\n      }\n    },\n\n    deleteTaskPath() {\n      return this.taskPath(this.task, 'task-delete')\n    },\n\n    isPreviews() {\n      return this.taskPreviews && this.taskPreviews.length > 0\n    },\n\n    taskEntityPath() {\n      if (this.task) {\n        const episodeId = this.currentEpisode\n          ? this.currentEpisode.id\n          : this.$route.params.episode_id\n        return getTaskEntityPath(this.task, episodeId)\n      } else {\n        return {\n          name: 'open-productions'\n        }\n      }\n    },\n\n    taskEntitiesPath() {\n      if (this.task) {\n        const episodeId = this.currentEpisode\n          ? this.currentEpisode.id\n          : this.$route.params.episode_id\n        return getTaskEntitiesPath(this.task, episodeId)\n      } else {\n        return {\n          name: 'open-productions'\n        }\n      }\n    },\n\n    entityList() {\n      return this[`${this.currentType.toLowerCase()}List`]\n    },\n\n    /*\n     * Get the path to the previous task in the current entity.\n     */\n    previousEntityTaskPath() {\n      if (!this.task) return null\n      const entity = this.entityList.find(\n        entity => entity.id === this.task.entity_id\n      )\n      if (!entity) return null\n      entity.tasks = entity.tasks || []\n      const tasksLength = entity.tasks.length\n      const taskIndex = entity.tasks.findIndex(\n        taskId => taskId === this.task.id\n      )\n      const previousTaskIndex = taskIndex - 1\n      const previousTaskId =\n        previousTaskIndex < 0\n          ? entity.tasks[tasksLength - 1]\n          : entity.tasks[previousTaskIndex]\n      return previousTaskId ? this.taskPath({ id: previousTaskId }) : null\n    },\n\n    /*\n     * Get the path to the next task in the current entity.\n     */\n    nextEntityTaskPath() {\n      if (!this.task) return null\n      const entity = this.entityList.find(\n        entity => entity.id === this.task.entity_id\n      )\n      if (!entity) return null\n      entity.tasks = entity.tasks || []\n      const tasksLength = entity.tasks.length\n      const taskIndex = entity.tasks.findIndex(\n        taskId => taskId === this.task.id\n      )\n      const nextTaskIndex = taskIndex + 1\n      const nextTaskId =\n        nextTaskIndex >= tasksLength\n          ? entity.tasks[0]\n          : entity.tasks[nextTaskIndex]\n      return nextTaskId ? this.taskPath({ id: nextTaskId }) : null\n    },\n\n    /*\n     * Get the path to the previous task. The previous task is the fist task\n     * found in the previous entities with the same task type.\n     */\n    previousTaskPath() {\n      if (!this.task) return null\n\n      const entityIndex = this.getEntityIndex(this.task.entity_id)\n      if (entityIndex === -1) return null\n\n      let previousEntityIndex = this.getPreviousEntityIndex(entityIndex)\n      let taskId = null\n      while (!taskId && previousEntityIndex !== entityIndex) {\n        taskId = this.getTaskIdFromEntity(previousEntityIndex)\n        if (!taskId) {\n          previousEntityIndex = this.getPreviousEntityIndex(previousEntityIndex)\n        }\n      }\n\n      return taskId ? this.taskPath({ id: taskId }) : null\n    },\n\n    /*\n     * Get the path to the next task. The next task is the fist task\n     * found in the next entities with the same task type.\n     */\n    nextTaskPath() {\n      if (!this.task) return null\n\n      const entityIndex = this.getEntityIndex(this.task.entity_id)\n      if (entityIndex === -1) return null\n\n      let nextEntityIndex = this.getNextEntityIndex(entityIndex)\n      let taskId = null\n      while (!taskId && nextEntityIndex !== entityIndex) {\n        taskId = this.getTaskIdFromEntity(nextEntityIndex)\n        if (!taskId) {\n          nextEntityIndex = this.getNextEntityIndex(nextEntityIndex)\n        }\n      }\n\n      return taskId ? this.taskPath({ id: taskId }) : null\n    },\n\n    title() {\n      if (this.task) {\n        const type = this.task.entity_type_name\n        let entityName = this.task.full_entity_name || this.task.entity_name\n        if (this.isTVShow && type === 'Shot') {\n          entityName = entityName.split('/').splice(1).join('/')\n        }\n        if (this.isTVShow && type === 'Episode') {\n          entityName = this.task.entity_name\n        }\n        return `${entityName}`\n      } else {\n        return 'Loading...'\n      }\n    },\n\n    windowTitle() {\n      if (this.task) {\n        const taskTypeName = this.task.task_type_name\n        return `${this.title} / ${taskTypeName}`\n      } else {\n        return 'Loading...'\n      }\n    },\n\n    deleteText() {\n      if (this.task) {\n        const taskType = this.taskTypeMap.get(this.task.task_type_id)\n        return this.$t('main.delete_text', {\n          name: `${this.task.entity_name} / ${taskType.name}`\n        })\n      } else {\n        return ''\n      }\n    },\n\n    assignees() {\n      return sortPeople(\n        this.task.assignees.map(personId => this.personMap.get(personId))\n      )\n    },\n\n    isAssigned() {\n      return (\n        this.task?.assignees.some(personId => personId === this.user.id) ??\n        false\n      )\n    },\n\n    isCommentingAllowed() {\n      return (\n        this.isAssigned ||\n        this.isCurrentUserClient ||\n        this.isDepartmentSupervisor ||\n        this.isCurrentUserManager\n      )\n    },\n\n    isDepartmentSupervisor() {\n      if (!this.isCurrentUserSupervisor) {\n        return false\n      }\n      if (this.user.departments.length === 0) {\n        return true\n      }\n      return this.user.departments.includes(this.taskType?.department_id)\n    },\n\n    isHookupButtonVisible() {\n      return this.task?.entity_type_name === 'Shot'\n    },\n\n    taskType() {\n      return this.taskTypeMap.get(this.task?.task_type_id)\n    },\n\n    currentTeam() {\n      return sortPeople(\n        this.currentProduction.team.map(personId =>\n          this.personMap.get(personId)\n        )\n      )\n    }\n  },\n\n  methods: {\n    ...mapActions([\n      'addAttachmentToComment',\n      'ackComment',\n      'addCommentPreview',\n      'addCommentExtraPreview',\n      'commentTask',\n      'commentTaskWithPreview',\n      'changeCommentPreview',\n      'clearSelectedTasks',\n      'deleteAttachment',\n      'deleteTask',\n      'deleteTaskPreview',\n      'deleteTaskComment',\n      'editTaskComment',\n      'loadComment',\n      'loadEpisodes',\n      'loadTask',\n      'loadShots',\n      'loadAssets',\n      'loadPreviewFileFormData',\n      'loadTaskComments',\n      'refreshComment',\n      'refreshPreview',\n      'pinComment',\n      'subscribeToTask',\n      'setCurrentEpisode',\n      'unsubscribeFromTask',\n      'updatePreviewAnnotation'\n    ]),\n\n    getPreviousEntityIndex(index) {\n      const result = index - 1\n      return result < 0 ? this.entityList.length - 1 : result\n    },\n\n    getNextEntityIndex(index) {\n      const result = index + 1\n      return result >= this.entityList.length ? 0 : result\n    },\n\n    getEntityIndex(entityId) {\n      return this.entityList.findIndex(entity => entity.id === entityId)\n    },\n\n    getTaskIdFromEntity(index) {\n      const taskTypeId = this.task.task_type_id\n      const entity = this.entityList[index]\n      if (!entity) return null\n      return entity.tasks.find(ctaskId => {\n        const task = this.taskMap.get(ctaskId)\n        return task && task.task_type_id === taskTypeId\n      })\n    },\n\n    loadTaskData() {\n      const task = this.getCurrentTask()\n      if (!task) {\n        this.taskLoading = { isLoading: true, isError: false }\n        return this.loadTask({ taskId: this.route.params.task_id })\n          .then(task => {\n            let loadingFunction = callback => {\n              this.loadAssets().then(callback)\n            }\n\n            if (task.entity_type_name === 'Shot') {\n              loadingFunction = callback => {\n                this.loadEpisodes()\n                  .then(() => {\n                    if (this.isTVShow) {\n                      this.setCurrentEpisode(task.episode.id)\n                    }\n                    this.loadShots(callback)\n                  })\n                  .catch(callback)\n              }\n            }\n            return loadingFunction(() => {\n              this.task = task\n              return this.loadTaskComments({\n                taskId: task.id,\n                entityId: task.entity_id\n              })\n                .then(() => {\n                  this.reset()\n                  this.taskLoading = { isLoading: false, isError: false }\n                })\n                .catch(err => {\n                  console.error(err)\n                  this.taskLoading = { isLoading: false, isError: true }\n                })\n            })\n          })\n          .catch(err => {\n            console.error(err)\n            this.taskLoading = { isLoading: false, isError: true }\n          })\n      } else {\n        const taskId = this.route.params.task_id\n        this.task = task\n        return this.loadTaskComments({\n          taskId,\n          entityId: task.entity_id\n        })\n          .then(() => {\n            this.reset()\n          })\n          .catch(err => {\n            console.error(err)\n            this.taskLoading.isError = true\n          })\n          .finally(() => {\n            this.taskLoading.isLoading = false\n          })\n      }\n    },\n\n    getCurrentTask() {\n      return this.taskMap.get(this.route.params.task_id)\n    },\n\n    getCurrentTaskComments() {\n      return this.getTaskComments(this.route.params.task_id)\n    },\n\n    getCurrentTaskPreviews() {\n      return this.getTaskPreviews(this.route.params.task_id)\n    },\n\n    addComment(\n      comment,\n      attachment,\n      checklist,\n      taskStatusId,\n      revision = undefined,\n      link = undefined\n    ) {\n      const params = {\n        taskId: this.task.id,\n        taskStatusId,\n        attachment,\n        checklist,\n        comment,\n        links: link ? [link] : null,\n        revision\n      }\n      const action =\n        this.previewForms.length > 0 ? 'commentTaskWithPreview' : 'commentTask'\n      this.loading.addComment = true\n      this.errors.addComment = false\n      this.errors.addCommentMaxRetakes = false\n      this.$store\n        .dispatch(action, params)\n        .then(() => {\n          drafts.clearTaskDraft(this.task.id)\n          this.$refs['add-comment']?.reset()\n          this.reset()\n          this.loading.addComment = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.errors.addComment = true\n          this.loading.addComment = false\n          const isRetakeError = err.body?.message?.includes('retake') ?? false\n          this.errors.addComment = !isRetakeError\n          this.errors.addCommentMaxRetakes = isRetakeError\n        })\n    },\n\n    hideHookupPlaylistModal() {\n      this.modals.hookupPlaylist = false\n    },\n\n    /*\n     * Create a playlist with the previous, current and next task within the\n     * same sequence\n     */\n    showHookupPlaylistModal() {\n      const currentTaskId = this.task.id\n      const tasks = Array.from(this.taskMap.values())\n        // get all tasks for this sequence\n        .filter(\n          task =>\n            task.episode_id === this.task.episode_id &&\n            task.sequence_name === this.task.sequence_name &&\n            task.task_type_id === this.task.task_type_id\n        )\n        // sort the tasks by shot name\n        .sort((a, b) =>\n          a.entity_name.localeCompare(b.entity_name, undefined, {\n            numeric: true\n          })\n        )\n\n      const currentTaskIndex = tasks.findIndex(\n        task => task.id === currentTaskId\n      )\n\n      const previousTaskId =\n        currentTaskIndex > 0 ? tasks[currentTaskIndex - 1].id : null\n\n      const nextTaskId =\n        currentTaskIndex < tasks.length - 1\n          ? tasks[currentTaskIndex + 1].id\n          : null\n\n      this.hookupPlaylistTaskIds = [currentTaskId]\n      if (previousTaskId) this.hookupPlaylistTaskIds.unshift(previousTaskId)\n      if (nextTaskId) this.hookupPlaylistTaskIds.push(nextTaskId)\n\n      this.modals.hookupPlaylist = true\n    },\n\n    reset({ keepPreviewFiles = false } = {}) {\n      this.resetModals()\n      this.resetPreview(false)\n      if (!keepPreviewFiles) {\n        this.clearPreviewFiles(false)\n      }\n      this.taskComments = this.getCurrentTaskComments()\n      this.taskPreviews = this.getCurrentTaskPreviews()\n      this.task = this.getCurrentTask()\n      this.resetDraft()\n      setTimeout(() => {\n        if (this.$route.params.preview_id) {\n          this.selectedPreviewId = this.$route.params.preview_id\n        }\n      }, 200)\n    },\n\n    selectFile(forms) {\n      this.previewForms = this.previewForms.concat(forms)\n      this.loadPreviewFileFormData(this.previewForms)\n    },\n\n    clearPreviewFiles() {\n      this.previewForms = []\n      this.loadPreviewFileFormData(this.previewForms)\n      this.$store.commit('CLEAR_UPLOAD_PROGRESS')\n    },\n\n    isHighlighted(comment) {\n      return comment.preview && comment.preview.id === this.currentPreviewId\n    },\n\n    createExtraPreview(forms) {\n      this.selectFile(forms)\n      this.errors.addExtraPreview = false\n      this.loading.addExtraPreview = true\n      const comment = this.getCurrentTaskComments().find(comment =>\n        comment.previews.find(preview => preview.id === this.currentPreviewId)\n      )\n      this.addCommentExtraPreview({\n        taskId: this.task.id,\n        commentId: comment?.id,\n        previewId: this.currentPreviewId\n      })\n        .then(() => {\n          this.loading.addExtraPreview = false\n          this.modals.addExtraPreview = false\n          this.$refs['add-extra-preview-modal'].reset()\n          this.clearPreviewFiles()\n          setTimeout(() => {\n            this.$refs['preview-player'].displayLast()\n          }, 0)\n        })\n        .catch(err => {\n          console.error(err)\n          this.errors.addExtraPreview = true\n          this.loading.addExtraPreview = false\n        })\n    },\n\n    resetPreview(changeRoute = true) {\n      const previews = this.taskPreviews || []\n      const preview = previews.length > 0 ? previews[0] : null\n      this.taskComments = this.getCurrentTaskComments()\n      this.taskPreviews = this.getCurrentTaskPreviews()\n      if (preview && changeRoute) {\n        this.$router.push(this.previewPath(preview.id))\n      }\n    },\n\n    setPreview() {\n      const previewPlayer = this.$refs['preview-player']\n      if (!previewPlayer) return\n      this.loading.setPreview = true\n      this.errors.setPreview = false\n      const previewId = previewPlayer.currentPreview.id\n      this.$store\n        .dispatch('setPreview', {\n          taskId: this.task.id,\n          entityId: this.task.entity.id,\n          previewId\n        })\n        .then(() => {\n          this.loading.setPreview = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.errors.setPreview = true\n        })\n    },\n\n    async saveComment(comment) {\n      try {\n        await this.editTaskComment({\n          taskId: this.task.id,\n          comment\n        })\n      } catch (err) {\n        console.error(err)\n        await this.loadTaskData()\n      }\n    },\n\n    confirmDeleteTaskComment() {\n      this.loading.deleteComment = true\n      this.errors.deleteComment = false\n      const commentId = this.commentToEdit.id\n\n      this.deleteTaskComment({\n        taskId: this.task.id,\n        commentId\n      })\n        .then(() => {\n          this.loading.deleteComment = false\n          this.reset()\n          if (this.isPreviews) this.resetPreview()\n          this.modals.deleteComment = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.loading.deleteComment = false\n          this.errors.deleteComment = true\n        })\n    },\n\n    confirmDeleteTaskPreview() {\n      this.loading.deleteExtraPreview = true\n      this.errors.deleteExtraPreview = false\n      const previewId = this.currentPreviewId\n      const comment = this.getCurrentTaskComments().find(comment => {\n        return comment.previews.findIndex(p => p.id === previewId) >= 0\n      })\n\n      this.$refs['preview-player'].displayFirst()\n      this.deleteTaskPreview({\n        taskId: this.task.id,\n        commentId: comment.id,\n        previewId: this.currentExtraPreviewId\n      })\n        .then(() => {\n          this.loading.deleteExtraPreview = false\n          this.resetPreview()\n          this.hideRemoveExtraPreviewModal()\n        })\n        .catch(err => {\n          console.error(err)\n          this.loading.deleteExtraPreview = false\n          this.errors.deleteExtraPreview = true\n        })\n    },\n\n    onPreviewAdded(eventData) {\n      const taskId = eventData.task_id\n      const commentId = eventData.comment_id\n      const previewId = eventData.preview_file_id\n      const revision = eventData.revision\n      const extension = eventData.extension\n      const comment = this.$store.getters.getTaskComment(taskId, commentId)\n\n      if (\n        this.task &&\n        comment &&\n        comment.previews &&\n        (comment.previews.length === 0 ||\n          comment.previews[0].id !== previewId) &&\n        taskId === this.task.id\n      ) {\n        this.$store.commit('ADD_PREVIEW_END', {\n          preview: {\n            id: previewId,\n            revision,\n            extension\n          },\n          taskId,\n          commentId,\n          comment\n        })\n        this.reset({ keepPreviewFiles: true })\n      }\n    },\n\n    toggleSubscribe() {\n      if (this.task && !this.isAssigned) {\n        if (this.task.is_subscribed) {\n          this.unsubscribeFromTask(this.task.id)\n        } else {\n          this.subscribeToTask(this.task.id)\n        }\n      }\n    },\n\n    taskPath(task, section = 'task') {\n      if (!task) {\n        task = this.task\n      } else {\n        task.project_id = this.task.project_id\n        task.episode_id = this.task.episode_id\n      }\n\n      let route = { name: 'open-productions' }\n      if (task) {\n        route = {\n          name: section,\n          params: {\n            type: this.currentType.toLowerCase() + 's',\n            production_id: task.project_id,\n            task_id: task.id\n          }\n        }\n\n        if (this.isTVShow && this.currentEpisode) {\n          route.name = `episode-${section}`\n          route.params.episode_id = task.episode_id || this.currentEpisode.id\n        }\n      }\n      return route\n    },\n\n    previewPath(previewId) {\n      const route = this.taskPath(this.task, 'task-preview')\n      if (this.isTVShow) {\n        const taskType = this.taskTypeMap.get(this.task.task_type_id)\n        route.name = 'episode-task-preview'\n        if (taskType.for_entity === 'Episode') {\n          route.name = 'episode-episode-task-preview'\n        }\n      }\n      if (route.params) {\n        route.params.preview_id = previewId\n      }\n      return route\n    },\n\n    onAnnotationChanged({ preview, additions, deletions, updates }) {\n      const taskId = this.task.id\n      this.updatePreviewAnnotation({\n        taskId,\n        preview,\n        additions,\n        deletions,\n        updates\n      })\n    },\n\n    onAddExtraPreviewClicked() {\n      this.clearPreviewFiles()\n      this.modals.addExtraPreview = true\n    },\n\n    onRemoveExtraPreviewClicked(preview) {\n      this.showRemoveExtraPreviewModal(preview)\n    },\n\n    hideExtraPreviewModal() {\n      this.modals.addExtraPreview = false\n    },\n\n    showRemoveExtraPreviewModal(preview) {\n      this.currentExtraPreviewId = preview.id\n      this.modals.deleteExtraPreview = true\n    },\n\n    hideRemoveExtraPreviewModal() {\n      this.modals.deleteExtraPreview = false\n    },\n\n    onAddPreviewClicked() {\n      this.modals.addPreview = true\n    },\n\n    closeAddPreviewModal() {\n      this.modals.addPreview = false\n    },\n\n    confirmAddPreviewModal(forms) {\n      this.selectFile(forms)\n      this.closeAddPreviewModal()\n    },\n\n    onAckComment(comment) {\n      this.ackComment(comment)\n    },\n\n    onDuplicateComment(comment) {\n      this.$refs['add-comment'].setValue(comment)\n    },\n\n    onPinComment(comment) {\n      this.pinComment(comment)\n    },\n\n    onEditComment(comment) {\n      this.commentToEdit = comment\n      this.modals.editComment = true\n    },\n\n    onDeleteComment(comment) {\n      this.commentToEdit = comment\n      this.modals.deleteComment = true\n    },\n\n    onCancelEditComment(comment) {\n      this.modals.editComment = false\n    },\n\n    onCancelDeleteComment(comment) {\n      this.modals.deleteComment = false\n    },\n\n    onFrameUpdated(frame) {\n      this.currentFrame = frame\n    },\n\n    onPreviewFormRemoved(previewForm) {\n      this.previewForms = this.previewForms.filter(f => f !== previewForm)\n      this.loadPreviewFileFormData(this.previewForms)\n    },\n\n    changeCurrentPreview(preview) {\n      this.$router.push(this.previewPath(preview.id))\n    },\n\n    onRemoteAcknowledge(eventData, type) {\n      if (this.task) {\n        const comment = this.taskComments.find(\n          c => c.id === eventData.comment_id\n        )\n        const user = this.personMap.get(eventData.person_id)\n        if (comment && user) {\n          if (this.user.id === user.id) {\n            if (\n              (type === 'ack' && !comment.acknowledgements.includes(user.id)) ||\n              (type === 'unack' && comment.acknowledgements.includes(user.id))\n            ) {\n              this.$store.commit('ACK_COMMENT', { comment, user })\n            }\n          } else {\n            this.$store.commit('ACK_COMMENT', { comment, user })\n          }\n        }\n      }\n    },\n\n    isStatusChange(index) {\n      const comments = this.taskComments\n      const comment = comments[index]\n      return (\n        index === comments.length - 1 ||\n        comment.task_status_id !== comments[index + 1].task_status_id\n      )\n    },\n\n    timeCodeClicked({\n      versionRevision,\n      minutes,\n      seconds,\n      milliseconds,\n      frame\n    }) {\n      this.changeCurrentPreview(\n        this.taskPreviews.find(p => p.revision === parseInt(versionRevision))\n      )\n      setTimeout(() => {\n        this.$refs['preview-player']?.setCurrentFrame(frame)\n        this.$refs['preview-player']?.focus()\n      }, 100)\n    },\n\n    onPreviewsOrderChanged() {\n      this.taskPreviews = this.getCurrentTaskPreviews()\n    },\n\n    async extractAnnotationSnapshots() {\n      this.$refs['add-comment'].showAnnotationLoading()\n      const files =\n        await this.$refs['preview-player'].extractAnnotationSnapshots()\n      this.$refs['add-comment'].setAnnotationSnapshots(files)\n      this.$refs['add-comment'].hideAnnotationLoading()\n      return files\n    }\n  },\n\n  watch: {\n    $route() {\n      if (this.task && this.$route.params.task_id !== this.task.id) {\n        this.loadTaskData()\n      }\n      if (this.$route.params.preview_id !== this.selectedPreviewId) {\n        this.selectedPreviewId = this.$route.params.preview_id\n      }\n    },\n\n    currentProduction() {\n      this.loadTaskData()\n    },\n\n    selectedPreviewId() {\n      if (this.task && this.selectedPreviewId) {\n        this.$router.push(this.previewPath(this.selectedPreviewId))\n      }\n    }\n  },\n\n  socket: {\n    events: {\n      'preview-file:add-file'(eventData) {\n        this.onPreviewAdded(eventData)\n      },\n\n      'preview-file:update'(eventData) {\n        const comment = this.taskComments.find(\n          c =>\n            c.previews &&\n            c.previews.length > 0 &&\n            c.previews[0].id === eventData.preview_file_id\n        )\n        if (comment && this.task) {\n          this.refreshPreview({\n            taskId: this.task.id,\n            previewId: eventData.preview_file_id\n          }).then(preview => {\n            comment.previews[0].validation_status = preview.validation_status\n          })\n        }\n      },\n\n      'comment:acknowledge'(eventData) {\n        this.onRemoteAcknowledge(eventData, 'ack')\n      },\n\n      'comment:unacknowledge'(eventData) {\n        this.onRemoteAcknowledge(eventData, 'unack')\n      },\n\n      'comment:new'(eventData) {\n        setTimeout(() => {\n          if (\n            this.getCurrentTaskComments().length !== this.taskComments.length\n          ) {\n            this.taskComments = this.getCurrentTaskComments()\n            this.taskPreviews = this.getCurrentTaskPreviews()\n          }\n        }, 1000)\n      },\n\n      'comment:update'(eventData) {\n        const commentId = eventData.comment_id\n        if (!this.taskComments.some(({ id }) => id === commentId)) {\n          return\n        }\n        this.loadComment({ commentId }).catch(console.error)\n      },\n\n      'comment:reply'(eventData) {\n        if (this.task) {\n          const comment = this.taskComments.find(\n            c => c.id === eventData.comment_id\n          )\n          if (comment) {\n            if (!comment.replies) comment.replies = []\n            const hasReply = comment.replies.some(\n              reply => reply.id === eventData.reply_id\n            )\n            if (!hasReply) {\n              this.refreshComment({\n                commentId: eventData.comment_id\n              })\n                .then(remoteComment => {\n                  comment.replies = remoteComment.replies\n                })\n                .catch(console.error)\n            }\n          }\n        }\n      },\n\n      'comment:delete'(eventData) {\n        const task = this.getTask()\n        if (task) {\n          const comments = this.getComments()\n          const comment = comments.find(c => c.id === eventData.comment_id)\n          if (comment) {\n            this.$store.commit('REMOVE_TASK_COMMENT', { task, comment })\n            this.taskComments = this.getCurrentTaskComments()\n            this.taskPreviews = this.getCurrentTaskPreviews()\n          }\n        }\n      },\n\n      'comment:delete-reply'(eventData) {\n        if (this.task) {\n          const comment = this.taskComments.find(\n            c => c.id === eventData.comment_id\n          )\n          if (comment) {\n            if (!comment.replies) comment.replies = []\n            this.$store.commit('REMOVE_REPLY_FROM_COMMENT', {\n              comment,\n              reply: { id: eventData.reply_id }\n            })\n          }\n        }\n      },\n\n      'preview-file:annotation-update'(eventData) {\n        const previewPlayer = this.$refs['preview-player']\n        if (!previewPlayer) return\n        const isValid = previewPlayer.isValidPreviewModification(\n          eventData.preview_file_id,\n          eventData.updated_at\n        )\n        if (isValid) {\n          this.refreshPreview({\n            previewId: previewPlayer.currentPreview.id,\n            taskId: previewPlayer.currentPreview.task_id\n          }).then(() => {\n            if (!previewPlayer.notSaved) {\n              this.taskPreviews = this.getCurrentTaskPreviews()\n              this.$nextTick(() => {\n                previewPlayer.reloadAnnotations()\n                previewPlayer.loadAnnotation()\n              })\n            }\n          })\n        }\n      }\n    }\n  },\n\n  head() {\n    let title = 'Loading task... - Kitsu'\n    if (this.task) {\n      const taskTypeName = this.taskTypeMap.get(this.task.task_type_id).name\n      title = `${this.title} / ${taskTypeName} - Kitsu`\n    }\n    return { title }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dark .task-information,\n.dark .add-comment,\n.dark .comment,\n.dark .no-comment,\n.dark .column {\n  background: #46494f;\n  border-color: $dark-grey;\n  box-shadow: 0 0 6px #333;\n}\n\nh2.subtitle {\n  border: 0;\n  margin: 0;\n  padding: 0;\n}\n\n.page {\n  background: #f9f9f9;\n  margin-top: 60px;\n  padding: 0;\n}\n\n.page.column {\n  background: var(--background-page);\n  padding-bottom: 1em;\n}\n\n.page-header {\n  margin: 1em 1em 0 1em;\n  padding-right: 0;\n}\n\n.navigation-buttons {\n  font-size: 1em;\n  margin-top: 0.5em;\n  margin-bottom: 0.5em;\n}\n\n.navigation-buttons .arrow {\n  font-size: 1.2em;\n  font-weight: bold;\n}\n\n.navigation-buttons a {\n  color: $grey;\n}\n\n.selected {\n  border: 0;\n}\n\n.source {\n  color: #aaa;\n  font-size: 0.8em;\n}\n\nvideo {\n  width: 100%;\n}\n\n.validation-buttons button {\n  width: 100%;\n  margin-bottom: 0.3em;\n  border-width: 2px;\n  font-weight: bold;\n}\n\n.preview-row {\n  margin-bottom: 0.5em;\n}\n\n.add-comment {\n  margin-bottom: 1em;\n  padding: 1em;\n  box-shadow: 0 0 6px #e0e0e0;\n}\n\n.no-comment {\n  background: white;\n  box-shadow: 0 0 6px #e0e0e0;\n  padding: 1em;\n  border-radius: 5px;\n}\n\n.comment {\n  box-shadow: 0 0 6px #e0e0e0;\n  margin-top: 0.3em;\n}\n\n.task-columns {\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n}\n\n.task-column {\n  padding: 1em;\n}\n\n.comments-column {\n  flex: 1;\n}\n\n.preview-column {\n  overflow: auto;\n  flex: 2;\n}\n\n.preview-list {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.page-header .tag {\n  border-radius: 0;\n  font-weight: bold;\n  margin-right: 0.5em;\n}\n\n.assignees {\n  display: flex;\n}\n\n.assignees span {\n  margin-right: 0.2em;\n}\n\n.avatar-wrapper {\n  margin-right: 0.5em;\n}\n\n.entity-thumbnail {\n  margin-right: 0.3em;\n}\n\n.title {\n  margin: 0;\n  flex: 1;\n}\n\n.pull-right {\n  margin-left: auto;\n}\n\n.title a {\n  color: inherit;\n}\n\n.set-main-preview {\n  height: 30px;\n}\n\n.back-link {\n  padding-top: 6px;\n}\n\n.main-column {\n  display: flex;\n  flex-direction: column;\n  max-height: calc(100% - 60px);\n}\n\n.task-columns {\n  display: flex;\n  max-height: 100%;\n  overflow: hidden;\n}\n\n.task-column {\n  overflow-y: auto;\n}\n\n.info-block {\n  margin-right: 0;\n}\n\n.task-type.block {\n  margin-bottom: 0;\n}\n\n.entity-thumbnail {\n  margin-top: 5px;\n}\n\n.field-label {\n  width: 130px;\n  max-width: 130px;\n}\n\n.title {\n  margin: 0;\n  flex: 1;\n  line-height: 1.5em;\n  font-weight: 500;\n  color: $grey;\n}\n\n@media screen and (max-width: 768px) {\n  .action-button {\n    display: none;\n  }\n\n  .title {\n    font-size: 1.3em;\n    line-height: 1.5em;\n  }\n\n  .header-title {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .header-title .flexrow-item {\n    margin-bottom: 0.5em;\n  }\n\n  .task-column {\n    width: 100%;\n    overflow-y: initial;\n  }\n}\n</style>\n"],"names":["_sfc_main","EyeIcon","EyeOffIcon","_hoisted_1","_createElementBlock","$options","_ctx","$props","_createBlock","_component_eye_icon","_component_eye_off_icon","formatListMixin","taskMixin","AddComment","AddPreviewModal","ChevronDownIcon","ChevronLeftIcon","ChevronRightIcon","ChevronUpIcon","ComboboxStyled","Comment","CornerLeftUpIcon","DeleteModal","EditCommentModal","EntityThumbnail","KitsuIcon","ImageIcon","PageSubtitle","PeopleAvatar","PreviewPlayer","Spinner","SubscribeButton","TaskTypeName","ValidationTag","ViewPlaylistModal","mapGetters","assetsStore","editsStore","episodesStore","sequencesStore","shotsStore","a","b","preview","currentPreview","previewId","comment","border","episodeId","getTaskEntityPath","getTaskEntitiesPath","entity","tasksLength","previousTaskIndex","taskId","previousTaskId","nextTaskIndex","nextTaskId","entityIndex","previousEntityIndex","nextEntityIndex","type","entityName","taskTypeName","taskType","sortPeople","personId","mapActions","index","result","entityId","taskTypeId","ctaskId","task","err","loadingFunction","callback","attachment","checklist","taskStatusId","revision","link","params","action","drafts","isRetakeError","currentTaskId","tasks","currentTaskIndex","keepPreviewFiles","forms","changeRoute","previews","previewPlayer","commentId","p","eventData","extension","section","route","additions","deletions","updates","frame","previewForm","f","c","user","comments","versionRevision","minutes","seconds","milliseconds","files","id","reply","remoteComment","title","_hoisted_2","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_18","_hoisted_20","_hoisted_22","_hoisted_23","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_openBlock","_createElementVNode","_hoisted_3","$data","_hoisted_4","_createVNode","_component_router_link","_withCtx","_component_corner_left_up_icon","_component_chevron_left_icon","_createCommentVNode","_component_chevron_right_icon","_component_task_type_name","_component_entity_thumbnail","_createTextVNode","_toDisplayString","_component_validation_tag","_hoisted_10","_Fragment","_renderList","person","_component_people_avatar","_component_subscribe_button","_component_chevron_up_icon","_component_chevron_down_icon","_hoisted_11","_hoisted_15","_component_combobox_styled","_cache","$event","_hoisted_16","_hoisted_17","args","_component_kitsu_icon","_normalizeClass","_component_image_icon","_hoisted_19","_component_view_playlist_modal","_hoisted_21","_component_preview_player","_component_page_subtitle","_hoisted_24","_hoisted_41","_component_add_comment","_hoisted_42","_component_XyzTransitionGroup","_component_comment","_hoisted_43","_hoisted_44","_component_spinner","_component_add_preview_modal","_component_edit_comment_modal","_component_delete_modal"],"mappings":"0dAUA,MAAKA,GAAU,CACb,KAAM,mBAEN,WAAY,CACV,QAAAC,EACAC,WAAAA,EACD,EAED,MAAO,CACL,WAAY,CACV,QAAS,GACT,KAAM,OACR,CACD,EAED,MAAO,CAAC,OAAO,EAEf,SAAU,CACR,aAAc,CACZ,OAAK,KAAK,WAGD,KAAK,GAAG,iCAAiC,EAFzC,KAAK,GAAG,+BAA+B,CAIlD,CACF,CACF,EApCAC,GAAA,CAAA,OAAA,gFACEC,EAGS,SAAA,CAHD,MAAM,SAAU,MAAOC,EAAW,YAAG,uBAAOC,EAAK,MAAA,OAAA,KACjBC,EAAU,gBAAhDC,EAAoDC,EAAA,CAFxD,IAAA,EAEc,MAAM,wBAChBD,EAA6CE,EAAA,CAHjD,IAAA,EAGkB,MAAM,kBAHxB,EAAA,EAAAP,EAAA,iCCqbKH,GAAU,CACb,KAAM,OAEN,OAAQ,CAACW,GAAiBC,EAAS,EAEnC,WAAY,CACV,WAAAC,GACA,gBAAAC,GACA,gBAAAC,GACA,gBAAAC,GACA,iBAAAC,iBACAC,GACA,eAAAC,GACA,QAAAC,GACA,iBAAAC,GACA,YAAAC,GACA,iBAAAC,GACA,gBAAAC,GACA,UAAAC,GACA,UAAAC,GACA,aAAAC,GACA,aAAAC,GACA,cAAAC,EACA,QAAAC,EACA,gBAAAC,GACA,aAAAC,EACA,cAAAC,EACA,kBAAAC,CACD,EAED,SAAU,CACR,MAAO,CACL,aAAc,KAAK,YACrB,CACD,EAED,MAAO,CACL,MAAO,CACL,aAAc,CAAE,EAChB,aAAc,CAAE,EAChB,aAAc,EACd,YAAa,KACb,sBAAuB,CAAE,EACzB,YAAa,aACb,YAAa,CACX,UAAW,GACX,QAAS,EACV,EACD,OAAQ,CACN,WAAY,GACZ,gBAAiB,GACjB,mBAAoB,GACpB,cAAe,GACf,YAAa,GACb,eAAgB,EACjB,EACD,QAAS,CACP,WAAY,GACZ,WAAY,GACZ,gBAAiB,GACjB,WAAY,GACZ,cAAe,GACf,YAAa,EACd,EACD,OAAQ,CACN,WAAY,GACZ,qBAAsB,GACtB,WAAY,GACZ,gBAAiB,GACjB,WAAY,GACZ,cAAe,GACf,YAAa,EACd,EACD,mBAAoB,KACpB,wBAAyB,KACzB,KAAM,KACN,aAAc,CAAE,EAChB,aAAc,CAAE,EAChB,cAAe,KACf,kBAAmB,IACrB,CACD,EAED,SAAU,CACR,KAAK,mBAAkB,CACxB,EAED,SAAU,CACR,KAAK,eAAe,KAAK,IAAM,CAC7B,KAAK,MAAK,CACX,CAAA,EACD,KAAK,UAAU,IAAM,CACf,KAAK,MAAM,cAAc,IAC3B,KAAK,MAAM,cAAc,EAAE,UAAY,IACvC,OAAO,SAAS,EAAG,CAAC,EAEvB,CAAA,CACF,EAED,SAAU,CACR,GAAGC,EAAW,CACZ,iBACA,oBACA,iBACA,kBACA,kBACA,kBACA,iBACA,sBACA,sBACA,uBACA,0BACA,kBACA,WACA,YACA,gBACA,QACA,UACA,qBACA,aACA,2BACA,UACA,cACA,MACF,CAAC,EAED,WAAY,CACV,OAAOC,GAAY,MAAM,MAC1B,EAED,UAAW,CACT,OAAOC,GAAW,MAAM,KACzB,EAED,aAAc,CACZ,OAAOC,GAAc,MAAM,QAC5B,EAED,cAAe,CACb,OAAOC,GAAe,MAAM,SAC7B,EAED,UAAW,CACT,OAAOC,GAAW,MAAM,KACzB,EAED,eAAgB,CACd,OAAO,KAAK,MAAQ,KAAK,KAAK,MAC/B,EAED,aAAc,CAEZ,MADqB,CAAC,OAAQ,UAAW,WAAY,MAAM,EAC1C,SAAS,KAAK,KAAK,gBAAgB,EAC3C,KAAK,KAAK,iBAEV,OAEV,EAED,gBAAiB,CACf,MAAO,CAAC,GAAG,KAAK,YAAY,EACzB,KAAK,CAACC,EAAGC,IAAMA,EAAE,SAAWD,EAAE,QAAQ,EACtC,IAAIE,IACI,CACL,MAAO,IAAIA,EAAQ,QAAQ,GAC3B,MAAOA,EAAQ,EACjB,EACD,CACJ,EAED,wBAAyB,CACvB,OACE,KAAK,sBACL,KAAK,MACL,KAAK,KAAK,QACV,KAAK,KAAK,OAAO,kBAAoB,KAAK,kBAC1C,CAAC,MAAO,KAAK,EAAE,SAAS,KAAK,SAAS,CAEzC,EAED,SAAU,CACR,OAAO,KAAK,YAAc,KAC3B,EAED,yBAA0B,CACxB,GAAI,KAAK,KAAM,CACb,GAAI,KAAK,sBAAwB,KAAK,oBACpC,MAAO,GACF,GAAI,KAAK,wBACd,OAAI,KAAK,KAAK,YAAY,SAAW,EAC5B,GAEA,CAAC,KAAK,KAAK,YAAY,SAAS,KAAK,UAAU,aAAa,CAGzE,CACA,MAAO,EACR,EAED,WAAY,CACV,OAAO,KAAK,eAAiB,KAAK,eAAe,UAAY,EAC9D,EAED,kBAAmB,CACjB,OAAO,KAAK,eAAiB,KAAK,eAAe,GAAK,EACvD,EAED,gBAAiB,CACf,GAAI,KAAK,WAAY,CACnB,IAAIC,EAAiB,KAAK,aAAa,CAAC,EACxC,MAAMC,EAAY,KAAK,MAAM,OAAO,WACpC,OAAI,KAAK,oBACPD,EAAiB,KAAK,aAAa,KAAKD,GAC/BA,EAAQ,KAAOE,CACvB,GAEID,MAEP,QAAO,IAEV,EAED,uBAAwB,CACtB,OAAO,KAAK,aAAa,KAAKE,GAC5BA,EAAQ,UAAU,KAChBH,GAAWA,EAAQ,WAAa,KAAK,eACvC,CACF,CACD,EAED,iBAAkB,CAChB,OAAO,KAAK,gBAAgB,UAAY,CACzC,EAED,gBAAiB,CACf,IAAII,EAAS,cACb,OAAI,KAAK,OAAMA,EAAS,KAAK,KAAK,iBAC3B,CACL,cAAe,aAAaA,CAAM,EACpC,CACD,EAED,gBAAiB,CACf,OAAO,KAAK,SAAS,KAAK,KAAM,aAAa,CAC9C,EAED,YAAa,CACX,OAAO,KAAK,cAAgB,KAAK,aAAa,OAAS,CACxD,EAED,gBAAiB,CACf,GAAI,KAAK,KAAM,CACb,MAAMC,EAAY,KAAK,eACnB,KAAK,eAAe,GACpB,KAAK,OAAO,OAAO,WACvB,OAAOC,GAAkB,KAAK,KAAMD,CAAS,MAE7C,OAAO,CACL,KAAM,kBACR,CAEH,EAED,kBAAmB,CACjB,GAAI,KAAK,KAAM,CACb,MAAMA,EAAY,KAAK,eACnB,KAAK,eAAe,GACpB,KAAK,OAAO,OAAO,WACvB,OAAOE,GAAoB,KAAK,KAAMF,CAAS,MAE/C,OAAO,CACL,KAAM,kBACR,CAEH,EAED,YAAa,CACX,OAAO,KAAK,GAAG,KAAK,YAAY,YAAa,CAAA,MAAM,CACpD,EAKD,wBAAyB,CACvB,GAAI,CAAC,KAAK,KAAM,OAAO,KACvB,MAAMG,EAAS,KAAK,WAAW,KAC7BA,GAAUA,EAAO,KAAO,KAAK,KAAK,SACpC,EACA,GAAI,CAACA,EAAQ,OAAO,KACpBA,EAAO,MAAQA,EAAO,OAAS,CAAA,EAC/B,MAAMC,EAAcD,EAAO,MAAM,OAI3BE,EAHYF,EAAO,MAAM,UAC7BG,GAAUA,IAAW,KAAK,KAAK,EACjC,EACsC,EAChCC,EACJF,EAAoB,EAChBF,EAAO,MAAMC,EAAc,CAAC,EAC5BD,EAAO,MAAME,CAAiB,EACpC,OAAOE,EAAiB,KAAK,SAAS,CAAE,GAAIA,CAAe,CAAC,EAAI,IACjE,EAKD,oBAAqB,CACnB,GAAI,CAAC,KAAK,KAAM,OAAO,KACvB,MAAMJ,EAAS,KAAK,WAAW,KAC7BA,GAAUA,EAAO,KAAO,KAAK,KAAK,SACpC,EACA,GAAI,CAACA,EAAQ,OAAO,KACpBA,EAAO,MAAQA,EAAO,OAAS,CAAA,EAC/B,MAAMC,EAAcD,EAAO,MAAM,OAI3BK,EAHYL,EAAO,MAAM,UAC7BG,GAAUA,IAAW,KAAK,KAAK,EACjC,EACkC,EAC5BG,EACJD,GAAiBJ,EACbD,EAAO,MAAM,CAAC,EACdA,EAAO,MAAMK,CAAa,EAChC,OAAOC,EAAa,KAAK,SAAS,CAAE,GAAIA,CAAS,CAAG,EAAI,IACzD,EAMD,kBAAmB,CACjB,GAAI,CAAC,KAAK,KAAM,OAAO,KAEvB,MAAMC,EAAc,KAAK,eAAe,KAAK,KAAK,SAAS,EAC3D,GAAIA,IAAgB,GAAI,OAAO,KAE/B,IAAIC,EAAsB,KAAK,uBAAuBD,CAAW,EAC7DJ,EAAS,KACb,KAAO,CAACA,GAAUK,IAAwBD,GACxCJ,EAAS,KAAK,oBAAoBK,CAAmB,EAChDL,IACHK,EAAsB,KAAK,uBAAuBA,CAAmB,GAIzE,OAAOL,EAAS,KAAK,SAAS,CAAE,GAAIA,CAAO,CAAC,EAAI,IACjD,EAMD,cAAe,CACb,GAAI,CAAC,KAAK,KAAM,OAAO,KAEvB,MAAMI,EAAc,KAAK,eAAe,KAAK,KAAK,SAAS,EAC3D,GAAIA,IAAgB,GAAI,OAAO,KAE/B,IAAIE,EAAkB,KAAK,mBAAmBF,CAAW,EACrDJ,EAAS,KACb,KAAO,CAACA,GAAUM,IAAoBF,GACpCJ,EAAS,KAAK,oBAAoBM,CAAe,EAC5CN,IACHM,EAAkB,KAAK,mBAAmBA,CAAe,GAI7D,OAAON,EAAS,KAAK,SAAS,CAAE,GAAIA,CAAO,CAAC,EAAI,IACjD,EAED,OAAQ,CACN,GAAI,KAAK,KAAM,CACb,MAAMO,EAAO,KAAK,KAAK,iBACvB,IAAIC,EAAa,KAAK,KAAK,kBAAoB,KAAK,KAAK,YACzD,OAAI,KAAK,UAAYD,IAAS,SAC5BC,EAAaA,EAAW,MAAM,GAAG,EAAE,OAAO,CAAC,EAAE,KAAK,GAAG,GAEnD,KAAK,UAAYD,IAAS,YAC5BC,EAAa,KAAK,KAAK,aAElB,GAAGA,CAAU,OAEpB,OAAO,YAEV,EAED,aAAc,CACZ,GAAI,KAAK,KAAM,CACb,MAAMC,EAAe,KAAK,KAAK,eAC/B,MAAO,GAAG,KAAK,KAAK,MAAMA,CAAY,OAEtC,OAAO,YAEV,EAED,YAAa,CACX,GAAI,KAAK,KAAM,CACb,MAAMC,EAAW,KAAK,YAAY,IAAI,KAAK,KAAK,YAAY,EAC5D,OAAO,KAAK,GAAG,mBAAoB,CACjC,KAAM,GAAG,KAAK,KAAK,WAAW,MAAMA,EAAS,IAAI,EAClD,CAAA,MAED,OAAO,EAEV,EAED,WAAY,CACV,OAAOC,EACL,KAAK,KAAK,UAAU,IAAIC,GAAY,KAAK,UAAU,IAAIA,CAAQ,CAAC,CAClE,CACD,EAED,YAAa,CACX,OACE,KAAK,MAAM,UAAU,KAAKA,GAAYA,IAAa,KAAK,KAAK,EAAE,GAC/D,EAEH,EAED,qBAAsB,CACpB,OACE,KAAK,YACL,KAAK,qBACL,KAAK,wBACL,KAAK,oBAER,EAED,wBAAyB,CACvB,OAAK,KAAK,wBAGN,KAAK,KAAK,YAAY,SAAW,EAC5B,GAEF,KAAK,KAAK,YAAY,SAAS,KAAK,UAAU,aAAa,EALzD,EAMV,EAED,uBAAwB,CACtB,OAAO,KAAK,MAAM,mBAAqB,MACxC,EAED,UAAW,CACT,OAAO,KAAK,YAAY,IAAI,KAAK,MAAM,YAAY,CACpD,EAED,aAAc,CACZ,OAAOD,EACL,KAAK,kBAAkB,KAAK,IAAIC,GAC9B,KAAK,UAAU,IAAIA,CAAQ,CAC7B,CACF,CACF,CACD,EAED,QAAS,CACP,GAAGC,EAAW,CACZ,yBACA,aACA,oBACA,yBACA,cACA,yBACA,uBACA,qBACA,mBACA,aACA,oBACA,oBACA,kBACA,cACA,eACA,WACA,YACA,aACA,0BACA,mBACA,iBACA,iBACA,aACA,kBACA,oBACA,sBACA,yBACF,CAAC,EAED,uBAAuBC,EAAO,CAC5B,MAAMC,EAASD,EAAQ,EACvB,OAAOC,EAAS,EAAI,KAAK,WAAW,OAAS,EAAIA,CAClD,EAED,mBAAmBD,EAAO,CACxB,MAAMC,EAASD,EAAQ,EACvB,OAAOC,GAAU,KAAK,WAAW,OAAS,EAAIA,CAC/C,EAED,eAAeC,EAAU,CACvB,OAAO,KAAK,WAAW,UAAUnB,GAAUA,EAAO,KAAOmB,CAAQ,CAClE,EAED,oBAAoBF,EAAO,CACzB,MAAMG,EAAa,KAAK,KAAK,aACvBpB,EAAS,KAAK,WAAWiB,CAAK,EACpC,OAAKjB,EACEA,EAAO,MAAM,KAAKqB,GAAW,CAClC,MAAMC,EAAO,KAAK,QAAQ,IAAID,CAAO,EACrC,OAAOC,GAAQA,EAAK,eAAiBF,CACtC,CAAA,EAJmB,IAKrB,EAED,cAAe,CACb,MAAME,EAAO,KAAK,eAAc,EAChC,GAAKA,EAwCE,CACL,MAAMnB,EAAS,KAAK,MAAM,OAAO,QACjC,YAAK,KAAOmB,EACL,KAAK,iBAAiB,CAC3B,OAAAnB,EACA,SAAUmB,EAAK,SAChB,CAAA,EACE,KAAK,IAAM,CACV,KAAK,MAAK,CACX,CAAA,EACA,MAAMC,GAAO,CACZ,QAAQ,MAAMA,CAAG,EACjB,KAAK,YAAY,QAAU,EAC5B,CAAA,EACA,QAAQ,IAAM,CACb,KAAK,YAAY,UAAY,EAC9B,CAAA,CACL,KAxDE,aAAK,YAAc,CAAE,UAAW,GAAM,QAAS,EAAM,EAC9C,KAAK,SAAS,CAAE,OAAQ,KAAK,MAAM,OAAO,OAAS,CAAA,EACvD,KAAKD,GAAQ,CACZ,IAAIE,EAAkBC,GAAY,CAChC,KAAK,aAAa,KAAKA,CAAQ,CACjC,EAEA,OAAIH,EAAK,mBAAqB,SAC5BE,EAAkBC,GAAY,CAC5B,KAAK,aAAY,EACd,KAAK,IAAM,CACN,KAAK,UACP,KAAK,kBAAkBH,EAAK,QAAQ,EAAE,EAExC,KAAK,UAAUG,CAAQ,CACxB,CAAA,EACA,MAAMA,CAAQ,CACnB,GAEKD,EAAgB,KACrB,KAAK,KAAOF,EACL,KAAK,iBAAiB,CAC3B,OAAQA,EAAK,GACb,SAAUA,EAAK,SAChB,CAAA,EACE,KAAK,IAAM,CACV,KAAK,MAAK,EACV,KAAK,YAAc,CAAE,UAAW,GAAO,QAAS,EAAM,CACvD,CAAA,EACA,MAAMC,GAAO,CACZ,QAAQ,MAAMA,CAAG,EACjB,KAAK,YAAc,CAAE,UAAW,GAAO,QAAS,EAAK,CACtD,CAAA,EACJ,CACF,CAAA,EACA,MAAMA,GAAO,CACZ,QAAQ,MAAMA,CAAG,EACjB,KAAK,YAAc,CAAE,UAAW,GAAO,QAAS,EAAK,CACtD,CAAA,CAmBN,EAED,gBAAiB,CACf,OAAO,KAAK,QAAQ,IAAI,KAAK,MAAM,OAAO,OAAO,CAClD,EAED,wBAAyB,CACvB,OAAO,KAAK,gBAAgB,KAAK,MAAM,OAAO,OAAO,CACtD,EAED,wBAAyB,CACvB,OAAO,KAAK,gBAAgB,KAAK,MAAM,OAAO,OAAO,CACtD,EAED,WACE5B,EACA+B,EACAC,EACAC,EACAC,EAAW,OACXC,EAAO,OACP,CACA,MAAMC,EAAS,CACb,OAAQ,KAAK,KAAK,GAClB,aAAAH,EACA,WAAAF,EACA,UAAAC,EACA,QAAAhC,EACA,MAAOmC,EAAO,CAACA,CAAI,EAAI,KACvB,SAAAD,CACF,EACMG,EACJ,KAAK,aAAa,OAAS,EAAI,yBAA2B,cAC5D,KAAK,QAAQ,WAAa,GAC1B,KAAK,OAAO,WAAa,GACzB,KAAK,OAAO,qBAAuB,GACnC,KAAK,OACF,SAASA,EAAQD,CAAM,EACvB,KAAK,IAAM,CACVE,GAAO,eAAe,KAAK,KAAK,EAAE,EAClC,KAAK,MAAM,aAAa,GAAG,MAAK,EAChC,KAAK,MAAK,EACV,KAAK,QAAQ,WAAa,EAC3B,CAAA,EACA,MAAMV,GAAO,CACZ,QAAQ,MAAMA,CAAG,EACjB,KAAK,OAAO,WAAa,GACzB,KAAK,QAAQ,WAAa,GAC1B,MAAMW,EAAgBX,EAAI,MAAM,SAAS,SAAS,QAAQ,GAAK,GAC/D,KAAK,OAAO,WAAa,CAACW,EAC1B,KAAK,OAAO,qBAAuBA,CACpC,CAAA,CACJ,EAED,yBAA0B,CACxB,KAAK,OAAO,eAAiB,EAC9B,EAMD,yBAA0B,CACxB,MAAMC,EAAgB,KAAK,KAAK,GAC1BC,EAAQ,MAAM,KAAK,KAAK,QAAQ,OAAQ,CAAA,EAE3C,OACCd,GACEA,EAAK,aAAe,KAAK,KAAK,YAC9BA,EAAK,gBAAkB,KAAK,KAAK,eACjCA,EAAK,eAAiB,KAAK,KAAK,YACpC,EAEC,KAAK,CAAChC,EAAGC,IACRD,EAAE,YAAY,cAAcC,EAAE,YAAa,OAAW,CACpD,QAAS,EACV,CAAA,CACH,EAEI8C,EAAmBD,EAAM,UAC7Bd,GAAQA,EAAK,KAAOa,CACtB,EAEM/B,EACJiC,EAAmB,EAAID,EAAMC,EAAmB,CAAC,EAAE,GAAK,KAEpD/B,EACJ+B,EAAmBD,EAAM,OAAS,EAC9BA,EAAMC,EAAmB,CAAC,EAAE,GAC5B,KAEN,KAAK,sBAAwB,CAACF,CAAa,EACvC/B,GAAgB,KAAK,sBAAsB,QAAQA,CAAc,EACjEE,GAAY,KAAK,sBAAsB,KAAKA,CAAU,EAE1D,KAAK,OAAO,eAAiB,EAC9B,EAED,MAAM,CAAE,iBAAAgC,EAAmB,EAAM,EAAI,CAAA,EAAI,CACvC,KAAK,YAAW,EAChB,KAAK,aAAa,EAAK,EAClBA,GACH,KAAK,kBAAkB,EAAK,EAE9B,KAAK,aAAe,KAAK,uBAAsB,EAC/C,KAAK,aAAe,KAAK,uBAAsB,EAC/C,KAAK,KAAO,KAAK,eAAc,EAC/B,KAAK,WAAU,EACf,WAAW,IAAM,CACX,KAAK,OAAO,OAAO,aACrB,KAAK,kBAAoB,KAAK,OAAO,OAAO,aAE7C,GAAG,CACP,EAED,WAAWC,EAAO,CAChB,KAAK,aAAe,KAAK,aAAa,OAAOA,CAAK,EAClD,KAAK,wBAAwB,KAAK,YAAY,CAC/C,EAED,mBAAoB,CAClB,KAAK,aAAe,CAAA,EACpB,KAAK,wBAAwB,KAAK,YAAY,EAC9C,KAAK,OAAO,OAAO,uBAAuB,CAC3C,EAED,cAAc5C,EAAS,CACrB,OAAOA,EAAQ,SAAWA,EAAQ,QAAQ,KAAO,KAAK,gBACvD,EAED,mBAAmB4C,EAAO,CACxB,KAAK,WAAWA,CAAK,EACrB,KAAK,OAAO,gBAAkB,GAC9B,KAAK,QAAQ,gBAAkB,GAC/B,MAAM5C,EAAU,KAAK,uBAAwB,EAAC,KAAKA,GACjDA,EAAQ,SAAS,KAAKH,GAAWA,EAAQ,KAAO,KAAK,gBAAgB,CACvE,EACA,KAAK,uBAAuB,CAC1B,OAAQ,KAAK,KAAK,GAClB,UAAWG,GAAS,GACpB,UAAW,KAAK,gBACjB,CAAA,EACE,KAAK,IAAM,CACV,KAAK,QAAQ,gBAAkB,GAC/B,KAAK,OAAO,gBAAkB,GAC9B,KAAK,MAAM,yBAAyB,EAAE,MAAK,EAC3C,KAAK,kBAAiB,EACtB,WAAW,IAAM,CACf,KAAK,MAAM,gBAAgB,EAAE,YAAW,CAC1C,EAAG,CAAC,CACL,CAAA,EACA,MAAM4B,GAAO,CACZ,QAAQ,MAAMA,CAAG,EACjB,KAAK,OAAO,gBAAkB,GAC9B,KAAK,QAAQ,gBAAkB,EAChC,CAAA,CACJ,EAED,aAAaiB,EAAc,GAAM,CAC/B,MAAMC,EAAW,KAAK,cAAgB,CAAA,EAChCjD,EAAUiD,EAAS,OAAS,EAAIA,EAAS,CAAC,EAAI,KACpD,KAAK,aAAe,KAAK,uBAAsB,EAC/C,KAAK,aAAe,KAAK,uBAAsB,EAC3CjD,GAAWgD,GACb,KAAK,QAAQ,KAAK,KAAK,YAAYhD,EAAQ,EAAE,CAAC,CAEjD,EAED,YAAa,CACX,MAAMkD,EAAgB,KAAK,MAAM,gBAAgB,EACjD,GAAI,CAACA,EAAe,OACpB,KAAK,QAAQ,WAAa,GAC1B,KAAK,OAAO,WAAa,GACzB,MAAMhD,EAAYgD,EAAc,eAAe,GAC/C,KAAK,OACF,SAAS,aAAc,CACtB,OAAQ,KAAK,KAAK,GAClB,SAAU,KAAK,KAAK,OAAO,GAC3B,UAAAhD,CACD,CAAA,EACA,KAAK,IAAM,CACV,KAAK,QAAQ,WAAa,EAC3B,CAAA,EACA,MAAM6B,GAAO,CACZ,QAAQ,MAAMA,CAAG,EACjB,KAAK,OAAO,WAAa,EAC1B,CAAA,CACJ,EAED,MAAM,YAAY5B,EAAS,CACzB,GAAI,CACF,MAAM,KAAK,gBAAgB,CACzB,OAAQ,KAAK,KAAK,GAClB,QAAAA,CACD,CAAA,CACD,OAAO4B,EAAK,CACZ,QAAQ,MAAMA,CAAG,EACjB,MAAM,KAAK,aAAY,CACzB,CACD,EAED,0BAA2B,CACzB,KAAK,QAAQ,cAAgB,GAC7B,KAAK,OAAO,cAAgB,GAC5B,MAAMoB,EAAY,KAAK,cAAc,GAErC,KAAK,kBAAkB,CACrB,OAAQ,KAAK,KAAK,GAClB,UAAAA,CACD,CAAA,EACE,KAAK,IAAM,CACV,KAAK,QAAQ,cAAgB,GAC7B,KAAK,MAAK,EACN,KAAK,YAAY,KAAK,aAAY,EACtC,KAAK,OAAO,cAAgB,EAC7B,CAAA,EACA,MAAMpB,GAAO,CACZ,QAAQ,MAAMA,CAAG,EACjB,KAAK,QAAQ,cAAgB,GAC7B,KAAK,OAAO,cAAgB,EAC7B,CAAA,CACJ,EAED,0BAA2B,CACzB,KAAK,QAAQ,mBAAqB,GAClC,KAAK,OAAO,mBAAqB,GACjC,MAAM7B,EAAY,KAAK,iBACjBC,EAAU,KAAK,uBAAsB,EAAG,KAAKA,GAC1CA,EAAQ,SAAS,UAAUiD,GAAKA,EAAE,KAAOlD,CAAS,GAAK,CAC/D,EAED,KAAK,MAAM,gBAAgB,EAAE,aAAY,EACzC,KAAK,kBAAkB,CACrB,OAAQ,KAAK,KAAK,GAClB,UAAWC,EAAQ,GACnB,UAAW,KAAK,qBACjB,CAAA,EACE,KAAK,IAAM,CACV,KAAK,QAAQ,mBAAqB,GAClC,KAAK,aAAY,EACjB,KAAK,4BAA2B,CACjC,CAAA,EACA,MAAM4B,GAAO,CACZ,QAAQ,MAAMA,CAAG,EACjB,KAAK,QAAQ,mBAAqB,GAClC,KAAK,OAAO,mBAAqB,EAClC,CAAA,CACJ,EAED,eAAesB,EAAW,CACxB,MAAM1C,EAAS0C,EAAU,QACnBF,EAAYE,EAAU,WACtBnD,EAAYmD,EAAU,gBACtBhB,EAAWgB,EAAU,SACrBC,EAAYD,EAAU,UACtBlD,EAAU,KAAK,OAAO,QAAQ,eAAeQ,EAAQwC,CAAS,EAGlE,KAAK,MACLhD,GACAA,EAAQ,WACPA,EAAQ,SAAS,SAAW,GAC3BA,EAAQ,SAAS,CAAC,EAAE,KAAOD,IAC7BS,IAAW,KAAK,KAAK,KAErB,KAAK,OAAO,OAAO,kBAAmB,CACpC,QAAS,CACP,GAAIT,EACJ,SAAAmC,EACA,UAAAiB,CACD,EACD,OAAA3C,EACA,UAAAwC,EACA,QAAAhD,CACD,CAAA,EACD,KAAK,MAAM,CAAE,iBAAkB,EAAM,CAAA,EAExC,EAED,iBAAkB,CACZ,KAAK,MAAQ,CAAC,KAAK,aACjB,KAAK,KAAK,cACZ,KAAK,oBAAoB,KAAK,KAAK,EAAE,EAErC,KAAK,gBAAgB,KAAK,KAAK,EAAE,EAGtC,EAED,SAAS2B,EAAMyB,EAAU,OAAQ,CAC1BzB,GAGHA,EAAK,WAAa,KAAK,KAAK,WAC5BA,EAAK,WAAa,KAAK,KAAK,YAH5BA,EAAO,KAAK,KAMd,IAAI0B,EAAQ,CAAE,KAAM,kBAAmB,EACvC,OAAI1B,IACF0B,EAAQ,CACN,KAAMD,EACN,OAAQ,CACN,KAAM,KAAK,YAAY,cAAgB,IACvC,cAAezB,EAAK,WACpB,QAASA,EAAK,EAChB,CACF,EAEI,KAAK,UAAY,KAAK,iBACxB0B,EAAM,KAAO,WAAWD,CAAO,GAC/BC,EAAM,OAAO,WAAa1B,EAAK,YAAc,KAAK,eAAe,KAG9D0B,CACR,EAED,YAAYtD,EAAW,CACrB,MAAMsD,EAAQ,KAAK,SAAS,KAAK,KAAM,cAAc,EACrD,GAAI,KAAK,SAAU,CACjB,MAAMnC,EAAW,KAAK,YAAY,IAAI,KAAK,KAAK,YAAY,EAC5DmC,EAAM,KAAO,uBACTnC,EAAS,aAAe,YAC1BmC,EAAM,KAAO,+BAEjB,CACA,OAAIA,EAAM,SACRA,EAAM,OAAO,WAAatD,GAErBsD,CACR,EAED,oBAAoB,CAAE,QAAAxD,EAAS,UAAAyD,EAAW,UAAAC,EAAW,QAAAC,CAAQ,EAAG,CAC9D,MAAMhD,EAAS,KAAK,KAAK,GACzB,KAAK,wBAAwB,CAC3B,OAAAA,EACA,QAAAX,EACA,UAAAyD,EACA,UAAAC,EACA,QAAAC,CACD,CAAA,CACF,EAED,0BAA2B,CACzB,KAAK,kBAAiB,EACtB,KAAK,OAAO,gBAAkB,EAC/B,EAED,4BAA4B3D,EAAS,CACnC,KAAK,4BAA4BA,CAAO,CACzC,EAED,uBAAwB,CACtB,KAAK,OAAO,gBAAkB,EAC/B,EAED,4BAA4BA,EAAS,CACnC,KAAK,sBAAwBA,EAAQ,GACrC,KAAK,OAAO,mBAAqB,EAClC,EAED,6BAA8B,CAC5B,KAAK,OAAO,mBAAqB,EAClC,EAED,qBAAsB,CACpB,KAAK,OAAO,WAAa,EAC1B,EAED,sBAAuB,CACrB,KAAK,OAAO,WAAa,EAC1B,EAED,uBAAuB+C,EAAO,CAC5B,KAAK,WAAWA,CAAK,EACrB,KAAK,qBAAoB,CAC1B,EAED,aAAa5C,EAAS,CACpB,KAAK,WAAWA,CAAO,CACxB,EAED,mBAAmBA,EAAS,CAC1B,KAAK,MAAM,aAAa,EAAE,SAASA,CAAO,CAC3C,EAED,aAAaA,EAAS,CACpB,KAAK,WAAWA,CAAO,CACxB,EAED,cAAcA,EAAS,CACrB,KAAK,cAAgBA,EACrB,KAAK,OAAO,YAAc,EAC3B,EAED,gBAAgBA,EAAS,CACvB,KAAK,cAAgBA,EACrB,KAAK,OAAO,cAAgB,EAC7B,EAED,oBAAoBA,EAAS,CAC3B,KAAK,OAAO,YAAc,EAC3B,EAED,sBAAsBA,EAAS,CAC7B,KAAK,OAAO,cAAgB,EAC7B,EAED,eAAeyD,EAAO,CACpB,KAAK,aAAeA,CACrB,EAED,qBAAqBC,EAAa,CAChC,KAAK,aAAe,KAAK,aAAa,OAAOC,GAAKA,IAAMD,CAAW,EACnE,KAAK,wBAAwB,KAAK,YAAY,CAC/C,EAED,qBAAqB7D,EAAS,CAC5B,KAAK,QAAQ,KAAK,KAAK,YAAYA,EAAQ,EAAE,CAAC,CAC/C,EAED,oBAAoBqD,EAAWnC,EAAM,CACnC,GAAI,KAAK,KAAM,CACb,MAAMf,EAAU,KAAK,aAAa,KAChC4D,GAAKA,EAAE,KAAOV,EAAU,UAC1B,EACMW,EAAO,KAAK,UAAU,IAAIX,EAAU,SAAS,EAC/ClD,GAAW6D,IACT,KAAK,KAAK,KAAOA,EAAK,IAErB9C,IAAS,OAAS,CAACf,EAAQ,iBAAiB,SAAS6D,EAAK,EAAE,GAC5D9C,IAAS,SAAWf,EAAQ,iBAAiB,SAAS6D,EAAK,EAAE,IAE9D,KAAK,OAAO,OAAO,cAAe,CAAE,QAAA7D,EAAS,KAAA6D,CAAM,CAAA,EAGrD,KAAK,OAAO,OAAO,cAAe,CAAE,QAAA7D,EAAS,KAAA6D,CAAM,CAAA,EAGzD,CACD,EAED,eAAevC,EAAO,CACpB,MAAMwC,EAAW,KAAK,aAChB9D,EAAU8D,EAASxC,CAAK,EAC9B,OACEA,IAAUwC,EAAS,OAAS,GAC5B9D,EAAQ,iBAAmB8D,EAASxC,EAAQ,CAAC,EAAE,cAElD,EAED,gBAAgB,CACd,gBAAAyC,EACA,QAAAC,EACA,QAAAC,EACA,aAAAC,EACA,MAAAT,CACF,EAAG,CACD,KAAK,qBACH,KAAK,aAAa,KAAKR,GAAKA,EAAE,WAAa,SAASc,CAAe,CAAC,CACtE,EACA,WAAW,IAAM,CACf,KAAK,MAAM,gBAAgB,GAAG,gBAAgBN,CAAK,EACnD,KAAK,MAAM,gBAAgB,GAAG,MAAK,GAClC,GAAG,CACP,EAED,wBAAyB,CACvB,KAAK,aAAe,KAAK,uBAAsB,CAChD,EAED,MAAM,4BAA6B,CACjC,KAAK,MAAM,aAAa,EAAE,sBAAqB,EAC/C,MAAMU,EACJ,MAAM,KAAK,MAAM,gBAAgB,EAAE,2BAA0B,EAC/D,YAAK,MAAM,aAAa,EAAE,uBAAuBA,CAAK,EACtD,KAAK,MAAM,aAAa,EAAE,sBAAqB,EACxCA,CACT,CACD,EAED,MAAO,CACL,QAAS,CACH,KAAK,MAAQ,KAAK,OAAO,OAAO,UAAY,KAAK,KAAK,IACxD,KAAK,aAAY,EAEf,KAAK,OAAO,OAAO,aAAe,KAAK,oBACzC,KAAK,kBAAoB,KAAK,OAAO,OAAO,WAE/C,EAED,mBAAoB,CAClB,KAAK,aAAY,CAClB,EAED,mBAAoB,CACd,KAAK,MAAQ,KAAK,mBACpB,KAAK,QAAQ,KAAK,KAAK,YAAY,KAAK,iBAAiB,CAAC,CAE9D,CACD,EAED,OAAQ,CACN,OAAQ,CACN,wBAAwBjB,EAAW,CACjC,KAAK,eAAeA,CAAS,CAC9B,EAED,sBAAsBA,EAAW,CAC/B,MAAMlD,EAAU,KAAK,aAAa,KAChC4D,GACEA,EAAE,UACFA,EAAE,SAAS,OAAS,GACpBA,EAAE,SAAS,CAAC,EAAE,KAAOV,EAAU,eACnC,EACIlD,GAAW,KAAK,MAClB,KAAK,eAAe,CAClB,OAAQ,KAAK,KAAK,GAClB,UAAWkD,EAAU,eACvB,CAAC,EAAE,KAAKrD,GAAW,CACjBG,EAAQ,SAAS,CAAC,EAAE,kBAAoBH,EAAQ,iBACjD,CAAA,CAEJ,EAED,sBAAsBqD,EAAW,CAC/B,KAAK,oBAAoBA,EAAW,KAAK,CAC1C,EAED,wBAAwBA,EAAW,CACjC,KAAK,oBAAoBA,EAAW,OAAO,CAC5C,EAED,cAAcA,EAAW,CACvB,WAAW,IAAM,CAEb,KAAK,uBAAwB,EAAC,SAAW,KAAK,aAAa,SAE3D,KAAK,aAAe,KAAK,uBAAsB,EAC/C,KAAK,aAAe,KAAK,uBAAsB,EAEnD,EAAG,GAAI,CACR,EAED,iBAAiBA,EAAW,CAC1B,MAAMF,EAAYE,EAAU,WACvB,KAAK,aAAa,KAAK,CAAC,CAAE,GAAAkB,CAAI,IAAKA,IAAOpB,CAAS,GAGxD,KAAK,YAAY,CAAE,UAAAA,CAAW,CAAA,EAAE,MAAM,QAAQ,KAAK,CACpD,EAED,gBAAgBE,EAAW,CACzB,GAAI,KAAK,KAAM,CACb,MAAMlD,EAAU,KAAK,aAAa,KAChC4D,GAAKA,EAAE,KAAOV,EAAU,UAC1B,EACIlD,IACGA,EAAQ,UAASA,EAAQ,QAAU,CAAA,GACvBA,EAAQ,QAAQ,KAC/BqE,GAASA,EAAM,KAAOnB,EAAU,QAClC,GAEE,KAAK,eAAe,CAClB,UAAWA,EAAU,UACtB,CAAA,EACE,KAAKoB,GAAiB,CACrBtE,EAAQ,QAAUsE,EAAc,OACjC,CAAA,EACA,MAAM,QAAQ,KAAK,EAG5B,CACD,EAED,iBAAiBpB,EAAW,CAC1B,MAAMvB,EAAO,KAAK,QAAO,EACzB,GAAIA,EAAM,CAER,MAAM3B,EADW,KAAK,YAAW,EACR,KAAK4D,GAAKA,EAAE,KAAOV,EAAU,UAAU,EAC5DlD,IACF,KAAK,OAAO,OAAO,sBAAuB,CAAE,KAAA2B,EAAM,QAAA3B,CAAS,CAAA,EAC3D,KAAK,aAAe,KAAK,uBAAsB,EAC/C,KAAK,aAAe,KAAK,uBAAsB,EAEnD,CACD,EAED,uBAAuBkD,EAAW,CAChC,GAAI,KAAK,KAAM,CACb,MAAMlD,EAAU,KAAK,aAAa,KAChC4D,GAAKA,EAAE,KAAOV,EAAU,UAC1B,EACIlD,IACGA,EAAQ,UAASA,EAAQ,QAAU,CAAA,GACxC,KAAK,OAAO,OAAO,4BAA6B,CAC9C,QAAAA,EACA,MAAO,CAAE,GAAIkD,EAAU,QAAS,CACjC,CAAA,EAEL,CACD,EAED,iCAAiCA,EAAW,CAC1C,MAAMH,EAAgB,KAAK,MAAM,gBAAgB,EACjD,GAAI,CAACA,EAAe,OACJA,EAAc,2BAC5BG,EAAU,gBACVA,EAAU,UACZ,GAEE,KAAK,eAAe,CAClB,UAAWH,EAAc,eAAe,GACxC,OAAQA,EAAc,eAAe,QACtC,EAAE,KAAK,IAAM,CACPA,EAAc,WACjB,KAAK,aAAe,KAAK,uBAAsB,EAC/C,KAAK,UAAU,IAAM,CACnBA,EAAc,kBAAiB,EAC/BA,EAAc,eAAc,CAC7B,CAAA,EAEJ,CAAA,CAEL,CACF,CACD,EAED,MAAO,CACL,IAAIwB,EAAQ,0BACZ,GAAI,KAAK,KAAM,CACb,MAAMtD,EAAe,KAAK,YAAY,IAAI,KAAK,KAAK,YAAY,EAAE,KAClEsD,EAAQ,GAAG,KAAK,KAAK,MAAMtD,CAAY,UACzC,CACA,MAAO,CAAE,MAAAsD,CAAM,CACjB,CACF,MAvmDO,MAAM,4BAA4B,IAAI,QACpCC,GAAA,CAAA,MAAM,yBAAyB,MAC7B,MAAM,sBAAsB,IAAI,YAH3C,IAAA,EAIa,MAAM,wBAQJC,GAAA,CAAA,MAAM,sCAAsC,EAwB3CC,GAAA,CAAA,MAAM,kBAAkB,EAW1BC,GAAA,CAAA,MAAM,oBAAoB,EAMzBC,GAAA,CAAA,MAAM,4BAA4B,EAC/BC,GAAA,CAAA,MAAM,cAAc,MAtDtC,IAAA,EAgEc,MAAM,oBA6CT,MAAM,eAAe,IAAI,gBACvBC,GAAA,CAAA,MAAM,4BAA4B,EAChCC,GAAA,CAAA,MAAM,8BAA8B,EAClCC,GAAA,CAAA,MAAM,wBAAwB,MAhH/C,IAAA,EAiHmB,MAAM,oBAjHzB,IAAA,CAAA,MAAA,IAAA,EAgIgB,MAAM,oDAsBEC,GAAA,CAAA,MAAM,MAAM,MAtJpC,IAAA,EA0JsB,MAAM,sBAYXC,GAAA,CAAA,MAAM,kBAAkB,MAtKzC,IAAA,CAAA,EA6LeC,GAAA,CAAA,MAAM,uCAAuC,EAE3CC,GAAA,CAAA,MAAM,gBAAgB,MA/LvC,IAAA,EAgMqB,MAAM,uBACJC,GAAA,CAAA,MAAM,YAAY,EACnBC,GAAA,CAAA,MAAM,eAAe,EACnBC,GAAA,CAAA,MAAM,aAAa,EAKrBC,GAAA,CAAA,MAAM,eAAe,EACnBC,GAAA,CAAA,MAAM,aAAa,EAKrBC,GAAA,CAAA,MAAM,eAAe,EACnBC,GAAA,CAAA,MAAM,aAAa,EAKrBC,GAAA,CAAA,MAAM,eAAe,EACnBC,GAAA,CAAA,MAAM,aAAa,EAKrBC,GAAA,CAAA,MAAM,eAAe,EACnBC,GAAA,CAAA,MAAM,aAAa,EAKrBC,GAAA,CAAA,MAAM,eAAe,EACnBC,GAAA,CAAA,MAAM,aAAa,EAKrBC,GAAA,CAAA,MAAM,eAAe,EACnBC,GAAA,CAAA,MAAM,aAAa,EAY9BC,GAAA,CAAA,MAAM,6BAA6B,MAnPhD,IAAA,CAAA,MAAA,IAAA,EA4QgB,MAAM,gBA5QtB,IAAA,EAyTmB,MAAM,kBAzTzB,IAAA,EAiUe,MAAM,qlBAhUnB,OAAAC,EAAA,EAAA/I,EAwYM,MAxYND,GAwYM,CAvYJiJ,EAsYM,MAtYN9B,GAsYM,CArYJ8B,EAwGM,MAxGNC,GAwGM,CAvGoCC,EAAI,MAA5CH,IAAA/I,EAsGM,MAtGNmJ,GAsGM,CArGJC,EAKcC,EAAA,CAJZ,MAAM,2CACL,GAAIpJ,EAAgB,mBAPjC,QAAAqJ,EASY,IAAuB,CAAvBF,EAAuBG,CAAA,IATnC,EAAA,aAYUP,EAsBM,MAtBN7B,GAsBM,CAlBIlH,EAAsB,4BAH9BG,EAMciJ,EAAA,CAnB1B,IAAA,EAcc,MAAM,oBACL,GAAIpJ,EAAsB,yBAfzC,QAAAqJ,EAkBc,IAAqB,CAArBF,EAAqBI,CAAA,IAlBnC,EAAA,cAAAC,EAAA,GAAA,EAAA,EAwBoBxJ,EAAkB,wBAH1BG,EAMciJ,EAAA,CA3B1B,IAAA,EAsBc,MAAM,oBACL,GAAIpJ,EAAkB,qBAvBrC,QAAAqJ,EA0Bc,IAAsB,CAAtBF,EAAsBM,CAAA,IA1BpC,EAAA,cAAAD,EAAA,GAAA,EAAA,EAgCoBxJ,EAAQ,cAJhBG,EAKEuJ,EAAA,CAjCd,IAAA,EA6Bc,MAAM,eACL,YAAW1J,EAAQ,SACnB,gBAAeC,EAAiB,kBAAC,2CA/BhDuJ,EAAA,GAAA,EAAA,IAoCUT,EASO,OATP5B,GASO,CARLgC,EAOEQ,EAAA,CANA,MAAM,mBACL,OAAQ3J,EAAa,cACrB,cAAa,IACb,eAAc,GACd,MAAO,IACP,YAAW,yBAIhB+I,EAIK,KAJL3B,GAIK,CAHH+B,EAEcC,EAAA,CAFA,GAAIpJ,EAAc,cAAA,EAAA,CAhD5C,QAAAqJ,EAiDc,IAAiC,CAjD/CO,GAiDiBC,EAAAZ,EAAA,KAAOjJ,EAAK,MAAA,YAAA,EAAA,CAAA,IAjD7B,EAAA,eAqDU+I,EAoDM,MApDN1B,GAoDM,CAnDJ0B,EAEO,OAFPzB,GAEOuC,EADF5J,EAAE,GAAA,sBAAA,CAAA,EAAA,CAAA,EAMCgJ,EAAI,UAJZ9I,EAKE2J,EAAA,CA9Dd,IAAA,EA0Dc,MAAM,yBACL,KAAMb,EAAI,KACV,YAAW,sBA5D1BO,EAAA,GAAA,EAAA,EAiEoBxJ,EAAS,UAAC,OAAM,GAAA,CAASC,EAAmB,qBAFpD6I,IAAA/I,EAKO,OALPgK,GAIKF,EAAA5J,EAAA,8BAA+B,KACpC,CAAA,GApEZuJ,EAAA,GAAA,EAAA,EAqE6BvJ,EAAmB,oBArEhDuJ,EAAA,GAAA,EAAA,GAsEcV,EAAA,EAAA,EAAA/I,EAWOiK,GAjFrB,IAAA,CAAA,EAAAC,EAyEiCjK,EAAS,UAAnBkK,QAHTnK,EAWO,OAAA,CAVL,MAAM,8BACL,IAAKmK,EAAO,KAGbf,EAKEgB,EAAA,CAJA,MAAM,eACL,OAAQD,EACR,KAAM,GACN,YAAW,iCAQTlK,EAAU,WAvF/BwJ,EAAA,GAAA,EAAA,OAmFYrJ,EAKEiK,EAAA,CAxFd,IAAA,EAoFc,MAAM,6BACL,WAAYpK,EAAA,YAAciJ,EAAA,KAAK,cAC/B,QAAOjJ,EAAe,mDAOjBA,EAAgB,sBAHxBG,EAMciJ,EAAA,CAhG1B,IAAA,EA2Fc,MAAM,eACL,GAAIpJ,EAAgB,mBA5FnC,QAAAqJ,EA+Fc,IAAmB,CAAnBF,EAAmBkB,CAAA,IA/FjC,EAAA,cAAAb,EAAA,GAAA,EAAA,EAqGoBxJ,EAAY,kBAHpBG,EAMciJ,EAAA,CAxG1B,IAAA,EAmGc,MAAM,eACL,GAAIpJ,EAAY,eApG/B,QAAAqJ,EAuGc,IAAqB,CAArBF,EAAqBmB,CAAA,IAvGnC,EAAA,cAAAd,EAAA,GAAA,EAAA,OAAAA,EAAA,GAAA,EAAA,IA6GMT,EAwNM,MAxNNwB,GAwNM,CAvNJxB,EAmIM,MAnINxB,GAmIM,CAlIJwB,EA6EM,MA7ENvB,GA6EM,CA5EJuB,EAoDM,MApDNtB,GAoDM,CAnD4BzH,EAAU,YAA1C8I,IAAA/I,EAOM,MAPNyK,GAOM,CANJrB,EAKEsB,EAAA,CAJA,MAAM,6BACL,QAASzK,EAAc,eACxB,aAAA,GArHlB,WAsH2BiJ,EAAiB,kBAtH5C,sBAAAyB,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,GAsH2B1B,EAAiB,kBAAA0B,yCAG9B7B,IAAA/I,EAIM,MA7HpB6K,GAAA,CA0HgB7B,EAEK,YADA9I,EAAE,GAAA,kBAAA,CAAA,EAAA,CAAA,KAMDD,EAAc,gBAFtB8I,IAAA/I,EA8BM,MA9BN8K,GA8BM,CAvBI7K,EAAqB,2BAH7BD,EASS,SAAA,CA5IzB,IAAA,EAoIkB,MAAM,sBACL,4BAAOC,EAAuB,yBAAAA,EAAA,wBAAA,GAAA8K,CAAA,KAG/B3B,EAGE4B,EAAA,CAFA,KAAK,YACJ,MAAO9K,EAAE,GAAA,uBAAA,wBA1I9BuJ,EAAA,GAAA,EAAA,EAmJwBvJ,EAAoB,0BAN5BF,EAYS,SAAA,CAzJzB,IAAA,EA8IkB,MA9IlBiL,IA8IwB,sBAAqB,CACiB,aAAA/B,EAAA,QAAQ,cAGnD,4BAAOjJ,EAAU,YAAAA,EAAA,WAAA,GAAA8K,CAAA,KAGlB3B,EAA2B8B,EAAA,CAAf,MAAM,MAAM,CAAA,EACxBlC,EAEO,OAFPrB,GAEOmC,EADF5J,EAAE,GAAA,mBAAA,CAAA,EAAA,CAAA,OAvJzBuJ,EAAA,GAAA,EAAA,EA0JuDP,EAAA,OAAO,gBAA9ClJ,EAEO,OAFPmL,GAEOrB,EADF5J,EAAE,GAAA,yBAAA,CAAA,EAAA,CAAA,GA3JvBuJ,EAAA,GAAA,EAAA,KAAAA,EAAA,GAAA,EAAA,EA8JcL,EAKEgC,EAAA,CAJC,OAAQlC,EAAM,OAAC,eACf,WAAUA,EAAqB,sBAChC,KAAA,GACC,SAAQjJ,EAAuB,oEAIpC+I,EAqBM,MArBNpB,GAqBM,CApBO3H,EAAU,YAArB8I,IAAA/I,EAmBM,MA1LpBqL,GAAA,CAwLwBpL,EAAc,oBAhBtBG,EAiBEkL,EAAA,CAzLlB,IAAA,EAyKkB,IAAI,iBACH,uBAAsBpL,EAAkB,mBACxC,aAAY,GACZ,qBAAoBgJ,EAAY,cAAA,CAAA,EAChC,KAAMjJ,EAAqB,uBAAE,QAAK,CAAA,EAClC,SAAUA,EAAc,eAAC,SACzB,YAAWA,EAAuB,wBAClC,KAAMiJ,EAAI,KACV,gBAAehJ,EAAW,YAC1B,kBAAmBD,EAAwB,yBAC3C,oBAAoBA,EAAmB,oBACvC,uBAAwBA,EAAoB,qBAC5C,qBAAsBA,EAA2B,4BACjD,uBAAwBA,EAAsB,uBAC9C,eAAeA,EAAc,gQAvLhDwJ,EAAA,GAAA,EAAA,KAAAA,EAAA,GAAA,EAAA,MA6LUT,EAkDM,MAlDNnB,GAkDM,CAjDJuB,EAAyCmC,EAAA,CAAzB,KAAMrL,EAAE,GAAA,WAAA,oBACxB8I,EA+CM,MA/CNlB,GA+CM,CA9CqCoB,EAAI,MAA7CH,IAAA/I,EA6CQ,QA7CRwL,GA6CQ,CA5CNxC,EA2CQ,QA3CRjB,GA2CQ,CA1CNiB,EAKK,KALLhB,GAKK,CAJHgB,EAEK,KAFLf,GAEK6B,EADA5J,EAAE,GAAA,yBAAA,CAAA,EAAA,CAAA,EAEP8I,EAA8C,KAAvC,KAAAc,EAAA5J,EAAA,eAAegJ,EAAA,KAAK,UAAU,CAAA,EAAA,CAAA,IAEvCF,EAKK,KALLd,GAKK,CAJHc,EAEK,KAFLb,GAEK2B,EADA5J,EAAE,GAAA,uBAAA,CAAA,EAAA,CAAA,EAEP8I,EAA4C,KAArC,KAAAc,EAAA5J,EAAA,eAAegJ,EAAA,KAAK,QAAQ,CAAA,EAAA,CAAA,IAErCF,EAKK,KALLZ,GAKK,CAJHY,EAEK,KAFLX,GAEKyB,EADA5J,EAAE,GAAA,2BAAA,CAAA,EAAA,CAAA,EAEP8I,EAAgC,KAAA,KAAAc,EAAzBZ,EAAI,KAAC,YAAY,EAAA,CAAA,IAE1BF,EAKK,KALLV,GAKK,CAJHU,EAEK,KAFLT,GAEKuB,EADA5J,EAAE,GAAA,yBAAA,CAAA,EAAA,CAAA,EAEP8I,EAAgD,KAAzC,KAAAc,EAAA5J,EAAA,iBAAiBgJ,EAAA,KAAK,UAAU,CAAA,EAAA,CAAA,IAEzCF,EAKK,KALLR,GAKK,CAJHQ,EAEK,KAFLP,GAEKqB,EADA5J,EAAE,GAAA,uBAAA,CAAA,EAAA,CAAA,EAEP8I,EAA8C,KAAvC,KAAAc,EAAA5J,EAAA,iBAAiBgJ,EAAA,KAAK,QAAQ,CAAA,EAAA,CAAA,IAEvCF,EAKK,KALLN,GAKK,CAJHM,EAEK,KAFLL,GAEKmB,EADA5J,EAAE,GAAA,uBAAA,CAAA,EAAA,CAAA,EAEP8I,EAA8C,KAAvC,KAAAc,EAAA5J,EAAA,iBAAiBgJ,EAAA,KAAK,QAAQ,CAAA,EAAA,CAAA,IAEvCF,EAKK,KALLJ,GAKK,CAJHI,EAEK,KAFLH,GAEKiB,EADA5J,EAAE,GAAA,wBAAA,CAAA,EAAA,CAAA,EAEP8I,EAA+C,KAAxC,KAAAc,EAAA5J,EAAA,iBAAiBgJ,EAAA,KAAK,SAAS,CAAA,EAAA,CAAA,SA1O1DO,EAAA,GAAA,EAAA,kBAgPUT,EAAuB,MAAA,CAAlB,MAAM,OAAK,KAAA,EAAA,KAGlBA,EAiFM,MAjFNF,GAiFM,CAhFOI,EAAI,MAAfH,IAAA/I,EA2EM,MA/ThByL,GAAA,CAqPYzC,EAyEM,MAAA,KAAA,CArDI/I,EAAmB,yBAnB3BG,EAoBEsL,EAAA,CA1QhB,IAAA,EAuPgB,IAAI,cACH,MAAOxC,EAAY,aACnB,WAAUA,EAAM,OAAC,WACjB,uBAAsBA,EAAM,OAAC,qBAC7B,aAAYA,EAAO,QAAC,WACpB,WAAUjJ,EAAO,QACjB,KAAMA,EAAW,YACjB,KAAMiJ,EAAI,KACV,cAAahJ,EAAwB,yBACrC,gBAAegJ,EAAY,aAC3B,IAAKhJ,EAAU,WACf,SAAUD,EAAe,gBACzB,aAAaA,EAAU,WACvB,aAAaA,EAAmB,oBAChC,WAAWA,EAAU,WACrB,aAAaA,EAAiB,kBAC9B,+BAAgCA,EAA0B,2BAC1D,gBAAgBA,EAAoB,6QAxQrDwJ,EAAA,GAAA,EAAA,EA6QsBP,EAAY,cAAIA,EAAY,aAAC,OAAM,GAF3CH,IAAA/I,EA6CM,MA7CN2L,GA6CM,SAzCJvL,EAwCqBwL,EAAA,CAvCnB,OAAA,IAAM,CAhRxB,QAAAtC,EAqToB,IAAwC,EAlC1CP,EAAA,EAAA,EAAA/I,EAmCEiK,OAtTpBC,EAqT+ChB,EAAA,aArT/C,CAqT4BxG,EAASsB,SAlCnB5D,EAmCEyL,EAAA,CAlCC,IAAKnJ,EAAQ,GACb,QAASA,EACT,IAAKxC,EAAU,WACf,MAAOgJ,EAAY,aACnB,YAAWjJ,EAAc,eAAC+D,CAAK,EAC/B,eAAqC9D,EAAA,KAAK,KAAOwC,EAAQ,QAAQ,IAA6BxC,EAAA,qBAAuBD,EAAU,YAA2BA,EAAsB,wBAA0BC,EAAoB,qBAM9N,cAAoCA,EAAI,KAAC,KAAOwC,EAAQ,QAAQ,IAAMxC,EAAoB,qBAG1F,cAAoCD,EAAA,wBAA0BC,EAAoB,qBAGlF,eAAqCA,EAAA,KAAK,KAAOwC,EAAQ,QAAQ,IAA4BzC,EAAU,YAA0BA,EAAsB,wBAA0BC,EAAoB,qBAMrM,SAAUD,EAAe,gBACzB,KAAMiJ,EAAI,KACV,KAAMjJ,EAAW,YACjB,aAAaA,EAAY,aACzB,mBAAmBA,EAAkB,mBACrC,aAAaA,EAAY,aACzB,cAAcA,EAAa,cAC3B,gBAAgBA,EAAe,gBAC/B,mBAAmBA,EAAW,YAC9B,kBAAmBA,EAAe,0RApTvD,EAAA,SAiRyB,CAA4C,KAAA,GAAA,GAAA,GAAA,UAAA,EAAA,CAAA,QAwCvD8I,IAAA/I,EAIM,MAJN8L,GAIM,CAHJ9C,EAEK,YADA9I,EAAE,GAAA,kBAAA,CAAA,EAAA,CAAA,UA3TvBuJ,EAAA,GAAA,EAAA,EAiU+CP,EAAA,YAAY,WAAjDH,IAAA/I,EAEM,MAFN+L,GAEM,CADJ3C,EAAW4C,CAAA,KAlUvBvC,EAAA,GAAA,EAAA,UAuUML,EAeE6C,EAAA,CAdA,IAAI,oBACH,OAAQ/C,EAAM,OAAC,WACf,aAAYA,EAAO,QAAC,WACpB,WAAUA,EAAM,OAAC,WACjB,YAAWA,EAAkB,mBAC7B,IAAKhJ,EAAU,WACf,kBAAiBA,EAAY,aAC7B,MAAkBgJ,EAAI,QAAkBA,EAAI,KAAC,WAAW,MAAMhJ,EAAW,YAAC,IAAIgJ,EAAI,KAAC,YAAY,EAAE,IAAI,MAKrG,SAAQjJ,EAAoB,qBAC5B,UAASA,EAAsB,sIAGlCmJ,EAcE6C,EAAA,CAbA,IAAI,0BACH,OAAQ/C,EAAM,OAAC,gBACf,aAAYA,EAAO,QAAC,gBACpB,WAAUA,EAAM,OAAC,gBACjB,YAAWA,EAAuB,wBACnC,QAAQ,GACP,MAAkBA,EAAI,QAAkBA,EAAI,KAAC,WAAW,MAAMhJ,EAAW,YAAC,IAAIgJ,EAAI,KAAC,YAAY,EAAE,IAAI,MAKrG,SAAQjJ,EAAqB,sBAC7B,UAASA,EAAkB,0GAG9BmJ,EAWE8C,EAAA,CAVC,OAAQhD,EAAM,OAAC,YACf,MAAOA,EAAY,aACnB,aAAYA,EAAO,QAAC,YACpB,WAAUA,EAAM,OAAC,YACjB,kBAAiBA,EAAa,cAC9B,KAAMjJ,EAAW,YACjB,IAAKC,EAAU,WACf,SAAUD,EAAe,gBACzB,UAASC,EAAsB,uBAC/B,SAAQD,EAAmB,yIAG9BmJ,EAQE+C,EAAA,CAPC,OAAQjD,EAAM,OAAC,cACf,aAAYA,EAAO,QAAC,cACpB,WAAUA,EAAM,OAAC,cACjB,KAAMhJ,EAAE,GAAA,sBAAA,EACR,aAAYA,EAAE,GAAA,4BAAA,EACd,UAASD,EAAwB,yBACjC,SAAQA,EAAqB,6GAGhCmJ,EAQE+C,EAAA,CAPC,OAAQjD,EAAM,OAAC,mBACf,aAAYA,EAAO,QAAC,mBACpB,WAAUA,EAAM,OAAC,mBACjB,KAAMhJ,EAAE,GAAA,sBAAA,EACR,aAAYA,EAAE,GAAA,4BAAA,EACd,SAAQD,EAA2B,4BACnC,UAASA,EAAwB"}