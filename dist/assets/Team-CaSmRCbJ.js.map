{"version":3,"file":"Team-CaSmRCbJ.js","sources":["../../src/components/lists/ProductionTeamList.vue","../../src/components/pages/Team.vue"],"sourcesContent":["<template>\n  <div class=\"data-list\">\n    <div class=\"datatable-wrapper\">\n      <table class=\"datatable\">\n        <thead class=\"datatable-head\">\n          <tr>\n            <th scope=\"col\" class=\"name datatable-row-header\">\n              {{ $t('people.list.name') }}\n            </th>\n            <th scope=\"col\" class=\"email\" v-if=\"isCurrentUserManager\">\n              {{ $t('people.list.email') }}\n            </th>\n            <th scope=\"col\" class=\"contract\" v-if=\"isCurrentUserManager\">\n              {{ $t('people.list.contract') }}\n            </th>\n            <th scope=\"col\" class=\"role\">\n              {{ $t('people.list.role') }}\n            </th>\n            <th scope=\"col\">\n              {{ $t('people.list.departments') }}\n            </th>\n            <th scope=\"col\" class=\"actions\" v-if=\"isCurrentUserManager\"></th>\n          </tr>\n        </thead>\n        <tbody class=\"datatable-body\" v-if=\"!isEmpty\">\n          <tr class=\"datatable-row\" v-for=\"person in entries\" :key=\"person.id\">\n            <people-name-cell\n              class=\"name datatable-row-header\"\n              :person=\"person\"\n            />\n            <td class=\"email\" v-if=\"isCurrentUserManager\">\n              {{ person.email }}\n            </td>\n            <td class=\"contract\" v-if=\"isCurrentUserManager\">\n              {{ $t('people.contract.' + person.contract_type) }}\n            </td>\n            <td class=\"role\">{{ $t(`people.role.${person.role}`) }}</td>\n            <department-names-cell :departments=\"person.departments\" />\n            <td class=\"actions has-text-right\" v-if=\"isCurrentUserManager\">\n              <button\n                class=\"button\"\n                @click=\"removePerson(person)\"\n                v-if=\"isCurrentUserAdmin\"\n              >\n                {{ $t('main.remove') }}\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <p class=\"has-text-centered mt2\" v-if=\"isEmpty\">\n      {{ $t('people.empty_team') }}\n    </p>\n\n    <p class=\"has-text-centered footer-info\" v-else>\n      {{ entries.length }} {{ $tc('people.persons', entries.length) }}\n    </p>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\n\nimport DepartmentNamesCell from '@/components/cells/DepartmentNamesCell.vue'\nimport PeopleNameCell from '@/components/cells/PeopleNameCell.vue'\n\nexport default {\n  name: 'production-team-list',\n\n  components: {\n    DepartmentNamesCell,\n    PeopleNameCell\n  },\n\n  props: {\n    entries: {\n      type: Array,\n      default: () => []\n    }\n  },\n\n  computed: {\n    ...mapGetters(['isCurrentUserAdmin', 'isCurrentUserManager']),\n\n    isEmpty() {\n      return !this.entries?.length\n    }\n  },\n\n  methods: {\n    ...mapActions(['removePersonFromTeam']),\n\n    removePerson(person) {\n      this.removePersonFromTeam(person)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.datatable-body tr:first-child th,\n.datatable-body tr:first-child td {\n  border-top: 0;\n}\n.name {\n  width: 230px;\n  min-width: 230px;\n}\n.email {\n  width: 300px;\n  min-width: 300px;\n}\n.phone {\n  width: 200px;\n  min-width: 200px;\n}\n.role {\n  width: 125px;\n  min-width: 125px;\n}\n.actions {\n  min-width: 100px;\n}\n\n.data-list {\n  margin-top: 2em;\n}\n\n.footer-info {\n  color: var(--text);\n}\n</style>\n","<template>\n  <page-layout>\n    <template #main>\n      <div class=\"people flexcolumn\">\n        <div class=\"flexrow mt2 add-people\" v-if=\"isCurrentUserManager\">\n          <people-field\n            ref=\"people-field\"\n            class=\"flexrow-item add-people-field\"\n            :people=\"unlistedPeople\"\n            :placeholder=\"$t('people.add_member_to_team')\"\n            big\n            @enter=\"addPerson\"\n            v-model=\"person\"\n          />\n          <button\n            class=\"button flexrow-item\"\n            @click=\"addPerson\"\n            :disabled=\"!person\"\n          >\n            {{ $t('main.add') }}\n          </button>\n        </div>\n        <production-team-list\n          :entries=\"teamPersons\"\n          :is-loading=\"isTeamLoading\"\n          :is-error=\"isTeamLoadingError\"\n          @remove=\"removePerson\"\n        />\n      </div>\n    </template>\n    <template #side v-if=\"isCurrentUserManager\">\n      <div class=\"importers flexcolumn\">\n        <div\n          class=\"project-import flexcolumn\"\n          v-if=\"availableProductions.length > 0\"\n        >\n          <combobox-production\n            class=\"flexrow-item\"\n            :label=\"$t('people.import_from_production')\"\n            :production-list=\"availableProductions\"\n            :with-margin=\"false\"\n            v-model=\"importProductionId\"\n          />\n          <button-simple\n            class=\"flexrow-item mt05\"\n            :disabled=\"!importProductionId\"\n            :text=\"$t('main.import')\"\n            @click=\"importTeamFromProduction\"\n          />\n        </div>\n        <div\n          :class=\"{\n            'department-import': true,\n            flexcolumn: true,\n            mt2: availableProductions.length > 0\n          }\"\n        >\n          <combobox-department\n            class=\"flexrow-item\"\n            :label=\"$t('people.import_from_department')\"\n            :department-list=\"departments\"\n            :with-empty-choice=\"false\"\n            v-model=\"importDepartmentId\"\n          />\n          <button-simple\n            class=\"flexrow-item mt05\"\n            :disabled=\"!importDepartmentId\"\n            :text=\"$t('main.import')\"\n            @click=\"importTeamFromDepartment\"\n          />\n        </div>\n        <p class=\"label mt2\">\n          {{ $t('people.import_from_unlisted') }}\n        </p>\n        <div class=\"import-list\">\n          <div\n            :key=\"`unlisted-person-${person.id}`\"\n            class=\"flexrow person-to-add mb05\"\n            @click=\"addPersonToTeam(person)\"\n            v-for=\"person in unlistedPeople\"\n          >\n            <people-avatar\n              class=\"flexrow-item\"\n              :font-size=\"14\"\n              :key=\"person.id\"\n              :person=\"person\"\n              :size=\"30\"\n              :with-link=\"false\"\n            />\n            <people-name\n              class=\"flexrow-item\"\n              :person=\"person\"\n              :with-link=\"false\"\n            />\n          </div>\n        </div>\n      </div>\n    </template>\n  </page-layout>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\n\nimport { sortPeople } from '@/lib/sorting'\n\nimport ButtonSimple from '@/components/widgets/ButtonSimple.vue'\nimport ComboboxProduction from '@/components/widgets/ComboboxProduction.vue'\nimport ComboboxDepartment from '@/components/widgets/ComboboxDepartment.vue'\nimport PageLayout from '@/components/layouts/PageLayout.vue'\nimport PeopleAvatar from '@/components/widgets/PeopleAvatar.vue'\nimport PeopleField from '@/components/widgets/PeopleField.vue'\nimport PeopleName from '@/components/widgets/PeopleName.vue'\nimport ProductionTeamList from '@/components/lists/ProductionTeamList.vue'\n\nexport default {\n  name: 'team',\n\n  components: {\n    ButtonSimple,\n    ComboboxDepartment,\n    ComboboxProduction,\n    PageLayout,\n    PeopleAvatar,\n    PeopleField,\n    PeopleName,\n    ProductionTeamList\n  },\n\n  data() {\n    return {\n      importDepartmentId: null,\n      importProductionId: null,\n      person: null,\n      isTeamLoading: false,\n      isTeamLoadingError: false\n    }\n  },\n\n  mounted() {\n    if (this.availableProductions.length > 0) {\n      this.importProductionId = this.availableProductions[0]?.id\n      this.importDepartmentId = this.departments.sort((a, b) =>\n        a.name.localeCompare(b.name)\n      )[0]?.id\n    }\n  },\n\n  computed: {\n    ...mapGetters([\n      'currentProduction',\n      'departments',\n      'departmentMap',\n      'isCurrentUserManager',\n      'openProductions',\n      'activePeople',\n      'personMap',\n      'productionMap'\n    ]),\n\n    availableProductions() {\n      return this.openProductions.filter(\n        production => production.id !== this.currentProduction.id\n      )\n    },\n\n    teamPersons() {\n      return sortPeople(\n        this.currentProduction.team.map(personId =>\n          this.personMap.get(personId)\n        )\n      )\n    },\n\n    unlistedPeople() {\n      return this.activePeople.filter(\n        person =>\n          !this.currentProduction.team.includes(person.id) && person.active\n      )\n    }\n  },\n\n  methods: {\n    ...mapActions(['addPersonToTeam']),\n\n    addPerson() {\n      if (this.person) {\n        this.addPersonToTeam(this.person)\n        setTimeout(() => {\n          this.$refs['people-field'].clear()\n        }, 1)\n      }\n    },\n\n    removePerson(person) {\n      this.removePersonFromTeam(person)\n    },\n\n    importTeamFromProduction() {\n      const production = this.productionMap.get(this.importProductionId)\n      production.team.forEach(personId => {\n        this.addPersonToTeam(this.personMap.get(personId))\n      })\n    },\n\n    importTeamFromDepartment() {\n      const departmentId = this.importDepartmentId\n      this.activePeople\n        .filter(person => person.departments.includes(departmentId))\n        .forEach(person => {\n          this.addPersonToTeam(person)\n        })\n    }\n  },\n\n  metaInfo() {\n    return {\n      title: `${this.currentProduction.name} | ${this.$t(\n        'people.team'\n      )} - Kitsu`\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.people {\n  max-height: 100%;\n}\n\n.label {\n  color: var(--text-alt);\n  font-size: 0.8em;\n  letter-spacing: 1px;\n  text-transform: uppercase;\n  margin-bottom: 0;\n}\n\n.importers {\n  border-left: 1px solid var(--border);\n  height: 100%;\n  max-height: 100%;\n  padding: 1em;\n}\n\n.people {\n  padding: 1em;\n  padding-top: 60px;\n}\n\n.import-list {\n  border: 1px solid var(--border);\n  border-radius: 5px;\n  margin-top: 0.5em;\n  padding: 0.5em;\n  flex: 1;\n  overflow-y: auto;\n}\n\n.person-to-add {\n  cursor: pointer;\n}\n</style>\n"],"names":["_sfc_main","DepartmentNamesCell","PeopleNameCell","mapGetters","_a","mapActions","person","ButtonSimple","ComboboxDepartment","ComboboxProduction","PageLayout","PeopleAvatar","PeopleField","PeopleName","ProductionTeamList","_b","a","b","production","sortPeople","personId","departmentId"],"mappings":"8PAoEA,MAAAA,EAAA,CACA,KAAA,uBAEA,WAAA,CACA,oBAAAC,EACA,eAAAC,CACA,EAEA,MAAA,CACA,QAAA,CACA,KAAA,MACA,QAAA,IAAA,CAAA,CACA,CACA,EAEA,SAAA,CACA,GAAAC,EAAA,CAAA,qBAAA,sBAAA,CAAA,EAEA,SAAA,OACA,MAAA,GAAAC,EAAA,KAAA,UAAA,MAAAA,EAAA,OACA,CACA,EAEA,QAAA,CACA,GAAAC,EAAA,CAAA,sBAAA,CAAA,EAEA,aAAAC,EAAA,CACA,KAAA,qBAAAA,CAAA,CACA,CACA,CACA,47DCiBAN,EAAA,CACA,KAAA,OAEA,WAAA,CACA,aAAAO,EACA,mBAAAC,EACA,mBAAAC,EACA,WAAAC,EACA,aAAAC,EACA,YAAAC,EACA,WAAAC,EACA,mBAAAC,CACA,EAEA,MAAA,CACA,MAAA,CACA,mBAAA,KACA,mBAAA,KACA,OAAA,KACA,cAAA,GACA,mBAAA,EACA,CACA,EAEA,SAAA,SACA,KAAA,qBAAA,OAAA,IACA,KAAA,oBAAAV,EAAA,KAAA,qBAAA,CAAA,IAAA,YAAAA,EAAA,GACA,KAAA,oBAAAW,EAAA,KAAA,YAAA,KAAA,CAAAC,EAAAC,IACAD,EAAA,KAAA,cAAAC,EAAA,IAAA,CACA,EAAA,CAAA,IAFA,YAAAF,EAEA,GAEA,EAEA,SAAA,CACA,GAAAZ,EAAA,CACA,oBACA,cACA,gBACA,uBACA,kBACA,eACA,YACA,eACA,CAAA,EAEA,sBAAA,CACA,OAAA,KAAA,gBAAA,OACAe,GAAAA,EAAA,KAAA,KAAA,kBAAA,EACA,CACA,EAEA,aAAA,CACA,OAAAC,EACA,KAAA,kBAAA,KAAA,IAAAC,GACA,KAAA,UAAA,IAAAA,CAAA,CACA,CACA,CACA,EAEA,gBAAA,CACA,OAAA,KAAA,aAAA,OACAd,GACA,CAAA,KAAA,kBAAA,KAAA,SAAAA,EAAA,EAAA,GAAAA,EAAA,MACA,CACA,CACA,EAEA,QAAA,CACA,GAAAD,EAAA,CAAA,iBAAA,CAAA,EAEA,WAAA,CACA,KAAA,SACA,KAAA,gBAAA,KAAA,MAAA,EACA,WAAA,IAAA,CACA,KAAA,MAAA,cAAA,EAAA,MAAA,CACA,EAAA,CAAA,EAEA,EAEA,aAAAC,EAAA,CACA,KAAA,qBAAAA,CAAA,CACA,EAEA,0BAAA,CACA,KAAA,cAAA,IAAA,KAAA,kBAAA,EACA,KAAA,QAAAc,GAAA,CACA,KAAA,gBAAA,KAAA,UAAA,IAAAA,CAAA,CAAA,CACA,CAAA,CACA,EAEA,0BAAA,CACA,MAAAC,EAAA,KAAA,mBACA,KAAA,aACA,OAAAf,GAAAA,EAAA,YAAA,SAAAe,CAAA,CAAA,EACA,QAAAf,GAAA,CACA,KAAA,gBAAAA,CAAA,CACA,CAAA,CACA,CACA,EAEA,UAAA,CACA,MAAA,CACA,MAAA,GAAA,KAAA,kBAAA,IAAA,MAAA,KAAA,GACA,aACA,CAAA,UACA,CACA,CACA"}