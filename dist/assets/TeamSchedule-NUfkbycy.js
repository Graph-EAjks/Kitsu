import{f as i,b6 as c,C as u,aS as h,U as p,S as m,aT as r,m as f,aU as d,h as D,bB as l,aZ as _,c5 as b,W as v,n as y}from"./index-uoRB9nkr.js";const S={name:"team-schedule",mixins:[i],components:{ComboboxDepartment:c,ComboboxNumber:u,Datepicker:h,PeopleField:p,Schedule:m},data(){return{endDate:r().add(3,"months"),personDates:{},scheduleItems:[],selectedDepartment:null,selectedEndDate:null,selectedPerson:null,selectedStartDate:null,startDate:r(),zoomLevel:1,zoomOptions:[{label:"1",value:1},{label:"2",value:2},{label:"3",value:3}],loading:{schedule:!1},errors:{schedule:!1}}},mounted(){this.init()},computed:{...f(["displayedPeople","taskTypeMap","user"]),locale(){return this.user.locale==="fr_FR"?d.fr:d.en},selectablePeople(){return this.selectedDepartment?this.displayedPeople.filter(t=>t.departments.includes(this.selectedDepartment)):this.displayedPeople}},methods:{...D(["assignSelectedTasks","fetchPersonTasks","getPersonsTasksDates","loadPeople","unassignPersonFromTask","updateTask"]),async init(){this.loading.schedule=!0,await Promise.all([this.loadPeople(),this.loadPersonDates()]),this.refreshSchedule(),this.startDate=r(),this.endDate=r().add(3,"months"),Object.values(this.personDates).forEach(t=>{t.startDate.isBefore(this.startDate)&&(this.startDate=t.startDate.clone()),t.endDate.isAfter(this.endDate)&&(this.endDate=t.endDate.clone())}),this.selectedStartDate=this.startDate.toDate(),this.selectedEndDate=this.endDate.toDate()},async loadPersonDates(t=!1){const e=await this.getPersonsTasksDates();this.personDates={},e.forEach(a=>{this.personDates[a.person_id]={endDate:l(a.max_date),startDate:l(a.min_date)}}),t&&this.scheduleItems.forEach(a=>{const s=this.personDates[a.id];s&&(a.startDate=s.startDate,a.endDate=s.endDate)})},refreshSchedule(){const t=this.selectedPerson?[this.selectedPerson]:this.selectablePeople;this.scheduleItems=this.convertScheduleItems(t)},convertScheduleItems(t){return t.map(e=>{let a=r(),s=r();const n=this.personDates[e.id];return n&&n.startDate&&n.endDate&&(a=l(n.startDate),s=l(n.endDate)),{...e,avatar:!0,color:e.color||_.fromString(e.name,!0),startDate:a,endDate:s,expanded:!1,loading:!1,editable:!1,route:b(e.id,"schedule"),children:[]}})},buildTaskScheduleItem(t,e){let a=r(),s;if(!e.start_date||!e.due_date)return null;e.start_date&&(a=l(e.start_date));const n=this.formatDuration(e.estimation);e.due_date&&(s=l(e.due_date)),(!s||s.isBefore(a))&&(s=a.clone().add(1,"days"));const o=this.taskTypeMap.get(e.task_type_id);return{...e,name:`${e.full_entity_name} / ${o.name}`,startDate:a,endDate:s,loading:!1,man_days:n,editable:!0,unresizable:!0,color:o.color,parentElement:t}},saveTaskScheduleItem(t){return this.updateTask({taskId:t.id,data:{start_date:t.startDate.format("YYYY-MM-DD"),due_date:t.endDate.format("YYYY-MM-DD")}})},async onScheduleItemChanged(t){t.type==="Task"&&(await this.saveTaskScheduleItem(t),await this.loadPersonDates(!0))},onScheduleItemAssigned(t,e){t.type==="Task"&&this.assignSelectedTasks({personId:e.id,taskIds:[t.id]})},onScheduleItemUnassigned(t,e){t.type==="Task"&&this.unassignPersonFromTask({person:e,task:t})},async expandPersonElement(t,e){if(t.expanded=!t.expanded,!!t.expanded){t.loading=!0,t.children=[];try{const a=await this.fetchPersonTasks(t.id);t.children=a.map(s=>this.buildTaskScheduleItem(t,s)).filter(Boolean).sort(v.firstBy("startDate").thenBy("project_name").thenBy("name")),e&&e(t)}catch(a){console.error(a)}t.loading=!1}},onUpdateSelectedStartDate(t){this.startDate=l(t)},onUpdateSelectedEndDate(t){this.endDate=l(t)}},socket:{},watch:{selectedDepartment(){this.selectedPerson&&!this.selectablePeople.includes(this.selectedPerson)&&this.$refs["people-field"].clear(),this.refreshSchedule()},selectedPerson(){this.refreshSchedule()}},metaInfo(){return{title:`${this.$t("team_schedule.title_main")} - Kitsu`}}};var P=function(){var e=this,a=e._self._c;return a("div",{staticClass:"columns fixed-page"},[a("div",{staticClass:"column main-column"},[a("div",{staticClass:"flexrow project-dates"},[a("div",{staticClass:"flexrow-item"},[a("label",{staticClass:"label"},[e._v(" "+e._s(e.$t("main.start_date"))+" ")]),a("datepicker",{attrs:{"wrapper-class":"datepicker","input-class":"date-input input short",language:e.locale,"monday-first":!0,typeable:!0,format:"yyyy-MM-dd"},on:{selected:e.onUpdateSelectedStartDate},model:{value:e.selectedStartDate,callback:function(s){e.selectedStartDate=s},expression:"selectedStartDate"}})],1),a("div",{staticClass:"flexrow-item"},[a("label",{staticClass:"label"},[e._v(" "+e._s(e.$t("main.end_date"))+" ")]),a("datepicker",{attrs:{"wrapper-class":"datepicker","input-class":"date-input input short",language:e.locale,"monday-first":!0,typeable:!0,format:"yyyy-MM-dd"},on:{selected:e.onUpdateSelectedEndDate},model:{value:e.selectedEndDate,callback:function(s){e.selectedEndDate=s},expression:"selectedEndDate"}})],1),a("combobox-number",{staticClass:"flexrow-item zoom-level",attrs:{label:e.$t("schedule.zoom_level"),options:e.zoomOptions},model:{value:e.zoomLevel,callback:function(s){e.zoomLevel=s},expression:"zoomLevel"}}),a("combobox-department",{staticClass:"flexrow-item",attrs:{label:e.$t("main.department")},model:{value:e.selectedDepartment,callback:function(s){e.selectedDepartment=s},expression:"selectedDepartment"}}),a("div",{staticClass:"flexrow-item people-filter"},[a("label",{staticClass:"label"},[e._v(" "+e._s(e.$t("main.person"))+" ")]),a("people-field",{ref:"people-field",attrs:{people:e.selectablePeople,placeholder:e.$t("team_schedule.person_placeholder"),wide:""},model:{value:e.selectedPerson,callback:function(s){e.selectedPerson=s},expression:"selectedPerson"}})],1)],1),a("schedule",{attrs:{"end-date":e.endDate,"hide-man-days":!0,hierarchy:e.scheduleItems,"is-error":e.errors.schedule,"is-loading":e.loading.schedule,multiline:!0,reassignable:!0,"start-date":e.startDate,"with-milestones":!1,"zoom-level":e.zoomLevel},on:{"item-changed":e.onScheduleItemChanged,"item-assign":e.onScheduleItemAssigned,"item-unassign":e.onScheduleItemUnassigned,"root-element-expanded":e.expandPersonElement}})],1)])},g=[],x=y(S,P,g,!1,null,"837bd5d8",null,null);const T=x.exports;export{T as default};
//# sourceMappingURL=TeamSchedule-NUfkbycy.js.map
