{"version":3,"sources":["webpack:///./src/components/modals/EditEpisodeModal.vue?4a8b","webpack:///./src/components/modals/EditEpisodeModal.vue?0a2e","webpack:///src/components/modals/EditEpisodeModal.vue","webpack:///./src/components/modals/EditEpisodeModal.vue?6aab","webpack:///./src/components/modals/EditEpisodeModal.vue","webpack:///./src/components/lists/EpisodeList.vue?6f4d","webpack:///./src/components/pages/Episodes.vue?2c1f","webpack:///./src/components/lists/EpisodeList.vue?6aa6","webpack:///src/components/lists/EpisodeList.vue","webpack:///./src/components/lists/EpisodeList.vue?14e6","webpack:///./src/components/lists/EpisodeList.vue","webpack:///src/components/pages/Episodes.vue","webpack:///./src/components/pages/Episodes.vue?bb0e","webpack:///./src/components/pages/Episodes.vue","webpack:///./src/components/pages/Episodes.vue?9fbf"],"names":["render","_vm","this","_h","$createElement","_c","_self","class","active","staticClass","on","$event","$emit","episodeToEdit","id","_v","_s","$t","name","preventDefault","directives","rawName","ref","attrs","runConfirmation","model","value","form","callback","$$v","$set","expression","type","indexOf","_k","keyCode","key","ctrlKey","apply","arguments","metaKey","_l","descriptor","choices","length","getDescriptorChoicesOptions","data","field_name","isLoading","isError","staticRenderFns","mixins","components","ModalFooter","TextField","TextareaField","props","default","description","production_id","episodeSuccessText","fps","computed","mapGetters","methods","mapActions","label","isEditing","resetForm","mounted","watch","component","isSearchActive","onSearchChange","saveSearchQuery","modals","isBuildFilterDisplayed","isCurrentUserClient","_e","showNewModal","isEpisodesLoading","initialLoading","episodeSearchQueries","changeSearch","removeSearchQuery","episodeSorting","onChangeSortClicked","displayedEpisodes","isEpisodesLoadingError","episodeValidationColumns","departmentFilter","onAddMetadataClicked","showCreateTasksModal","onDeleteAllTasksClicked","onDeleteClicked","onDeleteMetadataClicked","onEditClicked","onEditMetadataClicked","onFieldChanged","onMetadataChanged","saveScrollPosition","nbSelectedTasks","selectedTasks","values","next","isNewDisplayed","loading","episode","errors","confirmEditEpisode","isDeleteDisplayed","del","deleteText","confirmDeleteEpisode","isDeleteMetadataDisplayed","deleteMetadata","confirmDeleteMetadata","isDeleteAllTasksDisplayed","deleteAllTasks","deleteAllTasksText","deleteAllTasksLockText","confirmDeleteAllTasks","isCreateTasksDisplayed","creatingTasks","creatingTasksStay","hideCreateTasksModal","confirmCreateTasks","confirmCreateTasksAndStay","isAddMetadataDisplayed","addMetadata","descriptorToEdit","closeMetadataModal","confirmAddMetadata","isAddThumbnailsDisplayed","addThumbnails","hideAddThumbnailsModal","confirmAddThumbnails","confirmBuildFilter","edit","episodeToDelete","hiddenColumns","lastHeaderMenuDisplayed","isCurrentUserManager","stickedColumns","onMinimizeColumnToggled","onSortByTaskTypeClicked","onSelectColumn","stickColumnClicked","isMetadataColumnEditAllowed","lastMetadaDataHeaderMenuDisplayed","onEpisodeMetadataClicked","onSortByMetadataClicked","metadataStickColumnClicked","isCurrentUserSupervisor","j","refInFor","offsets","event","showMetadataHeaderMenu","columnId","columnIndexInGrid","getValidationStyle","showHeaderMenu","isShowInfos","isEpisodeDescription","isEpisodeTime","metadataDisplayHeaders","timeSpent","isEpisodeEstimation","estimation","highlighted","isEmptyTask","columnSelectorDisplayed","episodeMetadataDescriptors","toggleColumnSelector","i","isListVisible","canceled","strong","isBigThumbnails","episodePath","style","isSupervisorInDepartments","departments","domProps","getMetadataFieldValue","onMetadataFieldChanged","onInputKeyUp","option","taskTypeMap","get","isShowAssignations","isSelected","taskMap","validations","infos","onTaskSelected","onTaskUnselected","onDescriptionChanged","formatDuration","stickedDisplayedValidationColumns","isEmptyList","_m","displayedEpisodesLength","$tc","displayedEpisodesTimeSpent","displayedEpisodesEstimation","descriptorMixin","domMixin","formatListMixin","entityListMixin","selectionListMixin","validationColumns","lastHeaderMenuDisplayedIndexInGrid","lastSelectedEpisode","lastSelection","ButtonSimple","DescriptionCell","EntityThumbnail","MetadataHeader","RowActionsCell","TableHeaderMenu","TableMetadataHeaderMenu","TableMetadataSelectorMenu","TableInfo","ValidationCell","ValidationHeader","visibleColumns","count","displayedValidationColumns","metadataDescriptors","localStorageStickKey","getPath","params","route","ActionPanel","AddMetadataModal","AddThumbnailsModal","BigThumbnailsButton","BuildFilterModal","CreateTasksModal","DeleteModal","EditEpisodeModal","EpisodeList","HardDeleteModal","SearchField","SearchQueryList","SortingInfo","ShowAssignationsButton","ShowInfosButton","TaskInfo","formData","genericColumns","historyEdit","optionalColumns","pageName","parsedCSV","selectedDepartment","taskTypeForTaskDeletion","isImportRenderDisplayed","isImportDisplayed","importing","stay","importingError","beforeDestroy","created","searchQuery","then","catch","finalize","renderColumns","collection","filteredEpisodes","episodes","console","runTasksCreation","task_type_id","project_id","selectionOnly","reset","resetEditModal","applySearch","onExportClick","moment","headers","sortByName","filter","forEach","csv","fieldName","metadata","$route","currentProduction","metaInfo","title"],"mappings":"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,EAAI6E,QAAiB,IAC56C,EAAkB,CAAC,WAAa,IAAI7E,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,IAAI,CAACI,YAAY,QAAQ,CAACJ,EAAG,MAAM,CAACkB,MAAM,CAAC,IAAM,EAAQ,e,g6CCiYvJ,OACfL,oBACAiC,QACA4J,OACAC,OACAC,OACAC,OACAC,QAGA3J,OACA+B,mBACAvD,WACAyB,mBAAA,WAEAR,SACAjB,aACAyB,YAEAT,WACAhB,aACAyB,YAEA2J,mBACApL,WACAyB,mBAAA,WAEAiC,kBACA1D,WACAyB,mBAAA,YAIAX,gBACA,OACAd,eACA4G,iBACAC,6BACAQ,uCACAgE,wCACAC,yBACAC,mBACAjD,wBACAG,cACAF,cAEAX,WACAb,oBAIA3F,YACAoK,oBACAC,uBACAC,uBACAC,sBACAC,sBACAC,uBACAC,+BACAC,iCACAC,iBACAC,sBACAC,yBAGApK,gBACAC,gBACA,oBACA,aACA,uBACA,6BACA,WACA,oBACA,uBACA,iBACA,8BACA,0BACA,6BACA,kBACA,qBACA,uBACA,0BACA,sBACA,kBACA,uBACA,sBACA,gBACA,qBACA,cACA,kBACA,UACA,cACA,UACA,IAEA0I,uBACA,OACA,+BACA,uCACA,iBACA,gBACA,4DAIAzB,yBACA,OACA,iBACA,cAEA,gCAKAmD,0BACA,QAkBA,OAjBAC,8BACA,kBACA,0BACA,EACA,EACAA,0CACAA,8BACA,kBACA,0DACA,EACA,EACAA,8BACA,kBACA,iEACA,EACA,EACAA,0CACA,GAGAC,sCAAA,WACA,kDACA,oCACA,uCAIAC,+BACA,wCAGAC,gCACA,6DAIAvK,eACAC,gBACA,yBACA,IAEA+H,yBACA,OACA,8BACA,iCAIAZ,wBACA,kCAGAoD,sBACA,OACAtN,OACAuN,QACA9K,0CAMA,OAHA,IACA+K,uBAEA,KAIApK,OACAiB,6BACA,4BAGA6H,6BACA,mEAGArE,0BACA,sBAGA/F,qBACA,wBC3mBoW,I,wBCQhWuB,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,WACA,MAIa,EAAAA,E,smEC6MA,QACfrD,gBACAiC,uBAEAC,YACAuL,mBACAC,wBACAC,0BACAC,2BACAC,wBACAvB,oBACAwB,wBACAC,mBACAC,wBACAC,cACAC,uBACAC,mBACAC,uBACAC,mBACAC,+BACAC,wBACAC,wBAGA5M,gBACA,OACAd,eACAwF,4BACAU,oBACAxC,oBACAiD,qBACA9H,mBACA8O,cACAC,gBACA,qCACA,qCACA,0CAEAC,eACA5K,kBACAT,kBACAsL,iBACA,eAEAC,oBACAC,aACAC,yBACAC,6BACAvL,QACAqD,0BACAK,4BACAzD,0BACA8C,0BACAZ,qBACAI,6BACAG,6BACA8I,2BACAC,qBACA3J,mBAEAC,SACAuB,eACAK,iBACAX,iBACAC,qBACAN,kBACAH,kBACAR,WACAI,OACAsJ,aACAC,SAEA1J,QACAqB,eACAd,kBACAQ,iBACAL,kBACA+I,aACAE,uBAKAC,yBACA,8BAGAC,mBACA,0CAGApM,mBAAA,WACA,KACA,yDACA,kDAEA,8DACAqM,+BAEA,wBACA,6CACA,gCAEA,sBACA,6CACA,iCAEA,2DACA,yCACA,6CAEA,yBAGA,iBACA,oBACA,0BACA,4CACA,mBACA,0CACA,+BAMA,wBACA,0CACA,uEAEA,6BACAC,iBACA,uBAEAC,sBAEA,iDACAC,MAIA/M,kBACAC,gBACA,iBACA,oBACA,oBACA,cACA,aACA,WACA,uBACA,sBACA,uBACA,uBACA,sBACA,gBACA,oBACA,yBACA,qBACA,WACA,kBACA,kBACA,gBACA,aACA,uBACA,sBACA,oBACA,2BACA,4BACA,iBACA,cACA,OACA,gBACA,gCACA,IAEA+M,yBACA,gEAMA,OAJA,qDACAC,eACAA,6BAEA,GAGAC,4BACA,SAKA,OAJA,4CACA,aACAC,WAEA,GAGA3C,+BACA,0CAIAtK,iBACAC,gBACA,wBACA,cACA,oBACA,wBACA,yBACA,wBACA,gBACA,2BACA,cACA,sBACA,mBACA,wBACA,aACA,sBACA,oBACA,0BACA,aACA,mBACA,mBACA,uBACA,IAEAmE,+BAAA,WACA,4BACAzG,wBACA,8BACAgP,iBACA,yBACA,sCAEAC,mBACAM,iBACA,yBACA,4BAIAnM,wBACA,sBACA,+BAGAkC,gCAAA,WACA,oBACA,mBACA,yCACA0J,iBACA,iBACA,iCAEAC,mBACAM,iBACA,iBACA,oBAIAC,+BAEA,OADA,6BACA,kBACAnP,gBACAoP,4BACAC,qCACAC,mBAIAC,iBAAA,WACA,uBACA,wCACA,oBACA,wBAIAC,0BACA,OAAAtQ,SACA,gCACAS,4CAEA,sBAGA8P,wBACA,yBACA,sBACA,wBAGA/M,4BACA,0BACAkM,sBAGAxL,8BACA,4BACAwL,sBAGAc,yBAAA,WACA,2BACAf,kBACA,OACAgB,2BACA,QACA,yBACA,wBAEA,8BACA,GACA,6BACA,qCAEA,kBACAC,wBAEAC,oDACAC,oBAAA,mCACAC,qBACAH,kBAEA,iBACAA,2CAEA,uBACAA,sCAEA,2BACAG,qBACAH,kCACAA,0BAEAI,yCAIA9L,2BAAA,cAAA+L,cAAAvQ,UACA,GACAZ,QACA4C,2BAEAZ,OACA,qBAGAqD,8BAAA,cAAAzD,eAAAhB,UACA,KACAwQ,kBACA,OACApR,QACAgC,QAEA,qBAGAkD,0BACA,qBACA,+BAGAF,4BACA,uBACA,kCAGAe,+BAAA,WACA,qBACA,oBAEA,KACA,oBACA8J,iBACA,kBACA,8BAEAC,kBACA,kBACA,qBAGAjP,uCACA,mBACAgP,iBACA,kBACA,8BAEAC,kBACA,kBACA,sBAKA5J,sBACA,2BACA,SACA,gCAAA9F,cAEA,MAKAoD,OACA6N,kBACA,sBACA,+BACA,gDACA,QACA,6BACA,uBAIAC,6BACA,gDACA,sDACA,uBACA,cAGApN,6BAAA,WACA,4BACA,SAEA,0BACA,oCAEA0L,+BAEA,uBACA,+CACA,2BACA,oBAEA,4BACA,6CACA,mCAOA2B,oBACA,OACAC,iGC/pBiW,MCQ7V,I,UAAY,eACd,GACAtS,EACAkD,GACA,EACA,KACA,WACA,OAIa,gB,2CCnBf","file":"js/chunk-1c033f68.93f8d93a.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EditEpisodeModal.vue?vue&type=style&index=0&id=f722693e&prod&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:{\n  'modal': true,\n  'is-active': _vm.active\n}},[_c('div',{staticClass:\"modal-background\",on:{\"click\":function($event){return _vm.$emit('cancel')}}}),_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"box\"},[(_vm.episodeToEdit && this.episodeToEdit.id)?_c('h1',{staticClass:\"title\"},[_vm._v(\" \"+_vm._s(_vm.$t(\"episodes.edit_title\"))+\" \"+_vm._s(_vm.episodeToEdit.name)+\" \")]):_c('h1',{staticClass:\"title\"},[_vm._v(\" \"+_vm._s(_vm.$t(\"episodes.new_episode\"))+\" \")]),_c('form',{on:{\"submit\":function($event){$event.preventDefault();}}},[_c('text-field',{directives:[{name:\"focus\",rawName:\"v-focus\"}],ref:\"nameField\",attrs:{\"label\":_vm.$t('episodes.fields.name')},on:{\"enter\":_vm.runConfirmation},model:{value:(_vm.form.name),callback:function ($$v) {_vm.$set(_vm.form, \"name\", $$v)},expression:\"form.name\"}}),_c('textarea-field',{ref:\"descriptionField\",attrs:{\"label\":_vm.$t('episodes.fields.description')},on:{\"keyup\":[function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }if(!$event.ctrlKey){ return null; }return _vm.runConfirmation.apply(null, arguments)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }if(!$event.metaKey){ return null; }return _vm.runConfirmation.apply(null, arguments)}]},model:{value:(_vm.form.description),callback:function ($$v) {_vm.$set(_vm.form, \"description\", $$v)},expression:\"form.description\"}}),_vm._l((_vm.episodeMetadataDescriptors),function(descriptor){return _c('div',{key:descriptor.id},[(descriptor.choices.length > 0)?_c('combobox',{attrs:{\"label\":descriptor.name,\"options\":_vm.getDescriptorChoicesOptions(descriptor)},model:{value:(_vm.form.data[descriptor.field_name]),callback:function ($$v) {_vm.$set(_vm.form.data, descriptor.field_name, $$v)},expression:\"form.data[descriptor.field_name]\"}}):_c('text-field',{attrs:{\"label\":descriptor.name},on:{\"enter\":_vm.runConfirmation},model:{value:(_vm.form.data[descriptor.field_name]),callback:function ($$v) {_vm.$set(_vm.form.data, descriptor.field_name, $$v)},expression:\"form.data[descriptor.field_name]\"}})],1)})],2),_c('modal-footer',{attrs:{\"error-text\":_vm.$t('episodes.edit_error'),\"is-loading\":_vm.isLoading,\"is-error\":_vm.isError},on:{\"confirm\":_vm.runConfirmation,\"cancel\":function($event){return _vm.$emit('cancel')}}})],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n<div :class=\"{\n  'modal': true,\n  'is-active': active\n}\">\n  <div class=\"modal-background\" @click=\"$emit('cancel')\" ></div>\n\n  <div class=\"modal-content\">\n    <div class=\"box\">\n\n      <h1 class=\"title\" v-if=\"episodeToEdit && this.episodeToEdit.id\">\n        {{ $t(\"episodes.edit_title\") }} {{ episodeToEdit.name }}\n      </h1>\n      <h1 class=\"title\" v-else>\n        {{ $t(\"episodes.new_episode\") }}\n      </h1>\n\n      <form v-on:submit.prevent>\n        <text-field\n          ref=\"nameField\"\n          :label=\"$t('episodes.fields.name')\"\n          v-model=\"form.name\"\n          @enter=\"runConfirmation\"\n          v-focus\n        />\n        <textarea-field\n          ref=\"descriptionField\"\n          :label=\"$t('episodes.fields.description')\"\n          @keyup.ctrl.enter=\"runConfirmation\"\n          @keyup.meta.enter=\"runConfirmation\"\n          v-model=\"form.description\"\n        />\n\n        <div\n          :key=\"descriptor.id\"\n          v-for=\"descriptor in episodeMetadataDescriptors\"\n        >\n          <combobox\n            v-if=\"descriptor.choices.length > 0\"\n            :label=\"descriptor.name\"\n            :options=\"getDescriptorChoicesOptions(descriptor)\"\n            v-model=\"form.data[descriptor.field_name]\"\n          />\n          <text-field\n            :label=\"descriptor.name\"\n            @enter=\"runConfirmation\"\n            v-model=\"form.data[descriptor.field_name]\"\n            v-else\n          />\n        </div>\n      </form>\n\n      <modal-footer\n        :error-text=\"$t('episodes.edit_error')\"\n        :is-loading=\"isLoading\"\n        :is-error=\"isError\"\n        @confirm=\"runConfirmation\"\n        @cancel=\"$emit('cancel')\"\n      />\n    </div>\n  </div>\n</div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport { modalMixin } from '@/components/modals/base_modal'\nimport ModalFooter from '@/components/modals/ModalFooter'\nimport TextField from '@/components/widgets/TextField'\nimport TextareaField from '@/components/widgets/TextareaField'\n\nexport default {\n  name: 'edit-episode-modal',\n  mixins: [modalMixin],\n  components: {\n    ModalFooter,\n    TextField,\n    TextareaField\n  },\n\n  props: {\n    active: {\n      type: Boolean,\n      default: false\n    },\n    isError: {\n      type: Boolean,\n      default: false\n    },\n    isLoading: {\n      type: Boolean,\n      default: false\n    },\n    episodeToEdit: {\n      type: Object,\n      default: () => {}\n    }\n  },\n\n  data () {\n    if (this.episodeToEdit && this.episodeToEdit.id) {\n      return {\n        form: {\n          id: this.episodeToEdit.id,\n          name: this.episodeToEdit.name,\n          description: this.episodeToEdit.description,\n          production_id: this.episodeToEdit.project_id,\n          data: this.episodeToEdit.data || {}\n        },\n        episodeSuccessText: ''\n      }\n    } else {\n      return {\n        form: {\n          id: '',\n          name: '',\n          description: '',\n          fps: '',\n          data: {}\n        },\n        episodeSuccessText: ''\n      }\n    }\n  },\n\n  computed: {\n    ...mapGetters([\n      'currentProduction',\n      'episodeMetadataDescriptors'\n    ])\n  },\n\n  methods: {\n    ...mapActions([\n    ]),\n\n    getDescriptorChoicesOptions (descriptor) {\n      const values = descriptor.choices.map(c => ({ label: c, value: c }))\n      return [{ label: '', value: '' }, ...values]\n    },\n\n    runConfirmation () {\n      this.$emit('confirm', this.form)\n    },\n\n    isEditing () {\n      return this.episodeToEdit && this.episodeToEdit.id\n    },\n\n    resetForm () {\n      this.episodeSuccessText = ''\n      if (!this.isEditing()) {\n        this.form.id = null\n        this.form.name = ''\n        this.form.description = ''\n        this.form.data = {}\n      } else {\n        this.form = {\n          id: this.episodeToEdit.id,\n          name: this.episodeToEdit.name,\n          description: this.episodeToEdit.description,\n          data: this.episodeToEdit.data || {}\n        }\n      }\n    }\n  },\n\n  mounted () {\n    this.resetForm()\n  },\n\n  watch: {\n    active () {\n      if (this.active) {\n        this.resetForm()\n      }\n    },\n\n    episodeToEdit () {\n      this.resetForm()\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.modal-content .box p.text {\n  margin-bottom: 1em;\n}\n.is-danger {\n  color: #ff3860;\n  font-style: italic;\n}\n\n.info-message {\n  margin-top: 1em;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EditEpisodeModal.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EditEpisodeModal.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./EditEpisodeModal.vue?vue&type=template&id=f722693e&scoped=true&\"\nimport script from \"./EditEpisodeModal.vue?vue&type=script&lang=js&\"\nexport * from \"./EditEpisodeModal.vue?vue&type=script&lang=js&\"\nimport style0 from \"./EditEpisodeModal.vue?vue&type=style&index=0&id=f722693e&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"f722693e\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EpisodeList.vue?vue&type=style&index=0&id=79a92dc4&prod&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"columns fixed-page\"},[_c('action-panel'),_c('div',{staticClass:\"column main-column\"},[_c('div',{staticClass:\"episodes page\"},[_c('div',{staticClass:\"episode-list-header page-header\"},[_c('div',{staticClass:\"flexrow\"},[_c('search-field',{ref:\"episode-search-field\",attrs:{\"can-save\":true,\"active\":_vm.isSearchActive,\"placeholder\":\"ex: e01 episode=wip\"},on:{\"change\":_vm.onSearchChange,\"enter\":_vm.saveSearchQuery,\"save\":_vm.saveSearchQuery}}),_c('button-simple',{staticClass:\"flexrow-item\",attrs:{\"title\":_vm.$t('entities.build_filter.title'),\"icon\":\"funnel\"},on:{\"click\":function () { return _vm.modals.isBuildFilterDisplayed = true; }}}),_c('div',{staticClass:\"filler\"}),(!_vm.isCurrentUserClient)?_c('div',{staticClass:\"flexrow flexrow-item\"},[_c('show-assignations-button',{staticClass:\"flexrow-item\"}),_c('show-infos-button',{staticClass:\"flexrow-item\"}),_c('big-thumbnails-button',{staticClass:\"flexrow-item\"})],1):_vm._e(),(_vm.isCurrentUserManager)?_c('div',{staticClass:\"flexrow\"},[_c('button-simple',{staticClass:\"flexrow-item\",attrs:{\"text\":_vm.$t('episodes.new_episode'),\"icon\":\"plus\"},on:{\"click\":_vm.showNewModal}})],1):_vm._e()],1),_c('div',{staticClass:\"query-list mt1\"},[(!_vm.isEpisodesLoading && !_vm.initialLoading)?_c('search-query-list',{attrs:{\"queries\":_vm.episodeSearchQueries},on:{\"change-search\":_vm.changeSearch,\"remove-search\":_vm.removeSearchQuery}}):_vm._e()],1)]),(_vm.episodeSorting && _vm.episodeSorting.length > 0)?_c('sorting-info',{attrs:{\"label\":_vm.$t('main.sorted_by'),\"sorting\":_vm.episodeSorting},on:{\"clear-sorting\":function($event){return _vm.onChangeSortClicked(null)}}}):_vm._e(),_c('episode-list',{ref:\"episode-list\",attrs:{\"displayed-episodes\":_vm.displayedEpisodes,\"is-loading\":_vm.isEpisodesLoading || _vm.initialLoading,\"is-error\":_vm.isEpisodesLoadingError,\"validation-columns\":_vm.episodeValidationColumns,\"department-filter\":_vm.departmentFilter},on:{\"add-metadata\":_vm.onAddMetadataClicked,\"change-sort\":_vm.onChangeSortClicked,\"create-tasks\":_vm.showCreateTasksModal,\"delete-all-tasks\":_vm.onDeleteAllTasksClicked,\"delete-clicked\":_vm.onDeleteClicked,\"delete-metadata\":_vm.onDeleteMetadataClicked,\"edit-clicked\":_vm.onEditClicked,\"edit-metadata\":_vm.onEditMetadataClicked,\"field-changed\":_vm.onFieldChanged,\"metadata-changed\":_vm.onMetadataChanged,\"scroll\":_vm.saveScrollPosition}})],1)]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.nbSelectedTasks === 1),expression:\"nbSelectedTasks === 1\"}],staticClass:\"column side-column\",attrs:{\"id\":\"side-column\"}},[_c('task-info',{attrs:{\"task\":_vm.selectedTasks.values().next().value}})],1),_c('edit-episode-modal',{attrs:{\"active\":_vm.modals.isNewDisplayed,\"is-loading\":_vm.loading.episode,\"is-error\":_vm.errors.episode,\"episode-to-episode\":_vm.episodeToEdit},on:{\"cancel\":function($event){_vm.modals.isNewDisplayed = false},\"confirm\":_vm.confirmEditEpisode}}),_c('delete-modal',{ref:\"delete-episode-modal\",attrs:{\"active\":_vm.modals.isDeleteDisplayed,\"is-loading\":_vm.loading.del,\"is-error\":_vm.errors.del,\"text\":_vm.deleteText(),\"error-text\":_vm.$t('episodes.delete_error')},on:{\"cancel\":function($event){_vm.modals.isDeleteDisplayed = false},\"confirm\":_vm.confirmDeleteEpisode}}),_c('delete-modal',{ref:\"delete-metadata-modal\",attrs:{\"active\":_vm.modals.isDeleteMetadataDisplayed,\"is-loading\":_vm.loading.deleteMetadata,\"is-error\":_vm.errors.deleteMetadata,\"text\":_vm.$t('productions.metadata.delete_text'),\"error-text\":_vm.$t('productions.metadata.delete_error')},on:{\"cancel\":function($event){_vm.modals.isDeleteMetadataDisplayed = false},\"confirm\":_vm.confirmDeleteMetadata}}),_c('hard-delete-modal',{ref:\"delete-all-tasks-modal\",attrs:{\"active\":_vm.modals.isDeleteAllTasksDisplayed,\"is-loading\":_vm.loading.deleteAllTasks,\"is-error\":_vm.errors.deleteAllTasks,\"text\":_vm.deleteAllTasksText(),\"error-text\":_vm.$t('tasks.delete_all_error'),\"lock-text\":_vm.deleteAllTasksLockText,\"selection-option\":true},on:{\"cancel\":function($event){_vm.modals.isDeleteAllTasksDisplayed = false},\"confirm\":_vm.confirmDeleteAllTasks}}),_c('create-tasks-modal',{attrs:{\"active\":_vm.modals.isCreateTasksDisplayed,\"is-loading\":_vm.loading.creatingTasks,\"is-loading-stay\":_vm.loading.creatingTasksStay,\"is-error\":_vm.errors.creatingTasks,\"title\":_vm.$t('tasks.create_tasks_episode'),\"text\":_vm.$t('tasks.create_tasks_episode_explaination'),\"error-text\":_vm.$t('tasks.create_tasks_episode_failed')},on:{\"cancel\":_vm.hideCreateTasksModal,\"confirm\":_vm.confirmCreateTasks,\"confirm-and-stay\":_vm.confirmCreateTasksAndStay}}),_c('add-metadata-modal',{attrs:{\"active\":_vm.modals.isAddMetadataDisplayed,\"is-loading\":_vm.loading.addMetadata,\"is-loading-stay\":_vm.loading.addMetadata,\"is-error\":_vm.errors.addMetadata,\"descriptor-to-edit\":_vm.descriptorToEdit,\"entity-type\":\"Episode\"},on:{\"cancel\":_vm.closeMetadataModal,\"confirm\":_vm.confirmAddMetadata}}),_c('add-thumbnails-modal',{ref:\"add-thumbnails-modal\",attrs:{\"parent\":\"episodes\",\"active\":_vm.modals.isAddThumbnailsDisplayed,\"is-loading\":_vm.loading.addThumbnails,\"is-error\":_vm.errors.addThumbnails},on:{\"cancel\":_vm.hideAddThumbnailsModal,\"confirm\":_vm.confirmAddThumbnails}}),_c('build-filter-modal',{ref:\"build-filter-modal\",attrs:{\"active\":_vm.modals.isBuildFilterDisplayed,\"entity-type\":\"episode\"},on:{\"cancel\":function($event){_vm.modals.isBuildFilterDisplayed = false},\"confirm\":_vm.confirmBuildFilter}}),_c('edit-episode-modal',{attrs:{\"active\":_vm.modals.isNewDisplayed,\"is-loading\":_vm.loading.edit,\"is-error\":_vm.errors.edit,\"episode-to-edit\":_vm.episodeToEdit},on:{\"cancel\":function($event){_vm.modals.isNewDisplayed = false},\"confirm\":_vm.confirmEditEpisode}}),_c('hard-delete-modal',{attrs:{\"active\":_vm.modals.isDeleteDisplayed,\"is-loading\":_vm.loading.del,\"is-error\":_vm.errors.del,\"text\":_vm.deleteText(),\"error-text\":_vm.$t('episodes.delete_error'),\"lock-text\":_vm.episodeToDelete ? _vm.episodeToDelete.name : ''},on:{\"cancel\":function($event){_vm.modals.isDeleteDisplayed = false},\"confirm\":_vm.confirmDeleteEpisode}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"data-list\"},[_c('div',{directives:[{name:\"scroll\",rawName:\"v-scroll\",value:(_vm.onBodyScroll),expression:\"onBodyScroll\"}],ref:\"body\",staticClass:\"datatable-wrapper\"},[_c('table-header-menu',{ref:\"headerMenu\",attrs:{\"is-minimized\":_vm.hiddenColumns[_vm.lastHeaderMenuDisplayed],\"is-edit-allowed\":_vm.isCurrentUserManager,\"is-sticked\":_vm.stickedColumns[_vm.lastHeaderMenuDisplayed]},on:{\"minimize-clicked\":function($event){return _vm.onMinimizeColumnToggled()},\"delete-all-clicked\":function($event){return _vm.onDeleteAllTasksClicked()},\"sort-by-clicked\":function($event){return _vm.onSortByTaskTypeClicked()},\"select-column\":_vm.onSelectColumn,\"toggle-stick\":function($event){return _vm.stickColumnClicked()}}}),_c('table-metadata-header-menu',{ref:\"headerMetadataMenu\",attrs:{\"is-episode-allowed\":_vm.isMetadataColumnEditAllowed(_vm.lastMetadaDataHeaderMenuDisplayed),\"is-sticked\":_vm.stickedColumns[_vm.lastMetadaDataHeaderMenuDisplayed]},on:{\"edit-clicked\":function($event){return _vm.onEpisodeMetadataClicked()},\"delete-clicked\":function($event){return _vm.onDeleteMetadataClicked()},\"sort-by-clicked\":function($event){return _vm.onSortByMetadataClicked()},\"toggle-stick\":function($event){return _vm.metadataStickColumnClicked($event)}}}),_c('table',{staticClass:\"datatable\"},[_c('thead',{directives:[{name:\"columns-resizable\",rawName:\"v-columns-resizable\"}],staticClass:\"datatable-head\",attrs:{\"id\":\"datatable-episode\"}},[_c('tr',[_c('th',{ref:\"th-episode\",staticClass:\"name episode-name datatable-row-header\",attrs:{\"scope\":\"col\"}},[_c('div',{staticClass:\"flexrow\"},[_c('span',{staticClass:\"flexrow-item\"},[_vm._v(\" \"+_vm._s(_vm.$t('episodes.fields.name'))+\" \")]),((_vm.isCurrentUserManager || _vm.isCurrentUserSupervisor)\n                  && !_vm.isLoading)?_c('button-simple',{staticClass:\"is-small flexrow-item\",attrs:{\"icon\":\"plus\",\"text\":''},on:{\"click\":_vm.onAddMetadataClicked}}):_vm._e()],1)]),_vm._l((_vm.stickedVisibleMetadataDescriptors),function(descriptor,j){return (_vm.isShowInfos)?_c('metadata-header',{key:descriptor.id,ref:(\"editor-\" + j),refInFor:true,attrs:{\"descriptor\":descriptor,\"left\":_vm.offsets['editor-' + j] ? ((_vm.offsets['editor-' + j]) + \"px\") : '0',\"is-stick\":\"\"},on:{\"show-metadata-header-menu\":function (event) { return _vm.showMetadataHeaderMenu(descriptor.id, event); }}}):_vm._e()}),_vm._l((_vm.stickedDisplayedValidationColumns),function(columnId,columnIndexInGrid){return (!_vm.isLoading)?_c('validation-header',{key:columnId,ref:(\"validation-\" + columnIndexInGrid),refInFor:true,attrs:{\"hidden-columns\":_vm.hiddenColumns,\"column-id\":columnId,\"validation-style\":_vm.getValidationStyle(columnId),\"left\":_vm.offsets['validation-' + columnIndexInGrid] ? ((_vm.offsets['validation-' + columnIndexInGrid]) + \"px\") : '0',\"type\":\"editor\",\"is-stick\":\"\"},on:{\"show-header-menu\":function (event) { return _vm.showHeaderMenu(columnId, columnIndexInGrid, event); }}}):_vm._e()}),(!_vm.isCurrentUserClient && _vm.isShowInfos && _vm.isEpisodeDescription)?_c('th',{staticClass:\"description selectable\",attrs:{\"scope\":\"col\"}},[_vm._v(\" \"+_vm._s(_vm.$t('episodes.fields.description'))+\" \")]):_vm._e(),_vm._l((_vm.nonStickedVisibleMetadataDescriptors),function(descriptor){return (_vm.isShowInfos)?_c('metadata-header',{key:descriptor.id,attrs:{\"descriptor\":descriptor},on:{\"show-metadata-header-menu\":function (event) { return _vm.showMetadataHeaderMenu(descriptor.id, event); }}}):_vm._e()}),(!_vm.isCurrentUserClient &&\n                  _vm.isShowInfos &&\n                  _vm.isEpisodeTime &&\n                  _vm.metadataDisplayHeaders.timeSpent)?_c('th',{ref:\"th-spent\",staticClass:\"time-spent\",attrs:{\"scope\":\"col\"}},[_vm._v(\" \"+_vm._s(_vm.$t('episodes.fields.time_spent'))+\" \")]):_vm._e(),(!_vm.isCurrentUserClient &&\n                  _vm.isShowInfos &&\n                  _vm.isEpisodeEstimation &&\n                  _vm.metadataDisplayHeaders.estimation)?_c('th',{ref:\"th-spent\",staticClass:\"estimation\",attrs:{\"scope\":\"col\",\"title\":_vm.$t('main.estimation')}},[_vm._v(\" \"+_vm._s(_vm.$t('main.estimation_short'))+\" \")]):_vm._e(),_vm._l((_vm.nonStickedDisplayedValidationColumns),function(columnId,columnIndexInGrid){return (!_vm.isLoading)?_c('validation-header',{key:columnId,attrs:{\"hidden-columns\":_vm.hiddenColumns,\"column-id\":columnId,\"validation-style\":_vm.getValidationStyle(columnId),\"type\":\"episodes\"},on:{\"show-header-menu\":function (event) {\n              _vm.showHeaderMenu(columnId, columnIndexInGrid, event)\n            }}}):_vm._e()}),_c('th',{ref:\"actionsSection\",staticClass:\"actions\",attrs:{\"scope\":\"col\"}},[(_vm.isCurrentUserManager &&\n                    _vm.displayedEpisodes.length > 0 &&\n                    !_vm.isLoading)?_c('button-simple',{class:{\n                'is-small': true,\n                highlighted: _vm.isEmptyTask\n              },attrs:{\"icon\":\"plus\",\"text\":_vm.$t('tasks.create_tasks')},on:{\"click\":function($event){return _vm.$emit('create-tasks')}}}):_vm._e(),_c('table-metadata-selector-menu',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.columnSelectorDisplayed && _vm.isShowInfos),expression:\"columnSelectorDisplayed && isShowInfos\"}],ref:\"headerMetadataSelectorMenu\",attrs:{\"metadataDisplayHeaders\":_vm.metadataDisplayHeaders,\"descriptors\":_vm.episodeMetadataDescriptors,\"exclude\":{\n                timeSpent: !_vm.isEpisodeTime,\n                estimation: !_vm.isEpisodeEstimation\n              },\"namespace\":\"episodes\"},on:{\"update:metadataDisplayHeaders\":function($event){_vm.metadataDisplayHeaders=$event},\"update:metadata-display-headers\":function($event){_vm.metadataDisplayHeaders=$event}}}),(_vm.episodeMetadataDescriptors.length > 0 && _vm.isShowInfos)?_c('button-simple',{staticClass:\"is-small is-pulled-right\",attrs:{\"icon\":\"down\"},on:{\"click\":_vm.toggleColumnSelector}}):_vm._e()],1)],2)]),_c('tbody',{staticClass:\"datatable-body\"},_vm._l((_vm.displayedEpisodes),function(episode,i){return (!_vm.isLoading && _vm.isListVisible)?_c('tr',{key:episode.id,staticClass:\"datatable-row\",class:{canceled: episode.canceled},attrs:{\"scope\":\"row\"}},[_c('th',{class:{\n              'datatable-row-header': true,\n              'episode-name': true,\n              name: true,\n              strong: !episode.canceled\n            }},[_c('div',{staticClass:\"flexrow\"},[_c('entity-thumbnail',{attrs:{\"entity\":episode,\"width\":_vm.isBigThumbnails ? 150 : 50,\"height\":_vm.isBigThumbnails ? 100 : 33,\"empty-width\":_vm.isBigThumbnails ? 150 : 50,\"empty-height\":_vm.isBigThumbnails ? 100 : 34}}),_c('router-link',{attrs:{\"tabindex\":\"-1\",\"title\":episode.name,\"to\":_vm.episodePath(episode.id)}},[_vm._v(\" \"+_vm._s(episode.name)+\" \")])],1)]),_vm._l((_vm.stickedVisibleMetadataDescriptors),function(descriptor,j){return (_vm.isShowInfos)?_c('td',{key:episode.id + '-' + descriptor.id,ref:(\"editor-\" + i + \"-\" + j),refInFor:true,staticClass:\"metadata-descriptor datatable-row-header\",style:({'left': _vm.offsets['editor-' + j] ? ((_vm.offsets['editor-' + j]) + \"px\") : '0'}),attrs:{\"title\":episode.data ? episode.data[descriptor.field_name] : ''}},[(descriptor.choices.length === 0 && (_vm.isCurrentUserManager\n              || _vm.isSupervisorInDepartments(descriptor.departments)))?_c('input',{staticClass:\"input-editor\",domProps:{\"value\":_vm.getMetadataFieldValue(descriptor, episode)},on:{\"input\":function (event) { return _vm.onMetadataFieldChanged(episode, descriptor, event); },\"keyup\":function($event){if(!$event.ctrlKey){ return null; }return (function (event) { return _vm.onInputKeyUp(event, i, j); }).apply(null, arguments)}}}):(_vm.isCurrentUserManager\n              || _vm.isSupervisorInDepartments(descriptor.departments))?_c('span',{staticClass:\"select\"},[_c('select',{staticClass:\"select-input\",on:{\"keyup\":function($event){if(!$event.ctrlKey){ return null; }return (function (event) { return _vm.onInputKeyUp(event, i, j); }).apply(null, arguments)},\"change\":function (event) { return _vm.onMetadataFieldChanged(episode, descriptor, event); }}},_vm._l((_vm.getDescriptorChoicesOptions(descriptor)),function(option,i){return _c('option',{key:((episode.id) + \"-\" + (descriptor.id) + \"-\" + i + \"-\" + (option.label) + \"-\" + (option.value)),domProps:{\"value\":option.value,\"selected\":_vm.getMetadataFieldValue(descriptor, episode) === option.value}},[_vm._v(\" \"+_vm._s(option.label)+\" \")])}),0)]):_c('span',{staticClass:\"metadata-value selectable\"},[_vm._v(\" \"+_vm._s(_vm.getMetadataFieldValue(descriptor, episode))+\" \")])]):_vm._e()}),_vm._l((_vm.stickedDisplayedValidationColumns),function(columnId,j){return (!_vm.isLoading)?_c('validation-cell',{key:columnId + '-' + episode.id,ref:(\"validation-\" + i + \"-\" + j),refInFor:true,class:{\n              'validation-cell': !_vm.hiddenColumns[columnId],\n              'hidden-validation-cell': _vm.hiddenColumns[columnId],\n              'datatable-row-header': true\n            },attrs:{\"column\":_vm.taskTypeMap.get(columnId),\"columnY\":j,\"entity\":episode,\"is-assignees\":_vm.isShowAssignations,\"is-static\":true,\"left\":_vm.offsets['validation-' + j] ? ((_vm.offsets['validation-' + j]) + \"px\") : '0',\"minimized\":_vm.hiddenColumns[columnId],\"rowX\":i,\"selected\":_vm.isSelected(i, j),\"sticked\":true,\"task-test\":_vm.taskMap.get(episode.validations.get(columnId))},on:{\"select\":function (infos) { return _vm.onTaskSelected(infos, true); },\"unselect\":function (infos) { return _vm.onTaskUnselected(infos, true); }}}):_vm._e()}),(!_vm.isCurrentUserClient && _vm.isShowInfos && _vm.isEpisodeDescription)?_c('description-cell',{staticClass:\"description\",attrs:{\"entry\":episode,\"editable\":_vm.isCurrentUserManager},on:{\"description-changed\":function (value) { return _vm.onDescriptionChanged(episode, value); }}}):_vm._e(),_vm._l((_vm.nonStickedVisibleMetadataDescriptors),function(descriptor,j){return (_vm.isShowInfos)?_c('td',{key:episode.id + '-' + descriptor.id,staticClass:\"metadata-descriptor\",attrs:{\"title\":episode.data ? episode.data[descriptor.field_name] : ''}},[(descriptor.choices.length === 0 && (_vm.isCurrentUserManager\n              || _vm.isSupervisorInDepartments(descriptor.departments)))?_c('input',{staticClass:\"input-editor\",domProps:{\"value\":_vm.getMetadataFieldValue(descriptor, episode)},on:{\"input\":function (event) { return _vm.onMetadataFieldChanged(episode, descriptor, event); },\"keyup\":function($event){if(!$event.ctrlKey){ return null; }return (function (event) { return _vm.onInputKeyUp(event, i, j); }).apply(null, arguments)}}}):(_vm.isCurrentUserManager\n              || _vm.isSupervisorInDepartments(descriptor.departments))?_c('span',{staticClass:\"select\"},[_c('select',{staticClass:\"select-input\",on:{\"keyup\":function($event){if(!$event.ctrlKey){ return null; }return (function (event) { return _vm.onInputKeyUp(event, i, j); }).apply(null, arguments)},\"change\":function (event) { return _vm.onMetadataFieldChanged(episode, descriptor, event); }}},_vm._l((_vm.getDescriptorChoicesOptions(descriptor)),function(option,i){return _c('option',{key:((episode.id) + \"-\" + (descriptor.id) + \"-\" + i + \"-\" + (option.label) + \"-\" + (option.value)),domProps:{\"value\":option.value,\"selected\":_vm.getMetadataFieldValue(descriptor, episode) === option.value}},[_vm._v(\" \"+_vm._s(option.label)+\" \")])}),0)]):_c('span',{staticClass:\"metadata-value selectable\"},[_vm._v(\" \"+_vm._s(_vm.getMetadataFieldValue(descriptor, episode))+\" \")])]):_vm._e()}),(!_vm.isCurrentUserClient && _vm.isShowInfos && _vm.isEpisodeTime && _vm.metadataDisplayHeaders.timeSpent)?_c('td',{staticClass:\"time-spent selectable\"},[_vm._v(\" \"+_vm._s(_vm.formatDuration(episode.timeSpent))+\" \")]):_vm._e(),(!_vm.isCurrentUserClient && _vm.isShowInfos && _vm.isEpisodeEstimation && _vm.metadataDisplayHeaders.estimation)?_c('td',{staticClass:\"estimation selectable\"},[_vm._v(\" \"+_vm._s(_vm.formatDuration(episode.estimation))+\" \")]):_vm._e(),_vm._l((_vm.nonStickedDisplayedValidationColumns),function(columnId,j){return (!_vm.isLoading)?_c('validation-cell',{key:(columnId + \"-\" + (episode.id)),ref:(\"validation-\" + i + \"-\" + (j + _vm.stickedDisplayedValidationColumns.length)),refInFor:true,class:{\n              'validation-cell': !_vm.hiddenColumns[columnId],\n              'hidden-validation-cell': _vm.hiddenColumns[columnId]\n            },attrs:{\"column\":_vm.taskTypeMap.get(columnId),\"entity\":episode,\"task-test\":_vm.taskMap.get(episode.validations\n                        ? episode.validations.get(columnId)\n                        : null\n            ),\"minimized\":_vm.hiddenColumns[columnId],\"selected\":_vm.isSelected(i, j + _vm.stickedDisplayedValidationColumns.length),\"rowX\":i,\"columnY\":j,\"is-assignees\":_vm.isShowAssignations},on:{\"select\":_vm.onTaskSelected,\"unselect\":_vm.onTaskUnselected}}):_vm._e()}),(_vm.isCurrentUserManager)?_c('row-actions-cell',{attrs:{\"entry\":episode},on:{\"delete-clicked\":function($event){return _vm.$emit('delete-clicked', episode)},\"edit-clicked\":function($event){return _vm.$emit('edit-clicked', episode)}}}):_c('td',{staticClass:\"actions\"})],2):_vm._e()}),0)])],1),_c('table-info',{attrs:{\"is-loading\":_vm.isLoading,\"is-error\":_vm.isError}}),(_vm.isEmptyList && _vm.isCurrentUserClient && !_vm.isLoading)?_c('div',{staticClass:\"has-text-centered\"},[_vm._m(0),_c('p',{staticClass:\"info\"},[_vm._v(_vm._s(_vm.$t('episodes.empty_list_client')))])]):_vm._e(),(!_vm.isEmptyList && !_vm.isLoading)?_c('p',{staticClass:\"has-text-centered nb-episodes\"},[_vm._v(\" \"+_vm._s(_vm.displayedEpisodesLength)+\" \"+_vm._s(_vm.$tc('episodes.number', _vm.displayedEpisodesLength))+\" \"),(_vm.displayedEpisodesTimeSpent > 0 && _vm.displayedEpisodesEstimation > 0)?_c('span',[_vm._v(\" (\"+_vm._s(_vm.formatDuration(_vm.displayedEpisodesTimeSpent))+\" \"+_vm._s(_vm.$tc('main.days_spent', _vm.displayedEpisodesTimeSpent))+\", \"+_vm._s(_vm.formatDuration(_vm.displayedEpisodesEstimation))+\" \"+_vm._s(_vm.$tc('main.man_days', _vm.displayedEpisodesEstimation))+\") \")]):_vm._e()]):_vm._e()],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticClass:\"info\"},[_c('img',{attrs:{\"src\":require(\"../../assets/illustrations/empty_shot.png\")}})])}]\n\nexport { render, staticRenderFns }","<template>\n<div class=\"data-list\">\n  <div\n    class=\"datatable-wrapper\"\n    ref=\"body\"\n    v-scroll=\"onBodyScroll\"\n  >\n\n    <table-header-menu\n      ref=\"headerMenu\"\n      :is-minimized=\"hiddenColumns[lastHeaderMenuDisplayed]\"\n      :is-edit-allowed=\"isCurrentUserManager\"\n      :is-sticked=\"stickedColumns[lastHeaderMenuDisplayed]\"\n      @minimize-clicked=\"onMinimizeColumnToggled()\"\n      @delete-all-clicked=\"onDeleteAllTasksClicked()\"\n      @sort-by-clicked=\"onSortByTaskTypeClicked()\"\n      @select-column=\"onSelectColumn\"\n      @toggle-stick=\"stickColumnClicked()\"\n    />\n\n    <table-metadata-header-menu\n      ref=\"headerMetadataMenu\"\n      :is-episode-allowed=\"\n        isMetadataColumnEditAllowed(lastMetadaDataHeaderMenuDisplayed)\"\n      :is-sticked=\"stickedColumns[lastMetadaDataHeaderMenuDisplayed]\"\n      @edit-clicked=\"onEpisodeMetadataClicked()\"\n      @delete-clicked=\"onDeleteMetadataClicked()\"\n      @sort-by-clicked=\"onSortByMetadataClicked()\"\n      @toggle-stick=\"metadataStickColumnClicked($event)\"\n    />\n\n    <table class=\"datatable\">\n      <thead\n        class=\"datatable-head\"\n        id=\"datatable-episode\"\n        v-columns-resizable\n      >\n        <tr>\n          <th\n            scope=\"col\"\n            class=\"name episode-name datatable-row-header\"\n            ref=\"th-episode\"\n          >\n            <div class=\"flexrow\">\n              <span class=\"flexrow-item\">\n                {{ $t('episodes.fields.name') }}\n              </span>\n              <button-simple\n                class=\"is-small flexrow-item\"\n                icon=\"plus\"\n                :text=\"''\"\n                @click=\"onAddMetadataClicked\"\n                v-if=\"(isCurrentUserManager || isCurrentUserSupervisor)\n                  && !isLoading\"\n              />\n            </div>\n          </th>\n          <metadata-header\n            :ref=\"`editor-${j}`\"\n            :key=\"descriptor.id\"\n            :descriptor=\"descriptor\"\n            :left=\"offsets['editor-' + j] ? `${offsets['editor-' + j]}px` : '0'\"\n            is-stick\n            @show-metadata-header-menu=\"event => showMetadataHeaderMenu(descriptor.id, event)\"\n            v-for=\"(descriptor, j) in stickedVisibleMetadataDescriptors\"\n            v-if=\"isShowInfos\"\n          />\n          <validation-header\n            :ref=\"`validation-${columnIndexInGrid}`\"\n            :key=\"columnId\"\n            :hidden-columns=\"hiddenColumns\"\n            :column-id=\"columnId\"\n            :validation-style=\"getValidationStyle(columnId)\"\n            :left=\"offsets['validation-' + columnIndexInGrid] ? `${offsets['validation-' + columnIndexInGrid]}px` : '0'\"\n            type=\"editor\"\n            is-stick\n            @show-header-menu=\"event => showHeaderMenu(columnId, columnIndexInGrid, event)\"\n            v-for=\"(columnId, columnIndexInGrid) in stickedDisplayedValidationColumns\"\n            v-if=\"!isLoading\"\n          />\n\n          <th\n            scope=\"col\"\n            class=\"description selectable\"\n            v-if=\"!isCurrentUserClient && isShowInfos && isEpisodeDescription\"\n          >\n            {{ $t('episodes.fields.description') }}\n          </th>\n\n          <metadata-header\n            :key=\"descriptor.id\"\n            :descriptor=\"descriptor\"\n            @show-metadata-header-menu=\"event => showMetadataHeaderMenu(descriptor.id, event)\"\n            v-for=\"descriptor in nonStickedVisibleMetadataDescriptors\"\n            v-if=\"isShowInfos\"\n          />\n          <th\n            scope=\"col\"\n            class=\"time-spent\"\n            ref=\"th-spent\"\n            v-if=\"!isCurrentUserClient &&\n                  isShowInfos &&\n                  isEpisodeTime &&\n                  metadataDisplayHeaders.timeSpent\"\n          >\n            {{ $t('episodes.fields.time_spent') }}\n          </th>\n          <th\n            scope=\"col\"\n            class=\"estimation\"\n            :title=\"$t('main.estimation')\"\n            ref=\"th-spent\"\n            v-if=\"!isCurrentUserClient &&\n                  isShowInfos &&\n                  isEpisodeEstimation &&\n                  metadataDisplayHeaders.estimation\"\n          >\n            {{ $t('main.estimation_short') }}\n          </th>\n\n          <validation-header\n            :key=\"columnId\"\n            :hidden-columns=\"hiddenColumns\"\n            :column-id=\"columnId\"\n            :validation-style=\"getValidationStyle(columnId)\"\n            type=\"episodes\"\n            @show-header-menu=\"event => {\n              showHeaderMenu(columnId, columnIndexInGrid, event)\n            }\"\n            v-for=\"(columnId, columnIndexInGrid) in nonStickedDisplayedValidationColumns\"\n            v-if=\"!isLoading\"\n          />\n          <th scope=\"col\" class=\"actions\" ref=\"actionsSection\">\n            <button-simple\n              :class=\"{\n                'is-small': true,\n                highlighted: isEmptyTask\n              }\"\n              icon=\"plus\"\n              :text=\"$t('tasks.create_tasks')\"\n              @click=\"$emit('create-tasks')\"\n              v-if=\"isCurrentUserManager &&\n                    displayedEpisodes.length > 0 &&\n                    !isLoading\"\n            />\n\n            <table-metadata-selector-menu\n              ref=\"headerMetadataSelectorMenu\"\n              :metadataDisplayHeaders.sync=\"metadataDisplayHeaders\"\n              :descriptors=\"episodeMetadataDescriptors\"\n              :exclude=\"{\n                timeSpent: !isEpisodeTime,\n                estimation: !isEpisodeEstimation\n              }\"\n              namespace=\"episodes\"\n              v-show=\"columnSelectorDisplayed && isShowInfos\"\n            />\n\n            <button-simple\n              class=\"is-small is-pulled-right\"\n              icon=\"down\"\n              @click=\"toggleColumnSelector\"\n              v-if=\"episodeMetadataDescriptors.length > 0 && isShowInfos\"\n            />\n          </th>\n        </tr>\n      </thead>\n      <tbody class=\"datatable-body\">\n        <tr\n          class=\"datatable-row\"\n          scope=\"row\"\n          :key=\"episode.id\"\n          :class=\"{canceled: episode.canceled}\"\n          v-for=\"(episode, i) in displayedEpisodes\"\n          v-if=\"!isLoading && isListVisible\"\n        >\n          <th\n            :class=\"{\n              'datatable-row-header': true,\n              'episode-name': true,\n              name: true,\n              strong: !episode.canceled\n            }\"\n          >\n            <div class=\"flexrow\">\n              <entity-thumbnail\n                :entity=\"episode\"\n                :width=\"isBigThumbnails ? 150 : 50\"\n                :height=\"isBigThumbnails ? 100 : 33\"\n                :empty-width=\"isBigThumbnails ? 150 : 50\"\n                :empty-height=\"isBigThumbnails ? 100 : 34\"\n              />\n              <router-link\n                tabindex=\"-1\"\n                :title=\"episode.name\"\n                :to=\"episodePath(episode.id)\"\n              >\n                {{ episode.name }}\n              </router-link>\n            </div>\n          </th>\n\n          <!-- Metadata stick -->\n          <td\n            :ref=\"`editor-${i}-${j}`\"\n            class=\"metadata-descriptor datatable-row-header\"\n            :title=\"episode.data ? episode.data[descriptor.field_name] : ''\"\n            :style=\"{'left': offsets['editor-' + j] ? `${offsets['editor-' + j]}px` : '0'}\"\n            :key=\"episode.id + '-' + descriptor.id\"\n            v-for=\"(descriptor, j) in stickedVisibleMetadataDescriptors\"\n            v-if=\"isShowInfos\"\n          >\n            <input\n              class=\"input-editor\"\n              @input=\"event => onMetadataFieldChanged(episode, descriptor, event)\"\n              @keyup.ctrl=\"event => onInputKeyUp(event, i, j)\"\n              :value=\"getMetadataFieldValue(descriptor, episode)\"\n              v-if=\"descriptor.choices.length === 0 && (isCurrentUserManager\n              || isSupervisorInDepartments(descriptor.departments))\"\n            />\n            <span\n              class=\"select\"\n              v-else-if=\"isCurrentUserManager\n              || isSupervisorInDepartments(descriptor.departments)\"\n            >\n            <select\n              class=\"select-input\"\n              @keyup.ctrl=\"event => onInputKeyUp(event, i, j)\"\n              @change=\"event => onMetadataFieldChanged(episode, descriptor, event)\"\n            >\n              <option\n                v-for=\"(option, i) in getDescriptorChoicesOptions(descriptor)\"\n                :key=\"`${episode.id}-${descriptor.id}-${i}-${option.label}-${option.value}`\"\n                :value=\"option.value\"\n                :selected=\"getMetadataFieldValue(descriptor, episode) === option.value\"\n              >\n                {{ option.label }}\n              </option>\n            </select>\n            </span>\n              <span class=\"metadata-value selectable\" v-else>\n              {{ getMetadataFieldValue(descriptor, episode) }}\n            </span>\n          </td>\n\n          <validation-cell\n            :ref=\"`validation-${i}-${j}`\"\n            :key=\"columnId + '-' + episode.id\"\n            :class=\"{\n              'validation-cell': !hiddenColumns[columnId],\n              'hidden-validation-cell': hiddenColumns[columnId],\n              'datatable-row-header': true\n            }\"\n            :column=\"taskTypeMap.get(columnId)\"\n            :columnY=\"j\"\n            :entity=\"episode\"\n            :is-assignees=\"isShowAssignations\"\n            :is-static=\"true\"\n            :left=\"offsets['validation-' + j] ? `${offsets['validation-' + j]}px` : '0'\"\n            :minimized=\"hiddenColumns[columnId]\"\n            :rowX=\"i\"\n            :selected=\"isSelected(i, j)\"\n            :sticked=\"true\"\n            :task-test=\"taskMap.get(episode.validations.get(columnId))\"\n            @select=\"(infos) => onTaskSelected(infos, true)\"\n            @unselect=\"(infos) => onTaskUnselected(infos, true)\"\n            v-for=\"(columnId, j) in stickedDisplayedValidationColumns\"\n            v-if=\"!isLoading\"\n          />\n\n          <description-cell\n            class=\"description\"\n            :entry=\"episode\"\n            :editable=\"isCurrentUserManager\"\n            @description-changed=\"value => onDescriptionChanged(episode, value)\"\n            v-if=\"!isCurrentUserClient && isShowInfos && isEpisodeDescription\"\n          />\n\n          <!-- other Metadata cells -->\n          <td\n            class=\"metadata-descriptor\"\n            :title=\"episode.data ? episode.data[descriptor.field_name] : ''\"\n            :key=\"episode.id + '-' + descriptor.id\"\n            v-for=\"(descriptor, j) in nonStickedVisibleMetadataDescriptors\"\n            v-if=\"isShowInfos\"\n          >\n            <input\n              class=\"input-editor\"\n              @input=\"event => onMetadataFieldChanged(episode, descriptor, event)\"\n              @keyup.ctrl=\"event => onInputKeyUp(event, i, j)\"\n              :value=\"getMetadataFieldValue(descriptor, episode)\"\n              v-if=\"descriptor.choices.length === 0 && (isCurrentUserManager\n              || isSupervisorInDepartments(descriptor.departments))\"\n            />\n            <span\n              class=\"select\"\n              v-else-if=\"isCurrentUserManager\n              || isSupervisorInDepartments(descriptor.departments)\"\n            >\n            <select\n              class=\"select-input\"\n              @keyup.ctrl=\"event => onInputKeyUp(event, i, j)\"\n              @change=\"event => onMetadataFieldChanged(episode, descriptor, event)\"\n            >\n              <option\n                v-for=\"(option, i) in getDescriptorChoicesOptions(descriptor)\"\n                :key=\"`${episode.id}-${descriptor.id}-${i}-${option.label}-${option.value}`\"\n                :value=\"option.value\"\n                :selected=\"getMetadataFieldValue(descriptor, episode) === option.value\"\n              >\n                {{ option.label }}\n              </option>\n            </select>\n            </span>\n              <span class=\"metadata-value selectable\" v-else>\n              {{ getMetadataFieldValue(descriptor, episode) }}\n            </span>\n          </td>\n\n          <td\n            class=\"time-spent selectable\"\n            v-if=\"!isCurrentUserClient && isShowInfos && isEpisodeTime && metadataDisplayHeaders.timeSpent\"\n          >\n            {{ formatDuration(episode.timeSpent) }}\n          </td>\n\n          <td\n            class=\"estimation selectable\"\n            v-if=\"!isCurrentUserClient && isShowInfos && isEpisodeEstimation && metadataDisplayHeaders.estimation\"\n          >\n            {{ formatDuration(episode.estimation) }}\n          </td>\n\n          <validation-cell\n            :ref=\"`validation-${i}-${j + stickedDisplayedValidationColumns.length}`\"\n            :class=\"{\n              'validation-cell': !hiddenColumns[columnId],\n              'hidden-validation-cell': hiddenColumns[columnId]\n            }\"\n            :key=\"`${columnId}-${episode.id}`\"\n            :column=\"taskTypeMap.get(columnId)\"\n            :entity=\"episode\"\n            :task-test=\"taskMap.get(episode.validations\n                        ? episode.validations.get(columnId)\n                        : null\n            )\"\n            :minimized=\"hiddenColumns[columnId]\"\n            :selected=\"isSelected(i, j + stickedDisplayedValidationColumns.length)\"\n            :rowX=\"i\"\n            :columnY=\"j\"\n            :is-assignees=\"isShowAssignations\"\n            @select=\"onTaskSelected\"\n            @unselect=\"onTaskUnselected\"\n            v-for=\"(columnId, j) in nonStickedDisplayedValidationColumns\"\n            v-if=\"!isLoading\"\n          />\n          <row-actions-cell\n            :entry=\"episode\"\n            @delete-clicked=\"$emit('delete-clicked', episode)\"\n            @edit-clicked=\"$emit('edit-clicked', episode)\"\n            v-if=\"isCurrentUserManager\"\n          />\n          <td class=\"actions\" v-else></td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n\n  <table-info\n    :is-loading=\"isLoading\"\n    :is-error=\"isError\"\n  />\n\n  <div\n    class=\"has-text-centered\"\n    v-if=\"isEmptyList && isCurrentUserClient && !isLoading\"\n  >\n    <p class=\"info\">\n      <img src=\"../../assets/illustrations/empty_shot.png\" />\n    </p>\n    <p class=\"info\">{{ $t('episodes.empty_list_client') }}</p>\n  </div>\n\n  <p\n    class=\"has-text-centered nb-episodes\"\n    v-if=\"!isEmptyList && !isLoading\"\n  >\n    {{ displayedEpisodesLength }} {{ $tc('episodes.number', displayedEpisodesLength) }}\n    <span\n      v-if=\"displayedEpisodesTimeSpent > 0 && displayedEpisodesEstimation > 0\"\n    >\n    ({{ formatDuration(displayedEpisodesTimeSpent) }}\n     {{ $tc('main.days_spent', displayedEpisodesTimeSpent) }},\n     {{ formatDuration(displayedEpisodesEstimation) }}\n     {{ $tc('main.man_days', displayedEpisodesEstimation) }})\n    </span>\n  </p>\n\n</div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\n\nimport { descriptorMixin } from '@/components/mixins/descriptors'\nimport { domMixin } from '@/components/mixins/dom'\nimport { entityListMixin } from '@/components/mixins/entity_list'\nimport { formatListMixin } from '@/components/mixins/format'\nimport { selectionListMixin } from '@/components/mixins/selection'\n\nimport ButtonSimple from '@/components/widgets/ButtonSimple'\nimport DescriptionCell from '@/components/cells/DescriptionCell'\nimport EntityThumbnail from '@/components/widgets/EntityThumbnail'\nimport MetadataHeader from '@/components/cells/MetadataHeader'\nimport RowActionsCell from '@/components/cells/RowActionsCell'\nimport TableMetadataHeaderMenu from '@/components/widgets/TableMetadataHeaderMenu'\nimport TableMetadataSelectorMenu from '@/components/widgets/TableMetadataSelectorMenu'\nimport TableHeaderMenu from '@/components/widgets/TableHeaderMenu'\nimport TableInfo from '@/components/widgets/TableInfo'\nimport ValidationCell from '@/components/cells/ValidationCell'\nimport ValidationHeader from '@/components/cells/ValidationHeader'\n\nexport default {\n  name: 'episode-list',\n  mixins: [\n    descriptorMixin,\n    domMixin,\n    formatListMixin,\n    entityListMixin,\n    selectionListMixin\n  ],\n\n  props: {\n    displayedEpisodes: {\n      type: Array,\n      default: () => []\n    },\n    isError: {\n      type: Boolean,\n      default: false\n    },\n    isLoading: {\n      type: Boolean,\n      default: false\n    },\n    validationColumns: {\n      type: Array,\n      default: () => []\n    },\n    departmentFilter: {\n      type: Array,\n      default: () => []\n    }\n  },\n\n  data () {\n    return {\n      type: 'episode',\n      hiddenColumns: {},\n      lastHeaderMenuDisplayed: null,\n      lastMetadaDataHeaderMenuDisplayed: null,\n      lastHeaderMenuDisplayedIndexInGrid: null,\n      lastSelectedEpisode: null,\n      lastSelection: null,\n      metadataDisplayHeaders: {\n        estimation: true,\n        timeSpent: true\n      },\n      offsets: {},\n      stickedColumns: {}\n    }\n  },\n\n  components: {\n    ButtonSimple,\n    DescriptionCell,\n    EntityThumbnail,\n    MetadataHeader,\n    RowActionsCell,\n    TableHeaderMenu,\n    TableMetadataHeaderMenu,\n    TableMetadataSelectorMenu,\n    TableInfo,\n    ValidationCell,\n    ValidationHeader\n  },\n\n  computed: {\n    ...mapGetters([\n      'currentProduction',\n      'episodeMap',\n      'episodeFilledColumns',\n      'episodeMetadataDescriptors',\n      'episodes',\n      'episodeSearchText',\n      'episodeSelectionGrid',\n      'currentEpisode',\n      'displayedEpisodesEstimation',\n      'displayedEpisodesLength',\n      'displayedEpisodesTimeSpent',\n      'isBigThumbnails',\n      'isCurrentUserAdmin',\n      'isCurrentUserManager',\n      'isCurrentUserSupervisor',\n      'isCurrentUserClient',\n      'isSingleEpisode',\n      'isEpisodeDescription',\n      'isEpisodeEstimation',\n      'isEpisodeTime',\n      'isShowAssignations',\n      'isShowInfos',\n      'nbSelectedTasks',\n      'taskMap',\n      'taskTypeMap',\n      'user'\n    ]),\n\n    isEmptyList () {\n      return (\n        this.displayedEpisodes.length &&\n        this.displayedEpisodes[0].length === 0 &&\n        !this.isLoading &&\n        !this.isError &&\n        (!this.episodeSearchText || this.episodeSearchText.length === 0)\n      )\n    },\n\n    isListVisible () {\n      return (\n        !this.isLoading &&\n        !this.isError &&\n        (\n          this.displayedEpisodesLength > 0\n        )\n      )\n    },\n\n    visibleColumns () {\n      let count = 2\n      count += !this.isCurrentUserClient &&\n        this.isShowInfos &&\n        this.isEpisodeDescription\n        ? 1\n        : 0\n      count += this.visibleMetadataDescriptors.length\n      count += !this.isCurrentUserClient &&\n        this.isShowInfos &&\n        this.isEpisodeTime && this.metadataDisplayHeaders.timeSpent\n        ? 1\n        : 0\n      count += !this.isCurrentUserClient &&\n        this.isShowInfos &&\n        this.isEpisodeEstimation && this.metadataDisplayHeaders.estimation\n        ? 1\n        : 0\n      count += this.displayedValidationColumns.length\n      return count\n    },\n\n    displayedValidationColumns () {\n      return this.validationColumns.filter((columnId) => {\n        return this.episodeFilledColumns[columnId] &&\n          (!this.hiddenColumns[columnId] || this.isShowInfos)\n      })\n    },\n\n    metadataDescriptors () {\n      return this.episodeMetadataDescriptors\n    },\n\n    localStorageStickKey () {\n      return `stick-episodes-${this.currentProduction.id}`\n    }\n  },\n\n  methods: {\n    ...mapActions([\n      'setEpisodeSelection'\n    ]),\n\n    isSelected (lineIndex, columnIndex) {\n      return (\n        this.episodeSelectionGrid[lineIndex] &&\n        this.episodeSelectionGrid[lineIndex][columnIndex]\n      )\n    },\n\n    episodePath (episodeId) {\n      return this.getPath('episode', episodeId)\n    },\n\n    getPath (section, episodeId) {\n      const route = {\n        name: section,\n        params: {\n          production_id: this.currentProduction.id\n        }\n      }\n      if (episodeId) {\n        route.params.episode_id = episodeId\n      }\n      return route\n    }\n  },\n\n  watch: {\n    displayedEpisodes () {\n      this.$options.lineIndex = {}\n    },\n\n    validationColumns () {\n      this.initHiddenColumns(this.validationColumns, this.hiddenColumns)\n    },\n\n    stickedColumns () {\n      this.updateOffsets()\n    },\n\n    isLoading () {\n      this.updateOffsets()\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dark {\n  th .input-editor,\n  td .select select,\n  td .input-editor {\n    color: $white;\n\n    option {\n      background: $dark-grey-light;\n      color: $white;\n    }\n\n    &:focus,\n    &:active,\n    &:hover {\n      background: $dark-grey-light;\n    }\n  }\n}\n\n.project {\n  min-width: 60px;\n  width: 60px;\n}\n\n.actions {\n  min-width: 160px;\n  position: sticky;\n}\n\nth.actions {\n  padding: 0.4em;\n}\n\n.name {\n  min-width: 100px;\n  width: 100px;\n}\n\n.name a {\n  color: inherit;\n}\n\n.name.episode-name {\n  min-width: 110px;\n  width: 110px;\n}\n\n.description {\n  min-width: 200px;\n  max-width: 200px;\n  width: 200px;\n}\n\n.validation-cell {\n  min-width: 150px;\n  max-width: 150px;\n  width: 150px;\n}\n\n.estimation,\n.time-spent {\n  min-width: 70px;\n  max-width: 70px;\n  width: 70px;\n}\n\ntd.name {\n  font-size: 1.2em;\n}\n\nspan.thumbnail-empty {\n  display: block;\n  width: 50px;\n  height: 30px;\n  background: #F3F3F3;\n}\n\n.info {\n  margin-top: 2em;\n}\n\n.info img {\n  max-width: 80vh;\n}\n\n.datatable-row th.name {\n  font-size: 1.1em;\n  padding: 6px;\n}\n\n.datatable-row-header {\n  cursor: pointer;\n}\n\nth .input-editor,\ntd .input-editor {\n  color: $grey-strong;\n  height: 100%;\n  padding: 0.5rem;\n  width: 100%;\n  background: transparent;\n  border: 1px solid transparent;\n  z-index: 100;\n\n  &:active,\n  &:focus,\n  &:hover {\n    background: transparent;\n    background: white;\n  }\n\n  &:active,\n  &:focus {\n    border: 1px solid $green;\n  }\n\n  &:hover {\n    border: 1px solid $light-green;\n  }\n}\n\ninput[type=\"number\"]::-webkit-outer-spin-button,\ninput[type=\"number\"]::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n}\n\ninput[type=\"number\"] {\n    -moz-appearance: textfield;\n}\n\n// Metadata cell CSS\n\ntd.metadata-descriptor {\n  height: 3.1rem;\n  padding: 0;\n}\n\ntd .select {\n  color: $grey-strong;\n  margin: 0;\n  height: 100%;\n  width: 100%;\n  border: 1px solid transparent;\n\n  &::after {\n    border-color: transparent;\n  }\n\n  &:active,\n  &:focus,\n  &:hover {\n    &::after {\n      border-color: $green;\n    }\n  }\n\n  select {\n    color: $grey-strong;\n    height: 100%;\n    width: 100%;\n    background: transparent;\n    border-radius: 0;\n    border: 1px solid transparent;\n\n    &:focus {\n      border: 1px solid $green;\n      background: white;\n    }\n\n    &:hover {\n      background: transparent;\n      background: white;\n      border: 1px solid $light-green;\n    }\n  }\n}\n\n.metadata-value {\n  padding: 0.8rem;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EpisodeList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EpisodeList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./EpisodeList.vue?vue&type=template&id=79a92dc4&scoped=true&\"\nimport script from \"./EpisodeList.vue?vue&type=script&lang=js&\"\nexport * from \"./EpisodeList.vue?vue&type=script&lang=js&\"\nimport style0 from \"./EpisodeList.vue?vue&type=style&index=0&id=79a92dc4&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"79a92dc4\",\n  null\n  \n)\n\nexport default component.exports","<template>\n<div class=\"columns fixed-page\">\n  <action-panel />\n\n  <div class=\"column main-column\">\n    <div class=\"episodes page\">\n      <div class=\"episode-list-header page-header\">\n        <div class=\"flexrow\">\n          <search-field\n            ref=\"episode-search-field\"\n            :can-save=\"true\"\n            :active=\"isSearchActive\"\n            @change=\"onSearchChange\"\n            @enter=\"saveSearchQuery\"\n            @save=\"saveSearchQuery\"\n            placeholder=\"ex: e01 episode=wip\"\n          />\n          <button-simple\n            class=\"flexrow-item\"\n            :title=\"$t('entities.build_filter.title')\"\n            icon=\"funnel\"\n            @click=\"() => modals.isBuildFilterDisplayed = true\"\n          />\n          <div class=\"filler\"></div>\n          <div class=\"flexrow flexrow-item\" v-if=\"!isCurrentUserClient\">\n            <show-assignations-button class=\"flexrow-item\" />\n            <show-infos-button class=\"flexrow-item\" />\n            <big-thumbnails-button class=\"flexrow-item\" />\n          </div>\n          <div class=\"flexrow\" v-if=\"isCurrentUserManager\">\n            <button-simple\n              class=\"flexrow-item\"\n              :text=\"$t('episodes.new_episode')\"\n              icon=\"plus\"\n              @click=\"showNewModal\"\n            />\n          </div>\n        </div>\n\n        <div class=\"query-list mt1\">\n          <search-query-list\n            :queries=\"episodeSearchQueries\"\n            @change-search=\"changeSearch\"\n            @remove-search=\"removeSearchQuery\"\n            v-if=\"!isEpisodesLoading && !initialLoading\"\n          />\n        </div>\n      </div>\n\n      <sorting-info\n        :label=\"$t('main.sorted_by')\"\n        :sorting=\"episodeSorting\"\n        @clear-sorting=\"onChangeSortClicked(null)\"\n        v-if=\"episodeSorting && episodeSorting.length > 0\"\n      />\n\n      <episode-list\n        ref=\"episode-list\"\n        :displayed-episodes=\"displayedEpisodes\"\n        :is-loading=\"isEpisodesLoading || initialLoading\"\n        :is-error=\"isEpisodesLoadingError\"\n        :validation-columns=\"episodeValidationColumns\"\n        :department-filter=\"departmentFilter\"\n        @add-metadata=\"onAddMetadataClicked\"\n        @change-sort=\"onChangeSortClicked\"\n        @create-tasks=\"showCreateTasksModal\"\n        @delete-all-tasks=\"onDeleteAllTasksClicked\"\n        @delete-clicked=\"onDeleteClicked\"\n        @delete-metadata=\"onDeleteMetadataClicked\"\n        @edit-clicked=\"onEditClicked\"\n        @edit-metadata=\"onEditMetadataClicked\"\n        @field-changed=\"onFieldChanged\"\n        @metadata-changed=\"onMetadataChanged\"\n        @scroll=\"saveScrollPosition\"\n      />\n    </div>\n  </div>\n\n  <div\n    id=\"side-column\"\n    class=\"column side-column\"\n    v-show=\"nbSelectedTasks === 1\"\n  >\n    <task-info\n      :task=\"selectedTasks.values().next().value\"\n    />\n  </div>\n\n  <edit-episode-modal\n    :active=\"modals.isNewDisplayed\"\n    :is-loading=\"loading.episode\"\n    :is-error=\"errors.episode\"\n    :episode-to-episode=\"episodeToEdit\"\n    @cancel=\"modals.isNewDisplayed = false\"\n    @confirm=\"confirmEditEpisode\"\n  />\n\n  <delete-modal\n    ref=\"delete-episode-modal\"\n    :active=\"modals.isDeleteDisplayed\"\n    :is-loading=\"loading.del\"\n    :is-error=\"errors.del\"\n    :text=\"deleteText()\"\n    :error-text=\"$t('episodes.delete_error')\"\n    @cancel=\"modals.isDeleteDisplayed = false\"\n    @confirm=\"confirmDeleteEpisode\"\n  />\n\n  <delete-modal\n    ref=\"delete-metadata-modal\"\n    :active=\"modals.isDeleteMetadataDisplayed\"\n    :is-loading=\"loading.deleteMetadata\"\n    :is-error=\"errors.deleteMetadata\"\n    :text=\"$t('productions.metadata.delete_text')\"\n    :error-text=\"$t('productions.metadata.delete_error')\"\n    @cancel=\"modals.isDeleteMetadataDisplayed = false\"\n    @confirm=\"confirmDeleteMetadata\"\n  />\n\n  <hard-delete-modal\n    ref=\"delete-all-tasks-modal\"\n    :active=\"modals.isDeleteAllTasksDisplayed\"\n    :is-loading=\"loading.deleteAllTasks\"\n    :is-error=\"errors.deleteAllTasks\"\n    :text=\"deleteAllTasksText()\"\n    :error-text=\"$t('tasks.delete_all_error')\"\n    :lock-text=\"deleteAllTasksLockText\"\n    :selection-option=\"true\"\n    @cancel=\"modals.isDeleteAllTasksDisplayed = false\"\n    @confirm=\"confirmDeleteAllTasks\"\n  />\n\n  <create-tasks-modal\n    :active=\"modals.isCreateTasksDisplayed\"\n    :is-loading=\"loading.creatingTasks\"\n    :is-loading-stay=\"loading.creatingTasksStay\"\n    :is-error=\"errors.creatingTasks\"\n    :title=\"$t('tasks.create_tasks_episode')\"\n    :text=\"$t('tasks.create_tasks_episode_explaination')\"\n    :error-text=\"$t('tasks.create_tasks_episode_failed')\"\n    @cancel=\"hideCreateTasksModal\"\n    @confirm=\"confirmCreateTasks\"\n    @confirm-and-stay=\"confirmCreateTasksAndStay\"\n  />\n\n  <add-metadata-modal\n    :active=\"modals.isAddMetadataDisplayed\"\n    :is-loading=\"loading.addMetadata\"\n    :is-loading-stay=\"loading.addMetadata\"\n    :is-error=\"errors.addMetadata\"\n    :descriptor-to-edit=\"descriptorToEdit\"\n    entity-type=\"Episode\"\n    @cancel=\"closeMetadataModal\"\n    @confirm=\"confirmAddMetadata\"\n  />\n\n  <add-thumbnails-modal\n    ref=\"add-thumbnails-modal\"\n    parent=\"episodes\"\n    :active=\"modals.isAddThumbnailsDisplayed\"\n    :is-loading=\"loading.addThumbnails\"\n    :is-error=\"errors.addThumbnails\"\n    @cancel=\"hideAddThumbnailsModal\"\n    @confirm=\"confirmAddThumbnails\"\n  />\n\n  <build-filter-modal\n    ref=\"build-filter-modal\"\n    :active=\"modals.isBuildFilterDisplayed\"\n    entity-type=\"episode\"\n    @cancel=\"modals.isBuildFilterDisplayed = false\"\n    @confirm=\"confirmBuildFilter\"\n  />\n\n  <edit-episode-modal\n    :active=\"modals.isNewDisplayed\"\n    :is-loading=\"loading.edit\"\n    :is-error=\"errors.edit\"\n    :episode-to-edit=\"episodeToEdit\"\n    @cancel=\"modals.isNewDisplayed = false\"\n    @confirm=\"confirmEditEpisode\"\n  />\n\n  <hard-delete-modal\n    :active=\"modals.isDeleteDisplayed\"\n    :is-loading=\"loading.del\"\n    :is-error=\"errors.del\"\n    :text=\"deleteText()\"\n    :error-text=\"$t('episodes.delete_error')\"\n    :lock-text=\"episodeToDelete ? episodeToDelete.name : ''\"\n    @cancel=\"modals.isDeleteDisplayed = false\"\n    @confirm=\"confirmDeleteEpisode\"\n  />\n</div>\n</template>\n\n<script>\nimport moment from 'moment'\nimport { mapGetters, mapActions } from 'vuex'\nimport csv from '@/lib/csv'\nimport { sortByName } from '@/lib/sorting'\nimport stringHelpers from '@/lib/string'\n\nimport { searchMixin } from '@/components/mixins/search'\nimport { entitiesMixin } from '@/components/mixins/entities'\n\nimport AddMetadataModal from '@/components/modals/AddMetadataModal'\nimport AddThumbnailsModal from '@/components/modals/AddThumbnailsModal'\nimport ActionPanel from '@/components/tops/ActionPanel'\nimport BigThumbnailsButton from '@/components/widgets/BigThumbnailsButton'\nimport BuildFilterModal from '@/components/modals/BuildFilterModal'\nimport ButtonSimple from '@/components/widgets/ButtonSimple'\nimport CreateTasksModal from '@/components/modals/CreateTasksModal'\nimport DeleteModal from '@/components/modals/DeleteModal'\nimport EditEpisodeModal from '@/components/modals/EditEpisodeModal'\nimport EpisodeList from '@/components/lists/EpisodeList.vue'\nimport HardDeleteModal from '@/components/modals/HardDeleteModal'\nimport SearchField from '@/components/widgets/SearchField'\nimport SearchQueryList from '@/components/widgets/SearchQueryList'\nimport SortingInfo from '@/components/widgets/SortingInfo'\nimport ShowAssignationsButton from '@/components/widgets/ShowAssignationsButton'\nimport ShowInfosButton from '@/components/widgets/ShowInfosButton'\nimport TaskInfo from '@/components/sides/TaskInfo.vue'\n\nexport default {\n  name: 'episodes',\n  mixins: [searchMixin, entitiesMixin],\n\n  components: {\n    ActionPanel,\n    AddMetadataModal,\n    AddThumbnailsModal,\n    BigThumbnailsButton,\n    BuildFilterModal,\n    ButtonSimple,\n    CreateTasksModal,\n    DeleteModal,\n    EditEpisodeModal,\n    EpisodeList,\n    HardDeleteModal,\n    SearchField,\n    SearchQueryList,\n    SortingInfo,\n    ShowAssignationsButton,\n    ShowInfosButton,\n    TaskInfo\n  },\n\n  data () {\n    return {\n      type: 'episode',\n      deleteAllTasksLockText: null,\n      descriptorToEdit: {},\n      departmentFilter: [],\n      episodeToDelete: null,\n      episodeToEdit: null,\n      formData: null,\n      genericColumns: [\n        'metadata_column_name => text value',\n        'task_type_name => task_status_name',\n        'task_type_name comment => comment text'\n      ],\n      historyEdit: {},\n      initialLoading: true,\n      isSearchActive: false,\n      optionalColumns: [\n        'Description'\n      ],\n      pageName: 'Episodes',\n      parsedCSV: [],\n      selectedDepartment: 'ALL',\n      taskTypeForTaskDeletion: null,\n      modals: {\n        isAddMetadataDisplayed: false,\n        isAddThumbnailsDisplayed: false,\n        isBuildFilterDisplayed: false,\n        isCreateTasksDisplayed: false,\n        isDeleteDisplayed: false,\n        isDeleteMetadataDisplayed: false,\n        isDeleteAllTasksDisplayed: false,\n        isImportRenderDisplayed: false,\n        isImportDisplayed: false,\n        isNewDisplayed: false\n      },\n      loading: {\n        addMetadata: false,\n        addThumbnails: false,\n        creatingTasks: false,\n        creatingTasksStay: false,\n        deleteAllTasks: false,\n        deleteMetadata: false,\n        episode: false,\n        del: false,\n        importing: false,\n        stay: false\n      },\n      errors: {\n        addMetadata: false,\n        deleteMetadata: false,\n        creatingTasks: false,\n        deleteAllTasks: false,\n        importing: false,\n        importingError: null\n      }\n    }\n  },\n\n  beforeDestroy () {\n    this.clearSelectedEpisodes()\n  },\n\n  created () {\n    this.setLastProductionScreen('episodes')\n  },\n\n  mounted () {\n    let searchQuery = ''\n    if (this.episodeSearchText && this.episodeSearchText.length > 0) {\n      this.searchField.setValue(this.episodeSearchText)\n    }\n    if (this.$route.query.search && this.$route.query.search.length > 0) {\n      searchQuery = '' + this.$route.query.search\n    }\n    if (searchQuery === 'undefined') searchQuery = ''\n    this.$refs['episode-list'].setScrollPosition(\n      this.episodeListScrollPosition\n    )\n    this.onSearchChange()\n    this.$refs['episode-list'].setScrollPosition(\n      this.episodeListScrollPosition\n    )\n    if (!this.isCurrentUserManager && this.user.departments.length > 0) {\n      this.selectedDepartment = 'MY_DEPARTMENTS'\n      this.departmentFilter = this.user.departments\n    } else {\n      this.departmentFilter = []\n    }\n\n    const finalize = () => {\n      this.initialLoading = false\n      if (this.$refs['episode-list']) {\n        this.$refs['episode-search-field'].setValue(searchQuery)\n        this.onSearchChange()\n        this.$refs['episode-list'].setScrollPosition(\n          this.episodeListScrollPosition\n        )\n      }\n    }\n\n    if (\n      this.episodeMap.size < 1 ||\n      this.episodeValidationColumns.length === 0 ||\n      this.episodeMap.values().next().project_id !== this.currentProduction.id\n    ) {\n      this.loadEpisodesWithTasks()\n        .then(() => {\n          this.initialLoading = false\n        })\n        .catch(console.error)\n    } else {\n      if (!this.isEpisodesLoading) this.initialLoading = false\n      finalize()\n    }\n  },\n\n  computed: {\n    ...mapGetters([\n      'currentEpisode',\n      'currentProduction',\n      'displayedEpisodes',\n      'departments',\n      'episodeMap',\n      'episodes',\n      'episodeSearchQueries',\n      'isCurrentUserClient',\n      'isCurrentUserManager',\n      'isEpisodeDescription',\n      'isEpisodeEstimation',\n      'isEpisodeTime',\n      'isEpisodesLoading',\n      'isEpisodesLoadingError',\n      'isShowAssignations',\n      'isTVShow',\n      'nbSelectedTasks',\n      'openProductions',\n      'selectedTasks',\n      'episodeMap',\n      'episodeFilledColumns',\n      'episodesCsvFormData',\n      'episodeSearchText',\n      'episodeValidationColumns',\n      'episodeListScrollPosition',\n      'episodeSorting',\n      'taskTypeMap',\n      'user',\n      'departmentMap',\n      'productionEpisodeTaskTypes'\n    ]),\n\n    renderColumns () {\n      var collection = [...this.dataMatchers, ...this.optionalColumns]\n\n      this.productionEpisodeTaskTypes.forEach(item => {\n        collection.push(item.name)\n        collection.push(item.name + ' comment')\n      })\n      return collection\n    },\n\n    filteredEpisodes () {\n      const episodes = {}\n      this.displayedEpisodes.forEach(episode => {\n        const episodeKey = episode.name\n        episodes[episodeKey] = true\n      })\n      return episodes\n    },\n\n    metadataDescriptors () {\n      return this.episodeMetadataDescriptors\n    }\n  },\n\n  methods: {\n    ...mapActions([\n      'addMetadataDescriptor',\n      'createTasks',\n      'changeEpisodeSort',\n      'clearSelectedEpisodes',\n      'commentTaskWithPreview',\n      'deleteAllEpisodeTasks',\n      'deleteEpisode',\n      'deleteMetadataDescriptor',\n      'editEpisode',\n      'getEpisodesCsvLines',\n      'hideAssignations',\n      'loadEpisodesWithTasks',\n      'newEpisode',\n      'removeEpisodeSearch',\n      'saveEpisodeSearch',\n      'setLastProductionScreen',\n      'setPreview',\n      'setEpisodeSearch',\n      'showAssignations',\n      'uploadEpisodeFile'\n    ]),\n\n    confirmAddMetadata (form) {\n      this.loading.addMetadata = true\n      form.entity_type = 'Episode'\n      this.addMetadataDescriptor(form)\n        .then(() => {\n          this.loading.addMetadata = false\n          this.modals.isAddMetadataDisplayed = false\n        })\n        .catch((err) => {\n          console.error(err)\n          this.loading.addMetadata = false\n          this.errors.addMetadata = true\n        })\n    },\n\n    showNewModal () {\n      this.episodeToEdit = {}\n      this.modals.isNewDisplayed = true\n    },\n\n    confirmDeleteEpisode () {\n      this.loading.del = true\n      this.errors.del = false\n      this.deleteEpisode(this.episodeToDelete)\n        .then(() => {\n          this.loading.del = false\n          this.modals.isDeleteDisplayed = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.loading.del = false\n          this.errors.del = true\n        })\n    },\n\n    runTasksCreation (form, selectionOnly) {\n      this.errors.creatingTasks = false\n      return this.createTasks({\n        type: 'episodes',\n        task_type_id: form.task_type_id,\n        project_id: this.currentProduction.id,\n        selectionOnly\n      })\n    },\n\n    reset () {\n      this.initialLoading = false\n      this.loadEpisodesWithTasks((err) => {\n        if (err) console.error(err)\n        this.initialLoading = false\n      })\n    },\n\n    resetEditModal () {\n      const form = { name: '' }\n      if (this.openProductions.length > 0) {\n        form.production_id = this.openProductions[0].id\n      }\n      this.episodeToEdit = form\n    },\n\n    applySearch (searchQuery) {\n      this.setEpisodeSearch(searchQuery)\n      this.setSearchInUrl()\n      this.isSearchActive = true\n    },\n\n    saveSearchQuery (searchQuery) {\n      this.saveEpisodeSearch(searchQuery)\n        .catch(console.error)\n    },\n\n    removeSearchQuery (searchQuery) {\n      this.removeEpisodeSearch(searchQuery)\n        .catch(console.error)\n    },\n\n    onExportClick () {\n      this.getEpisodesCsvLines()\n        .then(episodeLines => {\n          const nameData = [\n            moment().format('YYYY-MM-DD'),\n            'kitsu',\n            this.currentProduction.name,\n            this.$t('episodes.title')\n          ]\n          const name = stringHelpers.slugify(nameData.join('_'))\n          const headers = [\n            this.$t('episodes.fields.name'),\n            this.$t('episodes.fields.description')\n          ]\n          if (this.currentEpisode) {\n            headers.splice(0, 0, 'Episode')\n          }\n          sortByName([...this.currentProduction.descriptors])\n            .filter(d => d.entity_type === 'Episode')\n            .forEach((descriptor) => {\n              headers.push(descriptor.name)\n            })\n          if (this.isEpisodeTime) {\n            headers.push(this.$t('episodes.fields.time_spent'))\n          }\n          if (this.isEpisodeEstimation) {\n            headers.push(this.$t('main.estimation_short'))\n          }\n          this.episodeValidationColumns\n            .forEach(taskTypeId => {\n              headers.push(this.taskTypeMap.get(taskTypeId).name)\n              headers.push('Assignations')\n            })\n          csv.buildCsvFile(name, [headers].concat(episodeLines))\n        })\n    },\n\n    onFieldChanged ({ entry, fieldName, value }) {\n      const data = {\n        id: entry.id,\n        description: entry.description\n      }\n      data[fieldName] = value\n      this.editEpisode(data)\n    },\n\n    onMetadataChanged ({ entry, descriptor, value }) {\n      const metadata = {}\n      metadata[descriptor.field_name] = value\n      const data = {\n        id: entry.id,\n        data: metadata\n      }\n      this.editEpisode(data)\n    },\n\n    onEditClicked (episode) {\n      this.episodeToEdit = episode\n      this.modals.isNewDisplayed = true\n    },\n\n    onDeleteClicked (episode) {\n      this.episodeToDelete = episode\n      this.modals.isDeleteDisplayed = true\n    },\n\n    confirmEditEpisode (form) {\n      this.loading.edit = true\n      this.errors.edit = false\n\n      if (form.id) {\n        this.editEpisode(form)\n          .then(() => {\n            this.loading.edit = false\n            this.modals.isNewDisplayed = false\n          })\n          .catch(() => {\n            this.loading.edit = false\n            this.errors.edit = true\n          })\n      } else {\n        form.project_id = this.currentProduction.id\n        this.newEpisode(form)\n          .then(() => {\n            this.loading.edit = false\n            this.modals.isNewDisplayed = false\n          })\n          .catch(() => {\n            this.loading.edit = false\n            this.errors.edit = true\n          })\n      }\n    },\n\n    deleteText () {\n      const episode = this.episodeToDelete\n      if (episode) {\n        return this.$t('episodes.delete_text', { name: episode.name })\n      } else {\n        return ''\n      }\n    }\n  },\n\n  watch: {\n    $route () {\n      if (!this.$route.query) return\n      const search = this.$route.query.search\n      const actualSearch = this.$refs['episode-search-field'].getValue()\n      if (search !== actualSearch) {\n        this.searchField.setValue(search)\n        this.applySearch(search)\n      }\n    },\n\n    currentProduction () {\n      this.$refs['episode-search-field'].setValue('')\n      this.$store.commit('SET_EDIT_LIST_SCROLL_POSITION', 0)\n      this.initialLoading = false\n      this.reset()\n    },\n\n    isEpisodesLoading () {\n      if (!this.isEpisodesLoading) {\n        let searchQuery = ''\n        if (\n          this.$route.query.search &&\n          this.$route.query.search.length > 0\n        ) {\n          searchQuery = '' + this.$route.query.search\n        }\n        this.initialLoading = false\n        this.$refs['episode-search-field'].setValue(searchQuery)\n        this.$nextTick(() => {\n          this.applySearch(searchQuery)\n        })\n        if (this.$refs['episode-list']) {\n          this.$refs['episode-list'].setScrollPosition(\n            this.episodeListScrollPosition\n          )\n        }\n      }\n    }\n  },\n\n  metaInfo () {\n    return {\n      title: `${this.currentProduction.name} ${this.$t('episodes.title')} - Kitsu`\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.data-list {\n  margin-top: 0;\n}\n\n.page-header {\n  margin-bottom: 1em;\n}\n\n.flexcolumn {\n  align-items: flex-start;\n}\n\n.episodes {\n  display: flex;\n  flex-direction: column;\n}\n\n.columns {\n  display: flex;\n  flex-direction: row;\n  padding: 0;\n}\n\n.column {\n  overflow-y: auto;\n  padding: 0;\n}\n\n.main-column {\n  border-right: 3px solid $light-grey;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Episodes.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Episodes.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Episodes.vue?vue&type=template&id=321ac136&scoped=true&\"\nimport script from \"./Episodes.vue?vue&type=script&lang=js&\"\nexport * from \"./Episodes.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Episodes.vue?vue&type=style&index=0&id=321ac136&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"321ac136\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Episodes.vue?vue&type=style&index=0&id=321ac136&prod&lang=scss&scoped=true&\""],"sourceRoot":""}