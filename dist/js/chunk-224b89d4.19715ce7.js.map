{"version":3,"sources":["webpack:///./src/components/pages/Person.vue?0298","webpack:///./src/components/pages/Person.vue?5f77","webpack:///src/components/pages/Person.vue","webpack:///./src/components/pages/Person.vue?96dc","webpack:///./src/components/pages/Person.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","ref","staticClass","attrs","person","_e","_v","_s","name","class","isActiveTab","params","person_id","id","$t","tab","displayedPersonDoneTasks","length","on","onSearchChange","saveSearchQuery","zoomOptions","model","value","callback","$$v","zoomLevel","expression","sortOptions","currentSort","directives","rawName","personTaskSearchQueries","changeSearch","removeSearchQuery","sortedTasks","isTasksLoading","isTasksLoadingError","personTaskSelectionGrid","setPersonTasksScrollPosition","loggablePersonTasks","loggableDoneTasks","personTimeSpentMap","personTimeSpentTotal","personTasksSearchText","isCurrentUserAdmin","user","onDateChanged","onTimeSpentChange","onSetDayOff","onUnsetDayOff","scheduleItems","tasksStartDate","tasksEndDate","scheduleHeight","nbSelectedTasks","selectedTasks","values","next","staticRenderFns","mixins","components","Combobox","ComboboxNumber","PeopleAvatar","Schedule","SearchField","SearchQueryList","TaskInfo","TodosList","TimesheetList","data","activeTab","selectedDate","label","mounted","setTimeout","window","afterDestroy","tasks","userFilters","taskTypeMap","computed","mapGetters","filter","searchField","taskList","haveDoneList","firstBy","thenBy","scheduleTasks","children","rootMap","rootElements","rootStartDate","rootEndDate","rootElement","Object","startDate","endDate","man_days","methods","mapActions","resetScheduleHeight","pageHeight","buildProjectScheduleItem","project","avatar","color","priority","expanded","loading","editable","buildTaskScheduleItem","task","unresizable","parentElement","selectTab","loadPerson","personId","date","resizeHeaders","selectCurrent","selectDone","then","catch","updateActiveTab","timeSpentInfo","metaInfo","title","watch","$route","component"],"mappings":"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C,uBACAC,sBACAC,iBACAC,sBAGAC,gBACA,OACAC,kBACA3C,0BACAO,kBACAC,uBACAjC,YACAkD,iBACAmB,wCACA7C,aACA,cACA,WACA,yBACA,aACA,WACA,aACA,qBACA,wBAAA8C,QAAAnD,YACAG,YACAL,aACA,CAAAqD,aAAAnD,SACA,CAAAmD,UAAAnD,SACA,CAAAmD,UAAAnD,SACA,CAAAmD,UAAAnD,YAKAoD,mBAAA,WACA,uBACA,qCACA,sDAEAC,uBACA,uCACA,KACA,8CACAC,4DAGAC,wBACAD,8DACA,mBACA,wBACA,CAAAE,SAAAC,eAAAC,gCAIAC,gBACAC,gBACA,uBACA,2BACA,qBACA,uBACA,kBACA,YACA,4BACA,wBACA,0BACA,0BACA,qBACA,uBACA,gBACA,gBACA,cACA,UACA,IAEA3C,+BAAA,WACA,iCACA4C,oBACA,2DAIA3C,6BAAA,WACA,qCACA2C,oBACA,2DAIAC,uBACA,gDAGAC,oBACA,gCAGAC,wBACA,gCAGApD,uBACA,uCACA,gCACA,gCACA,kCACA,+BACA,SACA,OACAqD,oBACAC,yBACAA,4BAEA,EACA,OACAD,mBACAC,QACA,cACA,kBACA,WACA,sCADA,EADA,KAKAA,uBACAA,yBACAA,uBAEA,EACA,OACAD,KACA,cACA,kBACA,WACA,sCADA,EADA,KAKAC,uBACAA,yBACAA,uBAEA,EACA,OACAD,KACA,cACA,oBACA,aACA,0CADA,EADA,KAKAC,uBACAA,yBACAA,uBAGA,OACAD,yBACAC,uBACAA,yBACAA,wBAKArC,0BACA,mCACA,mCAEA,OAIAC,wBACA,mCACA,mCAEA,sBAIAqC,yBACA,SAIA,OAHA,wCACAC,0BAEA,GAGAxC,yBAAA,WACA,UACA,sCACA,yBACA,wCACA,gCACAyC,sBAEA,0BACA,+BACA,yBAGA,6BAmBA,OAlBAC,uBACA,YACA,sBACA,IACA,sBACAC,6BACAC,8BAEAC,gCACA,qCACA,wBAEAC,iBACAC,YACAC,UACAC,gBAGA,KAIAC,eACAC,gBACA,kBACA,uBACA,wBACA,0BACA,YACA,+BACA,eACA,iBACA,IAEAC,+BAAA,WACA,2BACA,8BACA,gCACA,8BACA,4BACA,8BACA,6BACA,iBACAC,UACA,4BACA,oDAMAC,qCACA,cACAC,OACAC,UACAC,mCACAC,WACAC,YACAC,WACApB,YACAqB,eAIAC,oCACA,IACA,EADA,QAGA,uCACA,oCAEA,aACAf,+BACA,oBACAA,qCAGA,wCACA,WACAC,6BACA,WACAA,6BACA,eACAA,2BAGA,oBACAA,2BAEA,2CACA,cACAe,OACA1G,qCACA0F,YACAC,UACAW,YACAC,WACAX,WACAY,YACAG,eACAC,gBACAR,cACAjB,eAIAjF,wBACA,2BAGA2G,sBAAA,WACA,iBACA,2BACAzC,uBACA,uCACA,MAIAzD,2BACA,8BAGAmG,uBAAA,WACA,kCACA,uBACA,sBACAC,wBACAC,uBACAhG,qBACA,oBACA,oBACA,yBACAoD,uBACA,YACA,wBACA,6BACA,gCAIA,oBACA,OAKA6C,yBAAA,WACA,2BACA,uCACA,mDAIAC,yBAAA,WACA,yBACA9C,uBACA,+CACA,MAGA+C,sBACA,uBAGA1F,yBACA,iEACA,8CACA,0BAIAb,4BACA,8BACAwG,qBAEAC,mBACA,wBAIA3F,8BACA,gCACA0F,qBAEAC,mBACA,wBAIAC,2BACA,uCACA,mCACA,sCAEA,wBAIA9E,8BACA+E,0BACAA,yBACA,sBAGAhF,0BACA,8CACA,iCAGAE,uBACA,OACAsE,wBACAC,wBAEA,mBAGAtE,yBACA,OACAqE,wBACAC,wBAEA,uBAIAQ,oBACA,OACAC,yEAIAC,OACAC,kBACA,mCAEA,uBACA,aACA,oBAEA,oBAIA3D,qBACA,8BCxpB+V,I,wBCQ3V4D,EAAY,eACd,EACA1I,EACAiE,GACA,EACA,KACA,WACA,MAIa,aAAAyE,E","file":"js/chunk-224b89d4.19715ce7.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Person.vue?vue&type=style&index=0&id=19f0f5d1&prod&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"page\",staticClass:\"columns fixed-page\"},[_c('div',{staticClass:\"column main-column\"},[_c('div',{staticClass:\"person page\"},[_c('div',{ref:\"header\",staticClass:\"flexrow page-header\"},[(_vm.person)?_c('div',{staticClass:\"flexrow-item\"},[_c('people-avatar',{attrs:{\"person\":_vm.person,\"size\":80,\"font-size\":30,\"is-text\":false}})],1):_vm._e(),_c('div',{staticClass:\"flexrow-item entity-title\"},[_vm._v(\" \"+_vm._s(_vm.person ? _vm.person.name : '')+\" \")])]),_c('div',{ref:\"tabs\",staticClass:\"task-tabs tabs\"},[(_vm.person)?_c('ul',[_c('li',{class:{'is-active': _vm.isActiveTab('todos')}},[_c('router-link',{attrs:{\"to\":{\n              name: 'person',\n              params: {\n                person_id: _vm.person.id\n              }\n            }}},[_vm._v(\" \"+_vm._s(_vm.$t('tasks.current'))+\" \")])],1),_c('li',{class:{'is-active': _vm.isActiveTab('done')}},[_c('router-link',{attrs:{\"to\":{\n              name: 'person-tab',\n              params: {\n                tab: 'done',\n                person_id: _vm.person.id\n              }\n            }}},[_vm._v(\" \"+_vm._s(_vm.$t('tasks.done'))+\" (\"+_vm._s(_vm.displayedPersonDoneTasks.length)+\") \")])],1),(_vm.isCurrentUserManager)?_c('li',{class:{'is-active': _vm.isActiveTab('timesheets')}},[_c('router-link',{attrs:{\"to\":{\n              name: 'person-tab',\n              params: {\n                tab: 'timesheets',\n                person_id: _vm.person.id\n              }\n            }}},[_vm._v(\" \"+_vm._s(_vm.$t('timesheets.title'))+\" \")])],1):_vm._e(),_c('li',{class:{'is-active': _vm.isActiveTab('schedule')}},[_c('router-link',{attrs:{\"to\":{\n              name: 'person-tab',\n              params: {\n                tab: 'schedule',\n                person_id: _vm.person.id\n              }\n            }}},[_vm._v(\" \"+_vm._s(_vm.$t('schedule.title'))+\" \")])],1)]):_vm._e()]),_c('div',{ref:\"search\",staticClass:\"flexrow\"},[_c('search-field',{ref:\"person-tasks-search-field\",class:{\n            'search-field': true,\n            'flexrow-item': true\n          },attrs:{\"can-save\":true},on:{\"change\":_vm.onSearchChange,\"save\":_vm.saveSearchQuery}}),_c('span',{staticClass:\"filler\"}),(_vm.isActiveTab('schedule'))?_c('combobox-number',{staticClass:\"flexrow-item zoom-level\",attrs:{\"label\":_vm.$t('schedule.zoom_level'),\"options\":_vm.zoomOptions},model:{value:(_vm.zoomLevel),callback:function ($$v) {_vm.zoomLevel=$$v},expression:\"zoomLevel\"}}):_vm._e(),_c('combobox',{staticClass:\"flexrow-item\",attrs:{\"label\":_vm.$t('main.sorted_by'),\"options\":_vm.sortOptions,\"locale-key-prefix\":\"tasks.fields.\"},model:{value:(_vm.currentSort),callback:function ($$v) {_vm.currentSort=$$v},expression:\"currentSort\"}})],1),_c('div',{ref:\"query\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isActiveTab('todos') || _vm.isActiveTab('timesheets')),expression:\"isActiveTab('todos') || isActiveTab('timesheets')\"}],staticClass:\"query-list\"},[_c('search-query-list',{attrs:{\"queries\":_vm.personTaskSearchQueries},on:{\"change-search\":_vm.changeSearch,\"remove-search\":_vm.removeSearchQuery}})],1)]),(_vm.isActiveTab('todos'))?_c('todos-list',{ref:\"task-list\",attrs:{\"tasks\":_vm.sortedTasks,\"is-loading\":_vm.isTasksLoading,\"is-error\":_vm.isTasksLoadingError,\"selection-grid\":_vm.personTaskSelectionGrid},on:{\"scroll\":_vm.setPersonTasksScrollPosition}}):_vm._e(),(_vm.isActiveTab('done'))?_c('todos-list',{ref:\"done-list\",attrs:{\"tasks\":_vm.displayedPersonDoneTasks,\"is-loading\":_vm.isTasksLoading,\"is-error\":_vm.isTasksLoadingError,\"done\":true,\"selectionGrid\":_vm.personTaskSelectionGrid}}):_vm._e(),(_vm.isActiveTab('timesheets'))?_c('timesheet-list',{attrs:{\"tasks\":_vm.loggablePersonTasks,\"done-tasks\":_vm.loggableDoneTasks,\"is-loading\":_vm.isTasksLoading,\"is-error\":_vm.isTasksLoadingError,\"time-spent-map\":_vm.personTimeSpentMap,\"time-spent-total\":_vm.personTimeSpentTotal,\"hide-done\":_vm.personTasksSearchText.length === 0,\"hide-day-off\":!(_vm.isCurrentUserAdmin || this.user.id == this.person.id)},on:{\"date-changed\":_vm.onDateChanged,\"time-spent-change\":_vm.onTimeSpentChange,\"set-day-off\":_vm.onSetDayOff,\"unset-day-off\":_vm.onUnsetDayOff}}):_vm._e(),(_vm.isActiveTab('schedule'))?_c('div',[(_vm.scheduleItems.length > 0)?_c('schedule',{ref:\"schedule-widget\",attrs:{\"start-date\":_vm.tasksStartDate,\"end-date\":_vm.tasksEndDate,\"hierarchy\":_vm.scheduleItems,\"zoom-level\":_vm.zoomLevel,\"height\":_vm.scheduleHeight,\"is-loading\":_vm.isTasksLoading,\"is-estimation-linked\":true}}):_c('div',{staticClass:\"has-text-centered\"},[_vm._v(\" There is no tasks scheduled for current person. \")])],1):_vm._e()],1)]),(_vm.nbSelectedTasks === 1)?_c('div',{staticClass:\"column side-column\"},[_c('task-info',{attrs:{\"task\":_vm.selectedTasks.values().next().value}})],1):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n<div ref=\"page\" class=\"columns fixed-page\">\n  <div class=\"column main-column\">\n    <div class=\"person page\">\n\n      <div ref=\"header\" class=\"flexrow page-header\">\n        <div class=\"flexrow-item\" v-if=\"person\">\n          <people-avatar\n            :person=\"person\"\n            :size=\"80\"\n            :font-size=\"30\"\n            :is-text=\"false\"\n          />\n        </div>\n        <div class=\"flexrow-item entity-title\">\n          {{ person ? person.name : '' }}\n        </div>\n      </div>\n\n      <div ref=\"tabs\" class=\"task-tabs tabs\">\n        <ul v-if=\"person\">\n          <li\n            :class=\"{'is-active': isActiveTab('todos')}\"\n          >\n            <router-link :to=\"{\n              name: 'person',\n              params: {\n                person_id: person.id\n              }\n            }\">\n              {{ $t('tasks.current')}}\n            </router-link>\n          </li>\n          <li\n            :class=\"{'is-active': isActiveTab('done')}\"\n          >\n            <router-link :to=\"{\n              name: 'person-tab',\n              params: {\n                tab: 'done',\n                person_id: person.id\n              }\n            }\">\n              {{ $t('tasks.done') }} ({{ displayedPersonDoneTasks.length }})\n            </router-link>\n          </li>\n          <li\n            :class=\"{'is-active': isActiveTab('timesheets')}\"\n            v-if=\"isCurrentUserManager\"\n          >\n            <router-link :to=\"{\n              name: 'person-tab',\n              params: {\n                tab: 'timesheets',\n                person_id: person.id\n              }\n            }\">\n              {{ $t('timesheets.title') }}\n            </router-link>\n          </li>\n          <li\n            :class=\"{'is-active': isActiveTab('schedule')}\"\n          >\n            <router-link :to=\"{\n              name: 'person-tab',\n              params: {\n                tab: 'schedule',\n                person_id: person.id\n              }\n            }\">\n              {{ $t('schedule.title')}}\n            </router-link>\n          </li>\n        </ul>\n      </div>\n\n      <div ref=\"search\" class=\"flexrow\">\n        <search-field\n          :class=\"{\n            'search-field': true,\n            'flexrow-item': true\n          }\"\n          ref=\"person-tasks-search-field\"\n          @change=\"onSearchChange\"\n          @save=\"saveSearchQuery\"\n          :can-save=\"true\"\n        />\n        <span class=\"filler\"></span>\n        <combobox-number\n          class=\"flexrow-item zoom-level\"\n          :label=\"$t('schedule.zoom_level')\"\n          :options=\"zoomOptions\"\n          v-model=\"zoomLevel\"\n          v-if=\"isActiveTab('schedule')\"\n        />\n        <combobox\n          class=\"flexrow-item\"\n          :label=\"$t('main.sorted_by')\"\n          :options=\"sortOptions\"\n          locale-key-prefix=\"tasks.fields.\"\n          v-model=\"currentSort\"\n        />\n      </div>\n\n      <div\n        ref=\"query\"\n      >\n        <div\n          class=\"query-list\"\n          v-show=\"isActiveTab('todos') || isActiveTab('timesheets')\"\n        >\n          <search-query-list\n            :queries=\"personTaskSearchQueries\"\n            @change-search=\"changeSearch\"\n            @remove-search=\"removeSearchQuery\"\n          />\n        </div>\n      </div>\n\n      <todos-list\n        ref=\"task-list\"\n        :tasks=\"sortedTasks\"\n        :is-loading=\"isTasksLoading\"\n        :is-error=\"isTasksLoadingError\"\n        :selection-grid=\"personTaskSelectionGrid\"\n        @scroll=\"setPersonTasksScrollPosition\"\n        v-if=\"isActiveTab('todos')\"\n      />\n\n      <todos-list\n        ref=\"done-list\"\n        :tasks=\"displayedPersonDoneTasks\"\n        :is-loading=\"isTasksLoading\"\n        :is-error=\"isTasksLoadingError\"\n        :done=\"true\"\n        :selectionGrid=\"personTaskSelectionGrid\"\n        v-if=\"isActiveTab('done')\"\n      />\n\n      <timesheet-list\n        :tasks=\"loggablePersonTasks\"\n        :done-tasks=\"loggableDoneTasks\"\n        :is-loading=\"isTasksLoading\"\n        :is-error=\"isTasksLoadingError\"\n        :time-spent-map=\"personTimeSpentMap\"\n        :time-spent-total=\"personTimeSpentTotal\"\n        :hide-done=\"personTasksSearchText.length === 0\"\n        :hide-day-off=\"!(isCurrentUserAdmin || this.user.id == this.person.id)\"\n        @date-changed=\"onDateChanged\"\n        @time-spent-change=\"onTimeSpentChange\"\n        @set-day-off=\"onSetDayOff\"\n        @unset-day-off=\"onUnsetDayOff\"\n        v-if=\"isActiveTab('timesheets')\"\n      />\n\n      <div\n        v-if=\"isActiveTab('schedule')\"\n      >\n        <schedule\n          ref=\"schedule-widget\"\n          :start-date=\"tasksStartDate\"\n          :end-date=\"tasksEndDate\"\n          :hierarchy=\"scheduleItems\"\n          :zoom-level=\"zoomLevel\"\n          :height=\"scheduleHeight\"\n          :is-loading=\"isTasksLoading\"\n          :is-estimation-linked=\"true\"\n          v-if=\"scheduleItems.length > 0\"\n        />\n        <div class=\"has-text-centered\" v-else>\n          There is no tasks scheduled for current person.\n        </div>\n      </div>\n    </div>\n  </div>\n  <div\n    class=\"column side-column\"\n    v-if=\"nbSelectedTasks === 1\"\n  >\n    <task-info\n      :task=\"selectedTasks.values().next().value\"\n    />\n  </div>\n</div>\n</template>\n\n<script>\nimport moment from 'moment-timezone'\nimport firstBy from 'thenby'\nimport { mapGetters, mapActions } from 'vuex'\n\nimport { formatListMixin } from '@/components/mixins/format'\nimport colors from '@/lib/colors'\nimport {\n  getFirstStartDate,\n  getLastEndDate,\n  parseDate\n} from '@/lib/time'\n\nimport Combobox from '@/components/widgets/Combobox'\nimport ComboboxNumber from '@/components/widgets/ComboboxNumber'\nimport PeopleAvatar from '@/components/widgets/PeopleAvatar'\nimport Schedule from '@/components/pages/schedule/Schedule'\nimport SearchField from '@/components/widgets/SearchField'\nimport SearchQueryList from '@/components/widgets/SearchQueryList'\nimport TimesheetList from '@/components/lists/TimesheetList'\nimport TodosList from '@/components/lists/TodosList'\nimport TaskInfo from '@/components/sides/TaskInfo'\n\nexport default {\n  name: 'person',\n  mixins: [formatListMixin],\n  components: {\n    Combobox,\n    ComboboxNumber,\n    PeopleAvatar,\n    Schedule,\n    SearchField,\n    SearchQueryList,\n    TaskInfo,\n    TodosList,\n    TimesheetList\n  },\n\n  data () {\n    return {\n      activeTab: 'todos',\n      currentSort: 'entity_name',\n      isTasksLoading: false,\n      isTasksLoadingError: false,\n      person: null,\n      scheduleHeight: 0,\n      selectedDate: moment().format('YYYY-MM-DD'),\n      sortOptions: [\n        'entity_name',\n        'priority',\n        'task_status_short_name',\n        'start_date',\n        'due_date',\n        'estimation',\n        'last_comment_date'\n      ].map((name) => ({ label: name, value: name })),\n      zoomLevel: 1,\n      zoomOptions: [\n        { label: 'Week', value: 0 },\n        { label: '1', value: 1 },\n        { label: '2', value: 2 },\n        { label: '3', value: 3 }\n      ]\n    }\n  },\n\n  mounted () {\n    this.updateActiveTab()\n    if (this.personTasksSearchText.length > 0) {\n      this.searchField.setValue(this.personTasksSearchText)\n    }\n    setTimeout(() => {\n      if (this.searchField) this.searchField.focus()\n    }, 100)\n    this.loadPerson(this.$route.params.person_id)\n    window.addEventListener('resize', this.resetScheduleHeight)\n  },\n\n  afterDestroy () {\n    window.removeEventListener('resize', this.resetScheduleHeight)\n    this.$store.commit(\n      'LOAD_PERSON_TASKS_END',\n      { tasks: [], userFilters: {}, taskTypeMap: this.taskTypeMap }\n    )\n  },\n\n  computed: {\n    ...mapGetters([\n      'displayedPersonTasks',\n      'displayedPersonDoneTasks',\n      'isCurrentUserAdmin',\n      'isCurrentUserManager',\n      'nbSelectedTasks',\n      'personMap',\n      'personTasksScrollPosition',\n      'personTasksSearchText',\n      'personTaskSearchQueries',\n      'personTaskSelectionGrid',\n      'personTimeSpentMap',\n      'personTimeSpentTotal',\n      'productionMap',\n      'selectedTasks',\n      'taskTypeMap',\n      'user'\n    ]),\n\n    loggablePersonTasks () {\n      return this.displayedPersonTasks\n        .filter((task) => {\n          return this.taskTypeMap.get(task.task_type_id).allow_timelog\n        })\n    },\n\n    loggableDoneTasks () {\n      return this.displayedPersonDoneTasks\n        .filter((task) => {\n          return this.taskTypeMap.get(task.task_type_id).allow_timelog\n        })\n    },\n\n    searchField () {\n      return this.$refs['person-tasks-search-field']\n    },\n\n    taskList () {\n      return this.$refs['task-list']\n    },\n\n    haveDoneList () {\n      return this.$refs['done-list']\n    },\n\n    sortedTasks () {\n      const isName = this.currentSort === 'entity_name'\n      const isPriority = this.currentSort === 'priority'\n      const isDueDate = this.currentSort === 'due_date'\n      const isStartDate = this.currentSort === 'start_date'\n      const tasks = [...this.displayedPersonTasks]\n      if (isName) {\n        return tasks.sort(\n          firstBy('project_name')\n            .thenBy('task_type_name')\n            .thenBy('full_entity_name')\n        )\n      } else if (isPriority) {\n        return tasks.sort(\n          firstBy('priority', -1)\n            .thenBy(\n              (a, b) => {\n                if (!a.due_date) return 1\n                else if (!b.due_date) return -1\n                else return a.due_date.localeCompare(b.due_date)\n              }\n            )\n            .thenBy('project_name')\n            .thenBy('task_type_name')\n            .thenBy('entity_name')\n        )\n      } else if (isDueDate) {\n        return tasks.sort(\n          firstBy(\n            (a, b) => {\n              if (!a.due_date) return 1\n              else if (!b.due_date) return -1\n              else return a.due_date.localeCompare(b.due_date)\n            }\n          )\n            .thenBy('project_name')\n            .thenBy('task_type_name')\n            .thenBy('entity_name')\n        )\n      } else if (isStartDate) {\n        return tasks.sort(\n          firstBy(\n            (a, b) => {\n              if (!a.start_date) return 1\n              else if (!b.start_date) return -1\n              else return a.start_date.localeCompare(b.start_date)\n            }\n          )\n            .thenBy('project_name')\n            .thenBy('task_type_name')\n            .thenBy('entity_name')\n        )\n      } else {\n        return tasks.sort(\n          firstBy(this.currentSort, -1)\n            .thenBy('project_name')\n            .thenBy('task_type_name')\n            .thenBy('entity_name')\n        )\n      }\n    },\n\n    tasksStartDate () {\n      if (this.scheduleItems.length > 0) {\n        return getFirstStartDate(this.scheduleTasks)\n      } else {\n        return moment()\n      }\n    },\n\n    tasksEndDate () {\n      if (this.scheduleItems.length > 0) {\n        return getLastEndDate(this.scheduleTasks)\n      } else {\n        return moment().add(15, 'days')\n      }\n    },\n\n    scheduleTasks () {\n      let children = []\n      this.scheduleItems.forEach(item => {\n        children = children.concat(item.children)\n      })\n      return children\n    },\n\n    scheduleItems () {\n      const rootMap = new Map()\n      this.sortedTasks.forEach(task => {\n        if (!rootMap.get(task.project_id)) {\n          const project = this.productionMap.get(task.project_id)\n          const rootElement = this.buildProjectScheduleItem(project)\n          rootMap.set(task.project_id, rootElement)\n        }\n        const rootElement = rootMap.get(task.project_id)\n        const taskItem = this.buildTaskScheduleItem(rootElement, task)\n        if (taskItem) rootElement.children.push(taskItem)\n      })\n\n      const rootElements = Array.from(rootMap.values())\n      rootElements.forEach(rootElement => {\n        let rootStartDate = moment()\n        let rootEndDate = moment().add(1, 'days')\n        let manDays = 0\n        if (rootElement.children.length > 0) {\n          rootStartDate = getFirstStartDate(rootElement.children)\n          rootEndDate = getLastEndDate(rootElement.children)\n        }\n        rootElement.children.forEach(task => {\n          const estimation = this.formatDuration(task.estimation)\n          if (estimation) manDays += task.estimation\n        })\n        Object.assign(rootElement, {\n          startDate: rootStartDate,\n          endDate: rootEndDate,\n          man_days: manDays\n        })\n      })\n      return rootElements\n    }\n  },\n\n  methods: {\n    ...mapActions([\n      'loadPersonTasks',\n      'setPersonTasksSearch',\n      'savePersonTasksSearch',\n      'removePersonTasksSearch',\n      'setDayOff',\n      'setPersonTasksScrollPosition',\n      'setTimeSpent',\n      'unsetDayOff'\n    ]),\n\n    resetScheduleHeight () {\n      this.$nextTick(() => {\n        if (this.isActiveTab('schedule')) {\n          const pageHeight = this.$refs.page.offsetHeight\n          const headerHeight = this.$refs.header.offsetHeight\n          const tabsHeight = this.$refs.tabs.offsetHeight\n          const searchHeight = this.$refs.search.offsetHeight\n          const queryHeight = this.$refs.query.offsetHeight\n          this.scheduleHeight =\n            pageHeight - headerHeight - tabsHeight - searchHeight - queryHeight\n          if (this.$refs['schedule-widget']) {\n            this.$refs['schedule-widget'].resetScheduleSize()\n          }\n        }\n      })\n    },\n\n    buildProjectScheduleItem (project) {\n      return {\n        ...project,\n        avatar: true,\n        color: colors.fromString(project.name, true),\n        priority: 1,\n        expanded: true,\n        loading: false,\n        children: [],\n        editable: false\n      }\n    },\n\n    buildTaskScheduleItem (rootElement, task) {\n      let startDate = moment()\n      let endDate\n\n      if (!task.start_date && !task.real_start_date &&\n          !task.due_date && !task.end_date) return null\n\n      if (task.start_date) {\n        startDate = parseDate(task.start_date)\n      } else if (task.real_start_date) {\n        startDate = parseDate(task.real_start_date)\n      }\n\n      const estimation = this.formatDuration(task.estimation)\n      if (task.due_date) {\n        endDate = parseDate(task.due_date)\n      } else if (task.end_date) {\n        endDate = parseDate(task.end_date)\n      } else if (task.estimation) {\n        endDate = startDate.clone().add(estimation, 'days')\n      }\n\n      if (!endDate || endDate.isBefore(startDate)) {\n        endDate = startDate.clone().add(1, 'days')\n      }\n      const taskType = this.taskTypeMap.get(task.task_type_id)\n      return {\n        ...task,\n        name: task.full_entity_name + ' / ' + taskType.name,\n        startDate: startDate,\n        endDate: endDate,\n        expanded: false,\n        loading: false,\n        man_days: estimation,\n        editable: false,\n        unresizable: false,\n        parentElement: rootElement,\n        color: taskType.color,\n        children: []\n      }\n    },\n\n    isActiveTab (tab) {\n      return this.activeTab === tab\n    },\n\n    selectTab (tab) {\n      this.activeTab = tab\n      if (this.isActiveTab('todos')) {\n        setTimeout(() => {\n          if (this.searchField) this.searchField.focus()\n        }, 100)\n      }\n    },\n\n    onSearchChange (text) {\n      this.setPersonTasksSearch(text)\n    },\n\n    loadPerson (personId) {\n      this.person = this.personMap.get(personId)\n      this.isTasksLoading = true\n      this.loadPersonTasks({\n        personId: this.person.id,\n        date: this.selectedDate,\n        callback: (err) => {\n          if (err) console.error(err)\n          this.isTasksLoading = false\n          this.isTasksLoadingError = false\n          setTimeout(() => {\n            if (this.taskList) {\n              this.$nextTick(() => {\n                this.taskList.setScrollPosition(\n                  this.personTasksScrollPosition\n                )\n              })\n            }\n            this.resizeHeaders()\n          }, 0)\n        }\n      })\n    },\n\n    resizeHeaders () {\n      this.$nextTick(() => {\n        if (this.taskList) this.taskList.resizeHeaders()\n        if (this.haveDoneList) this.haveDoneList.resizeHeaders()\n      })\n    },\n\n    selectCurrent () {\n      this.activeTab = 'current'\n      setTimeout(() => {\n        this.$refs['person-tasks-search-field'].focus()\n      }, 100)\n    },\n\n    selectDone () {\n      this.activeTab = 'done'\n    },\n\n    changeSearch (searchQuery) {\n      this.$refs['person-tasks-search-field'].setValue(searchQuery.search_query)\n      this.$refs['person-tasks-search-field'].$emit(\n        'change', searchQuery.search_query\n      )\n    },\n\n    saveSearchQuery (searchQuery) {\n      this.savePersonTasksSearch(searchQuery)\n        .then(() => {\n        })\n        .catch((err) => {\n          if (err) console.error(err)\n        })\n    },\n\n    removeSearchQuery (searchQuery) {\n      this.removePersonTasksSearch(searchQuery)\n        .then(() => {\n        })\n        .catch((err) => {\n          if (err) console.error(err)\n        })\n    },\n\n    updateActiveTab () {\n      const availableTabs = ['done', 'timesheets', 'schedule']\n      if (availableTabs.includes(this.$route.params.tab)) {\n        this.activeTab = this.$route.params.tab\n      } else {\n        this.activeTab = 'todos'\n      }\n    },\n\n    onTimeSpentChange (timeSpentInfo) {\n      timeSpentInfo.personId = this.person.id\n      timeSpentInfo.date = this.selectedDate\n      this.setTimeSpent(timeSpentInfo)\n    },\n\n    onDateChanged (date) {\n      this.selectedDate = moment(date).format('YYYY-MM-DD')\n      this.loadPerson(this.person.id)\n    },\n\n    onSetDayOff () {\n      const dayOff = {\n        personId: this.person.id,\n        date: this.selectedDate\n      }\n      this.setDayOff(dayOff)\n    },\n\n    onUnsetDayOff () {\n      const dayOff = {\n        personId: this.person.id,\n        date: this.selectedDate\n      }\n      this.unsetDayOff(dayOff)\n    }\n  },\n\n  metaInfo () {\n    return {\n      title: this.person ? `${this.person.name} - Kitsu` : '... - Kitsu'\n    }\n  },\n\n  watch: {\n    $route () {\n      const personId = this.$route.params.person_id\n\n      this.updateActiveTab()\n      if (this.person &&\n          this.person.id !== personId\n      ) {\n        this.loadPerson(personId)\n      }\n    },\n\n    activeTab () {\n      this.resetScheduleHeight()\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.name {\n  width: 230px;\n  min-width: 230px;\n}\n\n.page {\n  overflow: hidden;\n}\n\n.email {\n  width: 210px;\n  min-width: 210px;\n}\n.phone {\n  width: 140px;\n  min-width: 140px;\n}\n.skills {\n  width: 250px;\n}\n\n.query-list {\n  margin-top: 1em;\n}\n\n.task-tabs {\n  margin-top: 2em;\n}\n\n.task-tabs ul {\n  margin: 0;\n}\n\n.data-list {\n  margin-top: 0;\n}\n\n.dark .main-column {\n  border-right: 3px solid $grey-strong;\n}\n\n.person {\n  display: flex;\n  flex-direction: column;\n}\n\n.columns {\n  display: flex;\n  flex-direction: row;\n  padding: 0;\n}\n\n.column {\n  overflow-y: auto;\n  padding: 0;\n}\n\n.main-column {\n  border-right: 3px solid $light-grey;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Person.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Person.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Person.vue?vue&type=template&id=19f0f5d1&scoped=true&\"\nimport script from \"./Person.vue?vue&type=script&lang=js&\"\nexport * from \"./Person.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Person.vue?vue&type=style&index=0&id=19f0f5d1&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"19f0f5d1\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}